{
  "keyboard_shortcut": "", 
  "name": "regex_code", 
  "language": "JavaScript", 
  "trigger_enabled": 1, 
  "rank": 100, 
  "trigger": "trigger_startup", 
  "value": [
    "if( typeof ko.extensions.vilbur === 'undefined'  )", 
    "\tko.extensions.vilbur = {};", 
    "", 
    "", 
    "ko.extensions.vilbur.regex_code =\t(function()", 
    "{", 
    "\tfunction regex_code(){", 
    "", 
    "\t\treturn {", 
    "\t\t\tglobal:{", 
    "\t\t\t\t'comment':{", 
    "\t\t\t\t\t'dockblock':\t/\\/\\*\\*(?:.?(?!\\*\\/))+[\\r\\n](?:.|[\\r\\n])*?(?:\\*\\/)/gi,\t// match multiline docBlock with 2 stars on start E.G: '/**'", 
    "\t\t\t\t\t'block':\t/\\/\\*(?:.?(?!\\*\\/))+[\\r\\n](?:.|[\\r\\n])*?(?:\\*\\/)/gi,\t// match any multiline", 
    "\t\t\t\t},", 
    "\t\t\t\t'parameters':\t/\\(([^\\)]*)\\)/gi,\t// match any multiline", 
    "\t\t\t\t'return':\t/return\\s+(.*)/gi,", 
    "", 
    "\t\t\t},", 
    "\t\t\tJavaScript:{", 
    "\t\t\t\t//'function':\t/(?:function\\s+(\\w+)|\\S+\\.prototype\\.(\\w+)|this\\.(\\w+)\\s*=\\s*\\(*function).*[\\r\\n\\s]*?{/gi,", 
    "", 
    "\t\t\t\t'function':{", 
    "\t\t\t\t\t'simple':\t                            /function\\s+(\\w+)\\s*\\(([^\\)]*)\\)\\s*?{/gi,\t// E.G: 'function fnName(parameters){'", 
    "\t\t\t\t\t'private':\t       /var\\s+(\\w+)\\s*=\\s*\\s*function\\s*\\(([^\\)]*)\\)\\s*?{/gi,\t// E.G: 'var varFnName\t= function (parameters){'", 
    "\t\t\t\t\t'variable':\t     /var\\s+(\\w+)\\s*=\\s*\\(\\s*function\\s*\\(([^\\)]*)\\)\\s*?{/gi,\t// E.G: 'var fnName\t= (function (parameters){'", 
    "\t\t\t\t\t'public':\t    /this\\.(\\w+)\\s*=\\s*\\(*\\s*function\\s*\\(([^\\)]*)\\)\\s*?{/gi,\t// E.G: 'this.fnName\t= (function (parameters){'", 
    "\t\t\t\t\t'prototype':\t/\\w+\\.prototype\\.(\\w+)\\s*=\\s*function\\s*\\(([^\\)]*)\\)\\s*?{/gi,\t// E.G: 'fooClass.prototye.fnName = function (parameters){'", 
    "\t\t\t\t},", 
    "", 
    "\t\t\t\t//'test':{", 
    "\t\t\t\t//\t'test1':\t/test1/i,\t// match function\tE.G: 'function fnName(parameters){'", 
    "\t\t\t\t//\t'test2':\t/test2/i,\t// match fn prototype\tE.G: 'fooClass.prototye.fnName = function (parameters){'", 
    "\t\t\t\t//},", 
    "\t\t\t\t//'return':\t/[\\s](return\\s+.*?(?=[\\r\\n\\t;]))/gi, // clean match, remove unwanted characters on end", 
    "\t\t\t\t'variable':\t/[\\s](var\\s*\\w+\\s*=\\s*.*)/gi,", 
    "\t\t\t},", 
    "\t\t\tPHP:{", 
    "\t\t\t\t///(function\\s+\\S+.*[\\r\\n]?{)/gi,\t// function fooClassic(", 
    "\t\t\t},", 
    "\t\t\tAutohotkey:{", 
    "\t\t\t\t'function':{", 
    "\t\t\t\t\t//'public':   /(\\w+)\\(([^\\)]*)\\).*[\\r\\n\\s]*?{/gi,", 
    "\t\t\t\t\t'public': /\\b(?!_|if|while)(\\w+)\\b\\(([^\\)]*)\\)\\s*?{/gi,\t\t\t\t\t", 
    "\t\t\t\t\t'private':  /\\b(?!if|while)(_\\w+)\\b\\(([^\\)]*)\\)\\s*?{/gi,", 
    "\t\t\t\t},", 
    "\t\t\t},", 
    "\t\t\tMaxscript:{", 
    "\t\t\t\t'function':{", 
    "\t\t\t\t\t//'public':   /(\\w+)\\(([^\\)]*)\\).*[\\r\\n\\s]*?{/gi,", 
    "\t\t\t\t\t'private': /(?:fn|function)\\s*(_\\w+)([^=]+)=\\s*?\\(/gi,", 
    "\t\t\t\t\t'public':  /(?:fn|function)\\s*(\\w+)([^=]+)=\\s*?\\(/gi,\t\t\t\t", 
    "\t\t\t\t},", 
    "\t\t\t},", 
    "\t\t\t", 
    "\t\t};", 
    "", 
    "\t}", 
    "", 
    "\treturn regex_code;", 
    "", 
    "})();"
  ], 
  "version": "1.0.12", 
  "async": 1, 
  "type": "macro", 
  "icon": "chrome://fugue/skin/icons/tick.png"
}
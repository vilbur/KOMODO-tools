{
  "keyboard_shortcut": "Alt+5", 
  "name": "%word%", 
  "language": "JavaScript", 
  "trigger": "trigger_postopen", 
  "value": [
    "komodo.assertMacroVersion(3);", 
    "/*\t%word%\t*/", 
    "ko.views.manager.currentView.scimoz.beginUndoAction()", 
    "if ( komodo.view ) { komodo.view.setFocus(); }", 
    "", 
    "/**", 
    "*", 
    "**/", 
    "var char_replace = '%';", 
    "", 
    "/**", 
    "*", 
    "**/", 
    "try {", 
    "\tscimoz = ko.views.manager.currentView.scimoz;", 
    "\tvar wordUnderCursor  = ko.interpolate.getWordUnderCursor(scimoz);", 
    "\tvar CharBeforeCursor = chekCharBefore( char_replace );", 
    "\tvar CharAfterCursor  = checkChaAfter( char_replace );", 
    "\tif (!wordUnderCursor && CharBeforeCursor==char_replace ) {", 
    "\t\tko.commands.doCommand('cmd_left')", 
    "\t\tvar wordUnderCursor = ko.interpolate.getWordUnderCursor(scimoz);", 
    "\t}", 
    "\tif (!wordUnderCursor && CharAfterCursor==char_replace ) {", 
    "\t\tko.commands.doCommand('cmd_right')", 
    "\t\tvar wordUnderCursor = ko.interpolate.getWordUnderCursor(scimoz);", 
    "\t}", 
    "\t/*    SELECT WORD    */", 
    "\tko.commands.doCommand('cmd_selectWordUnderCursor')", 
    "\tko.commands.doCommand('cmd_beginningOfWord')", 
    "\tCharBefore_word = chekCharBefore( char_replace );", 
    "\tCharAfter_word  = checkChaAfter( char_replace )", 
    "\t//alert('CharBefore_word: '+CharBefore_word);", 
    "\t////alert(CharBefore_word);", 
    "\tif (wordUnderCursor) {", 
    "\t\t/*    save to clipboard    */", 
    "\t\tko.run.output.endSession();", 
    "\t\tko.run.runEncodedCommand( window, \"set /p=\"+char_replace+char_replace+wordUnderCursor+char_replace+char_replace+\"<nul| clip\")", 
    "\t\t/*    save to clipboard  with % sign e.g: %word%  */", 
    "\t\t////setTimeout( function(){", 
    "\t\t////\tko.run.output.endSession();", 
    "\t\t////\tko.run.runEncodedCommand( window, \"set /p=\"+wordUnderCursor+\"<nul| clip\")", 
    "\t\t////}, 100);", 
    "", 
    "\t\t/**", 
    "\t\t* if selectedText = '%yyfoo%'\t\t ; both  %operators% are there", 
    "\t\t**/", 
    "\t\t//var regex_operators_string = \"(\"+char_replace+\")([\\\\$\\\\w]+)(\"+char_replace+\")\"", 
    "\t\tvar regex_operators = new RegExp( \"[\"+char_replace+\"]([\\\\$\\\\w]+)[\"+char_replace+\"]\", \"gi\");", 
    "", 
    "\t\t/*", 
    "\t\t* if selectedText = '[%] foo[%]'* // e.g: '% foo' || '%   foo%'", 
    "\t\t**/", 
    "\t\t//var regex_expression_string = \"(\"+char_replace+\"*)\\s+([\\\\$\\\\w]+)(\"+char_replace+\"*)\";", 
    "\t\t//var regex_expression = new RegExp( \"(\"+char_replace+\")\\s+([\\\\$\\\\w]+)(\"+char_replace+\"*)\", \"gi\");", 
    "\t\tvar regex_expression = new RegExp( \"(%)\\\\s+([\\\\$\\\\w]+)(?:%*)\", \"gi\");", 
    "", 
    "\t\t/*", 
    "\t\t* if selectedText = '[%]foo[%]'* // e.g: 'foo' || '%foo' || 'foo%'\t\t; one  or both %operators% are missing", 
    "\t\t**/", 
    "\t\t//var regex_operators_string = \"(\"+char_replace+\"*)([\\\\$\\\\w]+)(\"+char_replace+\"*)\";", 
    "\t\tvar regex_operator_missing = new RegExp( \"(\"+char_replace+\"*)([\\\\$\\\\w]+)(\"+char_replace+\"*)\", \"gi\");", 
    "\t\t/*    WORD           */", 
    "\t\t//var regex_operator_word =  new RegExp(\"(\\\\s+)(\\\\w+)(\\\\s+)\", \"gi\");", 
    "\t\tvar regex_word = new RegExp(\"[^%]\\\\w+[^%\\s]*\", \"gi\");", 
    "", 
    "", 
    "\t\t\t/*------------ SELECT WHOLE STRING -----------------*/", 
    "\t\t\t//ko.commands.doCommand('cmd_left')", 
    "\t\t\tvar init_position = scimoz.currentPos;", 
    "\t\t\tvar start         = scimoz.currentPos;", 
    "\t\t\tvar init_word_start = scimoz.wordStartPosition(init_position, true);", 
    "\t\t\tvar init_word_end   = scimoz.wordEndPosition(init_position, true);", 
    "\t\t\tstart = scimoz.currentPos;", 
    "\t\t\tif (CharBefore_word==\"%\") start--", 
    "\t\t\tif (CharAfter_word==\"%\")  init_word_end++", 
    "\t\t\tif (CharBefore_word==\"$\") start--", 
    "\t\t\tscimoz.anchor     = start;", 
    "\t\t\tscimoz.currentPos = start;", 
    "", 
    "", 
    "\t\t\tko.commands.doCommand('cmd_selectCharPrevious')", 
    "\t\t\t//var pre_CharBefore = scimoz.selText;", 
    "\t\t\tif (scimoz.selText== \"%\") start = scimoz.currentPos", 
    "\t\t\t\t//alert('pre_CharBefore: '+pre_CharBefore);", 
    "", 
    "", 
    "\t\t\tko.commands.doCommand('cmd_wordLeft')", 
    "\t\t\tko.commands.doCommand('cmd_endOfWordExtend')", 
    "\t\t\tko.commands.doCommand('cmd_right')", 
    "\t\t\tko.commands.doCommand('cmd_selectCharPrevious')", 
    "", 
    "\t\t\t//var pre_pre_CharBefore = scimoz.selText;", 
    "\t\t\t//alert( pre_pre_CharBefore );", 
    "\t\t\tif (scimoz.selText== \"%\") start = scimoz.currentPos", 
    "", 
    "", 
    "", 
    "\t\t\tscimoz.anchor = start;", 
    "\t\t\tscimoz.currentPos = init_word_end;", 
    "", 
    "", 
    "\t\t/*    SELECT WORD PLUS NEXT CHARACTER           */", 
    "\t\tvar wholeStringSelection = scimoz.selText  ;", 
    "", 
    "\t\t/**  MATCH **/", 
    "\t\tvar match_word             = regex_word.exec(wordUnderCursor);", 
    "\t\tvar match_operators        = regex_operators.exec(wholeStringSelection);", 
    "\t\tvar match_expression       = regex_expression.exec(wholeStringSelection);", 
    "", 
    "", 
    "\t\tif ( match_operators ) {", 
    "\t\t\t/* \"word\"    TO  \"%word%\"   */", 
    "\t\t\t//alert('match_operators');", 
    "\t\t\tkomodo.view.selection = \"% \"+match_operators[1];", 
    "", 
    "\t\t}else if ( match_expression ) {", 
    "\t\t\t/* \"%word%\"  TO  \"% word%\"  */", 
    "\t\t\t//alert('match_expression');", 
    "\t\t\tkomodo.view.selection = match_expression[2];", 
    "", 
    "\t\t} else if ( match_word ) {", 
    "\t\t\t/* \"% word%\" TO  \"word\"     */", 
    "\t\t\t//alert('match_word');", 
    "\t\t\tkomodo.view.selection = \"%\"+wholeStringSelection+\"%\";", 
    "\t\t}", 
    "", 
    "", 
    "", 
    "\t\tko.commands.doCommand('cmd_cancel')", 
    "\t}", 
    "} finally {", 
    "\tko.views.manager.currentView.scimoz.endUndoAction()", 
    "}", 
    "", 
    "function selectWordAndSideCharacters() {", 
    "\tif (wordUnderCursor) {", 
    "\t\t/*    SELECT WORD PLUS PREVIOUS AND NEXT CHARACTER    */", 
    "\t\tko.commands.doCommand('cmd_left')", 
    "\t\tko.commands.doCommand('cmd_selectCharNext')", 
    "\t\tko.commands.doCommand('cmd_endOfWordExtend')", 
    "\t\tko.commands.doCommand('cmd_selectCharNext')", 
    "\t}", 
    "}", 
    "", 
    "function checkCursorPosition() {", 
    "\t////alert(CharNext);", 
    "}", 
    "", 
    "function goBackEmptySpace(charNum) {", 
    "\tif ( charNum > 0 ) {", 
    "\t\tfor(var i=0; i<charNum;i++) {", 
    "\t\t\tko.commands.doCommand('cmd_left')", 
    "\t\t}", 
    "\t}", 
    "}", 
    "", 
    "function chekCharBefore() {", 
    "\tvar wordUnderCursor = ko.interpolate.getWordUnderCursor(scimoz);", 
    "\tko.commands.doCommand('cmd_selectCharPrevious')", 
    "\tvar CharBefore_word = scimoz.selText;", 
    "\tko.commands.doCommand('cmd_right')", 
    "\treturn CharBefore_word", 
    "}", 
    "", 
    "function checkChaAfter() {", 
    "\tko.commands.doCommand('cmd_wordRight')", 
    "", 
    "\t//var wordUnderCursor = ko.interpolate.getWordUnderCursor(scimoz);", 
    "\tko.commands.doCommand('cmd_selectCharNext')", 
    "\tvar CharAfter_word = scimoz.selText;", 
    "\tko.commands.doCommand('cmd_wordLeft')", 
    "\t//ko.commands.doCommand('cmd_left')", 
    "\treturn CharAfter_word", 
    "}"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "trigger_enabled": false, 
  "async": false, 
  "type": "macro"
}
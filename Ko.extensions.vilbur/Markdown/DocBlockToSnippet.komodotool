{
  "keyboard_shortcut": "", 
  "name": "DocBlockToSnippet", 
  "language": "JavaScript", 
  "trigger_enabled": 1, 
  "value": [
    "if( typeof ko.extensions.vilbur === 'undefined'  )", 
    "\tko.extensions.vilbur = {};", 
    "if( typeof ko.extensions.vilbur.Markdown === 'undefined'  )", 
    "\tko.extensions.vilbur.Markdown = {};", 
    "", 
    "", 
    "/** MarkdownDocumentator", 
    " */", 
    "ko.extensions.vilbur.Markdown.DocBlockToSnippet = (function() {", 
    "", 
    "\t/* CONSTRUCT */", 
    "\tfunction DocBlockToSnippet(){", 
    "", 
    "\t\tvar snippet = [", 
    "\t\t\t'|\t|\t|\\n|---',", 
    "\t\t];", 
    "\t\t/** convert", 
    "\t\t */", 
    "\t\tthis.DocBlock = function(DocBlock)", 
    "\t\t{", 
    "\t\t\tvar setFnNameRow = function()", 
    "\t\t\t{", 
    "\t\t\t\tvar params_string = (function()", 
    "\t\t\t\t{", 
    "\t\t\t\t\treturn DocBlock.get('param').map(function(param){", 
    "\t\t\t\t\t\t\t\treturn param.name;", 
    "\t\t\t\t\t\t\t});", 
    "\t\t\t\t})();", 
    "\t\t\t\tLogger.info(params_string, 'params_string');", 
    "\t\t\t\tvar whitespace\t= params_string.length ? ' ' :'';", 
    "", 
    "\t\t\t\tsnippet.push('|__'+DocBlock.get('function').name+'__('+whitespace+params_string.join(', ')+whitespace+')\t|[[%tabstop:'+DocBlock.get('summary').lines+']]\t\t|');", 
    "\t\t\t};", 
    "\t\t\tvar getParameterRows = function()", 
    "\t\t\t{", 
    "\t\t\t\tDocBlock.get('param').map(function(param){", 
    "\t\t\t\t\tvar param_type\t= param.type=='void' ? '[[%tabstop:string]]' : param.type;", 
    "", 
    "\t\t\t\t\tsnippet.push('|`@param '+param_type+'` '+param.name+'\t|[[%tabstop:\t]]\t|');", 
    "\t\t\t\t});", 
    "\t\t\t};", 
    "", 
    "\t\t\tsetFnNameRow();", 
    "\t\t\tgetParameterRows();", 
    "", 
    "\t\t\tLogger.info(snippet, 'snippet');", 
    "", 
    "\t\t\treturn this;", 
    "\t\t};", 
    "", 
    "\t\t/** insertFakeSnippet", 
    "\t\t */", 
    "\t\tthis.insertSnippet = function()", 
    "\t\t{", 
    "\t\t\tvar fake_snippet = {", 
    "\t\t\t\thasAttribute: function(name) {", 
    "\t\t\t\t\treturn name in this;", 
    "\t\t\t\t},", 
    "\t\t\t\tgetStringAttribute: function(name) {", 
    "\t\t\t\t\treturn this[name];", 
    "\t\t\t\t},", 
    "\t\t\t\tname:\t\"name snippet\",", 
    "\t\t\t\tindent_relative: \"true\",", 
    "\t\t\t\tvalue:\tsnippet.join(\"\\n\")", 
    "\t\t\t};", 
    "\t\t\tko.projects.snippetInsert(fake_snippet);", 
    "\t\t};", 
    "", 
    "\t}", 
    "", 
    "\treturn DocBlockToSnippet;", 
    "", 
    "})();", 
    "", 
    "var Logger\t= new ko.extensions.Logger_v3('CodeParserTest.js').clear(false).off(false).header(false);", 
    "", 
    "var code_snippet =\t'\\n/** privateFunction comment'+", 
    "\t'\\n*/'+", 
    "\t'\\nvar private1WithPrams = function(param1, param2)'+", 
    "\t'\\n{'+", 
    "\t'\\n'+", 
    "\t'\\n};';", 
    "", 
    "var code_parsed\t= new ko.extensions.vilbur.CodeParser(code_snippet).lang('JavaScript').parse();", 
    "var DocBlock \t= new ko.extensions.vilbur.DocBlock(code_parsed);", 
    "var DocBlockToSnippet\t= new ko.extensions.vilbur.Markdown.DocBlockToSnippet();", 
    "", 
    "Logger.info(code_parsed, 'code_parsed');", 
    "Logger.info(DocBlock.get(), 'DocBlock');", 
    "", 
    "DocBlockToSnippet.DocBlock(DocBlock).insertSnippet();", 
    "", 
    "", 
    "", 
    "", 
    ""
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": 1, 
  "type": "macro", 
  "trigger": "trigger_startup"
}
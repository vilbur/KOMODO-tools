{
  "keyboard_shortcut": "", 
  "name": "StringCaseType", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "if( typeof ko.extensions.CaseConverter === 'undefined' )", 
    "\tko.extensions.CaseConverter = {};", 
    "", 
    "ko.extensions.CaseConverter.StringCaseType = {};", 
    "", 
    "/** Get case type of string", 
    " *", 
    " * @param\tstring\tstring", 
    " * @return\tstring\tCase type of string", 
    " */", 
    "(function()", 
    "{", 
    "\tfunction StringCaseType()", 
    "\t{\t\t", 
    "\t\tvar string\t= '';\t\t", 
    "\t\tvar words\t= [];", 
    "\t\t", 
    "\t\tvar snake_or_kebab\t= '';", 
    "\t\t", 
    "\t\tvar case_types = [", 
    "\t\t\t'lower',", 
    "\t\t\t'upper',", 
    "\t\t\t'capital',", 
    "\t\t\t'title',", 
    "\t\t\t'camel',", 
    "\t\t\t'pascal',", 
    "\t\t];", 
    "\t\t\t\t/** Test", 
    "\t\t */", 
    "\t\tthis.test = function()", 
    "\t\t{", 
    "\t\t\talert('StringCaseType');", 
    "\t\t};", 
    "\t\t/*---------------------------------------", 
    "\t\t\tBASE CASE", 
    "\t\t-----------------------------------------", 
    "\t\t*/", 
    "\t\t/** Get type of string", 
    "\t\t * @return\tstring\tType of string E.g.: C", 
    "\t\t */", 
    "\t\tthis.getStringType = function(_string)", 
    "\t\t{", 
    "\t\t\tstring = _string;", 
    "\t\t\tsetSnakeOrKebab();", 
    "\t\t\tsanitizeString();", 
    "\t\t\t", 
    "\t\t\twords\t= string.split(/\\s/g);", 
    "", 
    "\t\t\t/** concat type name", 
    "\t\t\t * @return\tstring\tE.G.: 'Capital snake case'", 
    "\t\t\t */", 
    "\t\t\tvar concatTypeName = function(case_type)", 
    "\t\t\t{", 
    "\t\t\t\treturn capitalize( (snake_or_kebab? snake_or_kebab+' ' : '') + case_type );", 
    "\t\t\t};", 
    "\t\t\t", 
    "\t\t\tfor(var c=0; c<case_types.length;c++)", 
    "\t\t\t\tif( this[method(case_types[c])]() )", 
    "\t\t\t\t\treturn concatTypeName(case_types[c]);", 
    "\t\t};", 
    "\t\t/*---------------------------------------", 
    "\t\t\tSTRING TEST", 
    "\t\t-----------------------------------------", 
    "\t\t*/", 
    "\t\t/** Match string which has not lower case", 
    "\t\t */", 
    "\t\tthis.isLowerCase = function()", 
    "\t\t{", 
    "\t\t\treturn string.match(/[A-Z]/g)===null;", 
    "\t\t}; ", 
    "\t\t/** Match string which has not upper case", 
    "\t\t */", 
    "\t\tthis.isUpperCase = function()", 
    "\t\t{", 
    "\t\t\treturn string.match(/[a-z]/g)===null;", 
    "\t\t}; ", 
    "\t\t/** If only first word is capital", 
    "\t\t */", 
    "\t\tthis.isCapitalCase = function()", 
    "\t\t{", 
    "\t\t\tvar is_capital\t= false;", 
    "\t\t\t", 
    "\t\t\tfor(var w=0; w<words.length;w++)", 
    "\t\t\t\tif( isCapitalWord(words[w]) && w===0 )", 
    "\t\t\t\t\tis_capital = true;", 
    "\t\t\t\t\t", 
    "\t\t\t\telse if( ! isLowerCaseWord(words[w]) )", 
    "\t\t\t\t\tis_capital = false;", 
    "\t\t\t\t", 
    "\t\t\treturn is_capital;", 
    "\t\t}; ", 
    "\t\t/** If all words are capital", 
    "\t\t */", 
    "\t\tthis.isTitleCase = function()", 
    "\t\t{", 
    "\t\t\tvar is_title\t= true;", 
    "\t\t\t", 
    "\t\t\tfor(var w=0; w<words.length;w++)", 
    "\t\t\t\tif( ! isCapitalWord(words[w]) )", 
    "\t\t\t\t\tis_title = false;", 
    "", 
    "\t\t\treturn is_title;", 
    "\t\t};", 
    "\t\t/** isCamelCase", 
    "\t\t */", 
    "\t\tthis.isCamelCase = function()", 
    "\t\t{", 
    "\t\t\treturn string.match(/^[^A-Z][^A-Z]*(([A-Z][^A-Z]*)+)$/g)!==null;", 
    "\t\t}; ", 
    "\t\t/** isPascalCase", 
    "\t\t */", 
    "\t\tthis.isPascalCase = function()", 
    "\t\t{", 
    "\t\t\treturn  string.match(/^[A-z]+$/gi)!==null && string.match(/^[A-Z][^A-Z]+(([A-Z][^A-Z]*)+)$/g)!==null;", 
    "\t\t}; ", 
    "\t\t", 
    "\t\t/*---------------------------------------", 
    "\t\t\tPRIVATE", 
    "\t\t-----------------------------------------", 
    "\t\t*/", 
    "\t\t/** setSnakeOrKebab", 
    "\t\t */", 
    "\t\tvar setSnakeOrKebab = function()", 
    "\t\t{", 
    "\t\t\tsnake_or_kebab = string.match(/_/gi) ? 'snake' : (string.match(/-/gi) ? 'kebab' : ''); ", 
    "\t\t};", 
    "\t\t/** Replace '_' and '-' with whitespace ' '", 
    "\t\t */", 
    "\t\tvar sanitizeString = function()", 
    "\t\t{", 
    "\t\t\tstring\t= string.replace(/[-_]+/gi, ' ').replace(/\\s+/gi, ' ').trim(); ", 
    "\t\t}; ", 
    "\t\t/*---------------------------------------", 
    "\t\t\tWORD TETS", 
    "\t\t-----------------------------------------", 
    "\t\t*/", 
    "\t\t/** ", 
    "\t\t */", 
    "\t\tvar isCapitalWord = function(word)", 
    "\t\t{", 
    "\t\t\treturn word.match(/^[A-Z][^A-Z]*$/g);", 
    "\t\t}; ", 
    "\t\t/** ", 
    "\t\t */", 
    "\t\tvar isLowerCaseWord = function(word)", 
    "\t\t{", 
    "\t\t\treturn word.match(/[A-Z]/g)===null;", 
    "\t\t};", 
    "\t\t/*---------------------------------------", 
    "\t\t\tHELPERS", 
    "\t\t-----------------------------------------", 
    "\t\t*/", 
    "\t\t/** Get method in this object by case type", 
    "\t\t * @example 'isCamelCase'", 
    "\t\t */", 
    "\t\tvar method = function(case_type)", 
    "\t\t{", 
    "\t\t\treturn 'is'+capitalize(case_type)+'Case';", 
    "\t\t}; ", 
    "\t\t/** capitalize", 
    "\t\t */", 
    "\t\tvar capitalize = function(string)", 
    "\t\t{", 
    "\t\t\treturn string.charAt(0).toUpperCase() + string.slice(1);", 
    "\t\t};", 
    "", 
    "\t}", 
    "\treturn StringCaseType;", 
    "", 
    "})().apply(ko.extensions.CaseConverter.StringCaseType);"
  ], 
  "trigger": "trigger_postopen", 
  "rank": 100, 
  "version": "1.0.12", 
  "async": false, 
  "type": "macro", 
  "icon": "chrome://famfamfamsilk/skin/icons/text_uppercase.png"
}
{
  "keyboard_shortcut": "Ctrl+Q", 
  "name": "COMMENT_ON", 
  "language": "JavaScript", 
  "trigger": "trigger_postopen", 
  "value": [
    "komodo.assertMacroVersion(3);", 
    "ko.views.manager.currentView.scimoz.beginUndoAction()", 
    "", 
    "try {", 
    "        if (komodo.view) { komodo.view.setFocus(); }", 
    "        scimoz = ko.views.manager.currentView.scimoz;", 
    "        var currentLanguage = ko.views.manager.currentView.languageObj.name;", 
    "        var selectedText = scimoz.selText;", 
    "        var blade_re = /^(@.*)$/;", 
    "        var blade_bracket = /^({{.*)$/;", 
    "        var blade_bracket_esc = /^({\\!\\!.*)$/;", 
    "        var blade_bracket_trigger = false", 
    "", 
    "        if (selectedText == '' ) {", 
    "            //alert('NOTHING SELECTED');", 
    "            // select line", 
    "            ko.commands.doCommand('cmd_home')", 
    "            ko.commands.doCommand('cmd_selectEnd')", 
    "            selectedText = scimoz.selText;", 
    "        }", 
    "", 
    "        if (selectedText.match(blade_re)!==null && currentLanguage !== 'Less' && currentLanguage !== 'SCSS') {", 
    "            /*\tif blade template\te.g. @include  */", 
    "            //alert('blade_re');", 
    "            ko.commands.doCommand('cmd_cut')", 
    "            komodo.view.selection = '{{--';", 
    "", 
    "            ko.commands.doCommand('cmd_paste')", 
    "            komodo.view.selection = '--}}';", 
    "            ko.commands.doCommand('cmd_home')", 
    "            ko.commands.doCommand('cmd_selectEnd')", 
    "", 
    "        }else if (selectedText.match(blade_bracket)!==null) {", 
    "            /*\tif blade template\te.g. @include  */", 
    "            blade_bracket_trigger = true;", 
    "", 
    "        }else if (selectedText.match(blade_bracket_esc)!==null) {", 
    "            /*\tif blade template\te.g. @include  */", 
    "            blade_bracket_trigger = true", 
    "", 
    "        }else {", 
    "            //alert('comment');", 
    "            if (currentLanguage == 'SCSS' ) {   // if scss: /*fooComment*/ convert to /* fooComment */", 
    "                /*\tSCSS\t*/", 
    "                //alert( currentLanguage );", 
    "                ko.commands.doCommand('cmd_comment')", 
    "", 
    "                //if (selectedText == '' ){", 
    "                    //ko.commands.doCommand('cmd_home')", 
    "                    //ko.commands.doCommand('cmd_selectEnd')", 
    "                //}", 
    "", 
    "                ko.find.replaceAllInMacro(window, 1, '^(.*)$', '//\\\\1', false, 2, 0, false, false);", 
    "                //}else {", 
    "                //    var selectedText = scimoz.selText;", 
    "                //    if (selectedText.match(/\\/\\*(.*)\\*\\//)!=null ) {", 
    "                //        ko.find.replaceAllInMacro(window, 1, '\\\\/\\\\*(.*)\\\\*\\\\/', '/* \\\\1 */', false, 2, 0, false, false);", 
    "                //    }", 
    "                //}", 
    "", 
    "", 
    "", 
    "", 
    "            }else {", 
    "                /*\tANOTHER FILE TYPE\t*/", 
    "                ko.commands.doCommand('cmd_comment')", 
    "", 
    "            }", 
    "", 
    "", 
    "        }", 
    "", 
    "", 
    "        if (blade_bracket_trigger) {", 
    "             ko.find.replaceAllInMacro(window, 1, '({{+)(.*?)(}}+)', '\\\\1--\\\\2--\\\\3', false, 2, 0, false, false);", 
    "             ko.find.replaceAllInMacro(window, 1, '({\\!\\!)(.*?)(\\!\\!})', '{{--!!\\\\2!!--}}', false, 2, 0, false, false);", 
    "        }", 
    "        //ko.commands.doCommand('cmd_save')", 
    "        //ko.statusBar.AddMessage('SAVED', 'editor', 3000);", 
    "        ko.commands.doCommand('cmd_cancel')", 
    "", 
    "} finally {", 
    "    ko.views.manager.currentView.scimoz.endUndoAction()", 
    "}"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "trigger_enabled": false, 
  "async": false, 
  "type": "macro"
}
{
  "keyboard_shortcut": "", 
  "name": "BuildExtension", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/** Search file or dir in path backwards", 
    " * ", 
    " * @example fileSearch( 'C:\\dir\\subdir', 'file.txt' )\tSearch 'file.txt' in 'C:\\dir\\subdir', C:\\dir' and 'C:\\'", 
    " * @example fileSearch( 'C:\\dir\\subdir', /.txt/g )\tSearch '.txt' files ", 
    " * ", 
    " * @param\tstring\tpath\tPath where to search ", 
    " * @param\tstring|RegEx\tsearch\tFile or dir to search", 
    " *", 
    " * @return\tstring|null\tPath where of found OR null if not found", 
    " */", 
    "var fileSearch = function( path, search )", 
    "{", 
    "\tvar koFile\t= require(\"ko/file\"); ", 
    "\tvar path_split\t= path.split('\\\\');", 
    "\tvar found_path\t= null;", 
    "\t", 
    "\tif( search.constructor.name !== 'RegExp' )", 
    "\t\tsearch = new RegExp(search, 'gi');", 
    "\t", 
    "\t/** fileExists", 
    "\t*/", 
    "\tfunction fileExists()", 
    "\t{", 
    "\t\tvar dir_path\t= path_split.join('\\\\') + '\\\\';", 
    "\t\tvar list\t= koFile.list(dir_path);", 
    "\t\t", 
    "\t\tfor(var i=0; i<list.length;i++)", 
    "\t\t\tif( list[i].match(  search ) && ! found_path )", 
    "\t\t\t\tfound_path = dir_path + list[i];", 
    "", 
    "\t\treturn  found_path !== null;", 
    "\t}", 
    "\t", 
    "\twhile ( ! fileExists() && path_split.length > 1 )", 
    "\t\tpath_split.pop();", 
    "", 
    "\treturn found_path ? found_path : null;", 
    "\t", 
    "};", 
    "/** ", 
    " *", 
    " */", 
    "var BuildExtension = function(chrome_manifest_dir)", 
    "{", 
    "\t", 
    "\tvar python_exe =  ko.interpolate.interpolateString([", 
    "\t\t'%(path:installDir)',", 
    "\t]) + \"\\\\lib\\\\python\\\\python.exe\";", 
    "\t", 
    "\tvar python_koext\t=  ko.interpolate.interpolateString([", 
    "\t\t'%(path:sdkDir)',", 
    "\t]) + \"\\\\bin\\\\koext.py\";", 
    "\t", 
    "\tvar command\t= '\"' + python_exe + '\" \"'+python_koext + '\" build -i chrome.manifest -d \"' + chrome_manifest_dir + '\"';\t", 
    "\tComponents.classes[\"@activestate.com/koRunService;1\"]", 
    "\t\t\t\t\t.createInstance(Components.interfaces.koIRunService)", 
    "\t\t\t\t\t.RunAndNotify(command, \"\", \"\" , \"\" );", 
    "};", 
    "", 
    "/** ", 
    " *", 
    " */", 
    "var InstallExtension = function(xpi_path)", 
    "{", 
    "", 
    "\tvar command\t= 'start \"\" komodo.exe \"' + xpi_path + '\"';", 
    "\tComponents.classes[\"@activestate.com/koRunService;1\"]", 
    "\t\t\t\t\t.createInstance(Components.interfaces.koIRunService)", 
    "\t\t\t\t\t.RunAndNotify(command, \"\", \"\" , \"\" );", 
    "};", 
    "/** restartKomodo", 
    " */", 
    "var restartKomodo = function()", 
    "{", 
    "\t/** killKomodo", 
    "\t */", 
    "\tvar killKomodo = (function()", 
    "\t{", 
    "\t\tComponents.classes[\"@activestate.com/koRunService;1\"]", 
    "\t\t\t\t\t\t.createInstance(Components.interfaces.koIRunService)", 
    "\t\t\t\t\t\t.RunAndNotify( 'ping 127.0.0.1 -n 1 > nul  &taskkill /f /im \"komodo.exe\"', \"\", \"\" , \"\" );", 
    "\t})();", 
    "\t/** startKomodo", 
    "\t */", 
    "\tvar startKomodo = (function()", 
    "\t{", 
    "\t\tComponents.classes[\"@activestate.com/koRunService;1\"]", 
    "\t\t\t\t\t\t.createInstance(Components.interfaces.koIRunService)", 
    "\t\t\t\t\t\t.RunAndNotify( 'ping 127.0.0.1 -n 2 > nul  &start \"\" \"komodo.exe\"', \"\", \"\" , \"\" );", 
    "\t})();", 
    "", 
    "\t", 
    "}; ", 
    "", 
    "/* Build extension", 
    " *", 
    " */", 
    "var koFile\t= require(\"ko/file\"); ", 
    "var current_file_dir\t= koFile.dirname( ko.views.manager.currentView.koDoc.file.path );", 
    "var chrome_manifest_path\t= fileSearch( current_file_dir, 'chrome.manifest$' ); ", 
    "var chrome_manifest_dir\t= chrome_manifest_path ? koFile.dirname(chrome_manifest_path) : null;", 
    "", 
    "if( ! chrome_manifest_path )", 
    "\treturn; ", 
    "", 
    "//alert( chrome_manifest_dir );", 
    "", 
    "BuildExtension( chrome_manifest_dir );", 
    "InstallExtension( fileSearch( chrome_manifest_dir, /.xpi/gi ) );", 
    "restartKomodo();", 
    "", 
    "", 
    "", 
    "", 
    "", 
    "", 
    "", 
    "", 
    ""
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}
{
  "keyboard_shortcut": "", 
  "name": "CodeToReadMe", 
  "language": "JavaScript", 
  "trigger_enabled": 1, 
  "value": [
    "if( typeof ko.extensions.vilbur === 'undefined'  )", 
    "\tko.extensions.vilbur = {};", 
    "if( typeof ko.extensions.vilbur.Markdown === 'undefined'  )", 
    "\tko.extensions.vilbur.Markdown = {};", 
    "", 
    "", 
    "/** MarkdownDocumentator", 
    " */", 
    "ko.extensions.vilbur.Markdown.CodeToReadMe = (function() {", 
    "", 
    "\t/* CONSTRUCT */", 
    "\tfunction CodeToReadMe(){", 
    "", 
    "\t\t//var DocBlock;", 
    "\t\tvar snippets = [];", 
    "", 
    "", 
    "\t\t/** convert", 
    "\t\t */", 
    "\t\tthis.DocBlock = function(DocBlocks)", 
    "\t\t{", 
    "\t\t\tif( DocBlocks.constructor.name !== \"Array\" )", 
    "\t\t\t\tDocBlocks = [DocBlocks];", 
    "", 
    "\t\t\t/** setSnippet", 
    "\t\t\t */", 
    "\t\t\tvar setSnippet = function(DocBlock)", 
    "\t\t\t{", 
    "\t\t\t\tvar snippet = [", 
    "\t\t\t\t\t'|\t|\t|\\n|---', // table header", 
    "\t\t\t\t];", 
    "", 
    "\t\t\t\tif( ! DocBlock )", 
    "\t\t\t\t\treturn;", 
    "", 
    "\t\t\t\tLogger.info(DocBlock.get(), 'CodeToReadMe: '+'setSnippet');", 
    "", 
    "\t\t\t\tvar params\t= DocBlock.get('param');", 
    "", 
    "\t\t\t\tvar setFnNameRow = function()", 
    "\t\t\t\t{", 
    "\t\t\t\t\tvar params_string = (function()", 
    "\t\t\t\t\t{", 
    "\t\t\t\t\t\t//Logger.info(DocBlock, 'DocBlock');", 
    "\t\t\t\t\t\treturn params.length===0 ? [] :  params.map(function(param){return param.name;});", 
    "\t\t\t\t\t})();", 
    "\t\t\t\t\t//Logger.info(params_string, 'params_string');", 
    "\t\t\t\t\tvar whitespace\t= params.length ? ' ' :'';", 
    "", 
    "\t\t\t\t\t//DocBlock.get('summary').lines", 
    "\t\t\t\t\tsnippet.push('|__'+DocBlock.get('function').name+'__('+whitespace+params_string.join(', ')+whitespace+')\t|[[%tabstop:'+DocBlock.get('summary.lines')+']]\t\t|');", 
    "\t\t\t\t};", 
    "\t\t\t\tvar getParameterRows = function()", 
    "\t\t\t\t{", 
    "\t\t\t\t\tif( params )", 
    "\t\t\t\t\t\tparams.map(function(param){", 
    "\t\t\t\t\t\t\tvar param_type\t= param.type=='void' ? '[[%tabstop:string]]' : param.type;", 
    "", 
    "\t\t\t\t\t\t\tsnippet.push('|`@param '+param_type+'` '+param.name+'\t|[[%tabstop:\t]]\t|');", 
    "\t\t\t\t\t\t});", 
    "\t\t\t\t};", 
    "\t\t\t\tsetFnNameRow();", 
    "\t\t\t\tgetParameterRows();", 
    "", 
    "\t\t\t\tsnippets.push(snippet.join('\\n'));", 
    "\t\t\t};", 
    "", 
    "\t\t\tfor(var d=0; d<DocBlocks.length;d++)", 
    "\t\t\t\tsetSnippet(DocBlocks[d]);", 
    "", 
    "\t\t\tLogger.info(snippets, 'snippets');", 
    "", 
    "\t\t\treturn this;", 
    "\t\t};", 
    "", 
    "\t\t/** insertFakeSnippet", 
    "\t\t */", 
    "\t\tthis.insertSnippet = function()", 
    "\t\t{", 
    "", 
    "\t\t\tLogger.info(snippets, 'CodeToReadMe: '+'snippets');", 
    "", 
    "\t\t\tvar fake_snippet = {", 
    "\t\t\t\thasAttribute: function(name) {", 
    "\t\t\t\t\treturn name in this;", 
    "\t\t\t\t},", 
    "\t\t\t\tgetStringAttribute: function(name) {", 
    "\t\t\t\t\treturn this[name];", 
    "\t\t\t\t},", 
    "\t\t\t\tname:\t\"name snippet\",", 
    "\t\t\t\tindent_relative: \"true\",", 
    "\t\t\t\tvalue:\tsnippets.join(\"\\n\\n\")", 
    "\t\t\t};", 
    "\t\t\tko.projects.snippetInsert(fake_snippet);", 
    "\t\t};", 
    "", 
    "\t}", 
    "", 
    "\treturn CodeToReadMe;", 
    "", 
    "})();"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": 1, 
  "type": "macro", 
  "trigger": "trigger_startup"
}
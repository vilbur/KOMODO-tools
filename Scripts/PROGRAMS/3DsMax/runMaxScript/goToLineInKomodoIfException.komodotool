{
  "keyboard_shortcut": "Ctrl+Alt+Shift+M", 
  "name": "goToLineInKomodoIfException", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/*", 
    "\tGo to file & position which is currently opened in 3Ds Max script editor,", 
    "\t\tIF  current file in Komodo is *.ms or *.mcr", 
    "\t\tAND if Maxscript editor is open", 
    "\t", 
    "\telse 'Go to line' - default Komodo command", 
    "", 
    "*/", 
    "", 
    "var koFile\t= require(\"ko/file\");", 
    "var koEditor\t= require(\"ko/editor\");", 
    "var scimoz\t= ko.views.manager.currentView.scimoz; ", 
    "var file_info_path\t= komodo.macro.path + '\\\\..\\\\line-info.json';", 
    "", 
    "/** Go to line", 
    " */", 
    "var goToLine = function()", 
    "{", 
    "\tif ( koFile.exists(file_info_path) )", 
    "\t\tsetPositionFromLineInfoFile();", 
    "};", 
    "", 
    "/** Get file_info from temp file", 
    " *\t\t", 
    " * line-ifno.json = {", 
    " *\t\tfile:\t\"path\\to\\script\\in\\maxscript\\editor.ms\",", 
    " *\t\tline:\tint current file,", 
    " *\t\tcol:\tint col,", 
    " *\t\toffset:\toffset", 
    " *\t}", 
    " *", 
    " *\t@return\tobject|false\tline_info oject, FALSE if file does not exists", 
    " */", 
    "var setPositionFromLineInfoFile = function()", 
    "{", 
    "\tif( ! koFile.exists(file_info_path) )", 
    "\t\treturn false;", 
    "\t", 
    "\t/** Get all opened files in Komodo    ", 
    "\t *\t@return array of opened file path OR uri of *.komodotool ", 
    "\t */", 
    "\tvar opened_files = (function()", 
    "\t{", 
    "\t\tvar views = ko.views.manager.topView.getDocumentViews(true);", 
    "\t\tvar opened_files_all = [];", 
    "\t", 
    "\t\tfor (var i = 0; i < views.length; i++) {", 
    "\t\t\tview = views[i];", 
    "\t\t\tif (view.koDoc && view.koDoc.file) ", 
    "\t\t\t\topened_files_all.push(  view.koDoc.file.URI.match(/^file/g) ? view.koDoc.file.path : view.koDoc.file.URI );", 
    "\t\t}", 
    "\t\treturn opened_files_all;", 
    "\t})();", 
    "\t/** Position", 
    "\t */", 
    "\tvar file_info = (function()", 
    "\t{", 
    "\t\t//console.log( koFile.read(file_info_path) );", 
    "\t\treturn  JSON.parse(koFile.read(file_info_path));", 
    "\t})(); ", 
    "\t", 
    "\t/** Open file", 
    "\t */", 
    "\tvar openFile = function()", 
    "\t{", 
    "\t\tko.open.URI(file_info.file);", 
    "\t}; ", 
    "\t/** Show notification of exception", 
    "\t */", 
    "\tvar showNotificationOfException = function()", 
    "\t{", 
    "\t\tko.statusBar.AddMessage( '!!! MaxScript Exception: '+file_info.exception, 'MaxScript Exception', 0, true);", 
    "\t\trequire(\"ko/console\").exception( '!!! MaxScript Exception: ' + file_info.exception);", 
    "\t}; ", 
    "\t/** Go to postion", 
    "\t */", 
    "\tvar goToPostion = function()", 
    "\t{", 
    "\t\tvar file_current_path\t= ko.views.manager.currentView.koDoc.file.path;", 
    "\t\tvar timeout\t= file_current_path==file_info.file ? 0 : ( opened_files.indexOf(file_info.file)>-1 ? 500 : 1000 ); // if current file timeout 0, if file opened timeout = 500, file is not open timeout = 1000", 
    "\t", 
    "\t\t//console.log(  'file_info.file: ' + file_info.file );", 
    "\t\t//console.log(  'timeout: ' + timeout );", 
    "\t\t", 
    "\t\tsetTimeout( function()", 
    "\t\t{", 
    "\t\t\tvar scimoz\t= ko.views.manager.currentView.scimoz; ", 
    "\t\t\tvar line\t= parseInt(file_info.line) -1;", 
    "\t\t\tvar pos_from_line\t= scimoz.positionFromLine(line);", 
    "\t\t\tvar line_end \t= pos_from_line + scimoz.lineLength(line);", 
    "\t\t\t", 
    "\t\t\tkoFile.remove(file_info_path);", 
    "\t", 
    "\t\t\tscimoz.currentPos\t= pos_from_line;", 
    "\t\t\tscimoz.anchor\t= line_end;", 
    "\t\t\t", 
    "\t\t\tscimoz.scrollCaret();", 
    "\t\t}, timeout);", 
    "\t};", 
    "\t", 
    "\tshowNotificationOfException();", 
    "\topenFile();", 
    "\tgoToPostion();", 
    "\t", 
    "\treturn true;", 
    "}; ", 
    "", 
    "/*---------------------------------------", 
    "\tEXECUTE SCRIPT", 
    "-----------------------------------------*/", 
    "goToLine();"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}
{
  "keyboard_shortcut": "", 
  "auto_abbreviation": "true", 
  "value": [
    "<%", 
    "\t/* Ask for function name and return value\t", 
    "\t*/", 
    "\tvar ask = ko.interpolate.interpolateString([", 
    "\t\t'%(ask1:Function name:)',", 
    "\t\t'%(ask2:Return:this)',\t\t", 
    "\t]).split(',');", 
    "\t", 
    "\tvar fn_name_sanitized\t= ask[0].replace(/([A-Z])/g, ' $1').replace(/[\\s+|-|_]+/g, ' ').replace(/\\s+/g, ' ').trim();", 
    "\t", 
    "\tvar fn_summary\t= fn_name_sanitized.charAt(0).toUpperCase() + fn_name_sanitized.slice(1).toLowerCase();", 
    "\t", 
    "\tvar fn_name = (function()", 
    "\t{", 
    "\t\tvar fn_name_pascal \t= fn_name_sanitized.toLowerCase().replace(/(?:(^.)|(\\s+.))/g, function(match) {", 
    "\t\t\treturn match.charAt(match.length-1).toUpperCase();", 
    "\t\t});", 
    "\t\treturn fn_name_pascal.charAt(0).toLowerCase() + fn_name_pascal.slice(1);", 
    "\t})(); ", 
    "", 
    "\tvar _return_this\t= ask[1]!='' && ask[1].match(/this/gi)!==null;", 
    "\t", 
    "\tko.run.output.endSession();", 
    "\tko.run.runEncodedCommand( window, 'set /p=\"'+fn_name+'\"<nul| clip' );", 
    "%>", 
    "[[%tabstop:/** [[%tabstop:<%=fn_summary%>]][[%tabstop:]]", 
    "<%if( _return_this ) { %>", 
    " *", 
    " * [[%tabstop:@return self]]", 
    "<% } %>", 
    " */", 
    "]]var [[%tabstop:<%=fn_name%>]] = function([[%tabstop:]])", 
    "{", 
    "\t[[%tabstop:]]", 
    "<%if( _return_this ) { %>\t[[%tabstop:return this;]]", 
    "<% } %>", 
    "};[[%tabstop:]]!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "indent_relative": "true", 
  "type": "snippet", 
  "treat_as_ejs": "true", 
  "name": "prFn"
}
{
  "keyboard_shortcut": "", 
  "name": "matchAll_v2", 
  "language": "JavaScript", 
  "trigger_enabled": 0, 
  "rank": 100, 
  "trigger": "trigger_startup", 
  "value": [
    "/*", 
    "*\tget regex match of all group matches", 
    "*", 
    "*\t@return object of matches", 
    "", 
    "\tvar match_test\t= 'first-match/11111/group-match-A.lastMatchA /22222/group-match-B.lastMatchB'", 
    "\t\t\t\t.matchAll_v2(/(first-match)*\\/(\\d+)\\/(\\S+)\\.(\\w+)/gi);", 
    "\t", 
    "\trequire('ko/console').info('match_test='+JSON.stringify( match_test, null, 4));", 
    "\t", 
    "\tmatch_test = {", 
    "\t\t\"0\": {                                                    // INDEX 0 - full regex match", 
    "\t\t\t\"1\": \"first-match/11111/group-match-A.lastMatchA\",", 
    "\t\t\t\"2\": \"/22222/group-match-B.lastMatchB\"", 
    "\t\t},", 
    "\t\t\"1\": {                                                    // INDEX 1~ first matching group", 
    "\t\t\t\"1\": \"first-match\",\t\t\t\t\t\t\t\t\t", 
    "\t\t\t\"2\": null", 
    "\t\t},", 
    "\t\t\"2\": {", 
    "\t\t\t\"1\": \"11111\",", 
    "\t\t\t\"2\": \"22222\"", 
    "\t\t},", 
    "\t\t\"3\": {", 
    "\t\t\t\"1\": \"group-match-A\",", 
    "\t\t\t\"2\": \"group-match-B\"", 
    "\t\t},", 
    "\t\t\"4\": {", 
    "\t\t\t\"1\": \"lastMatchA\",", 
    "\t\t\t\"2\": \"lastMatchB\"", 
    "\t\t}", 
    "\t}", 
    "*/", 
    " ", 
    "", 
    "String.prototype.matchAll_v2 = function(regexp, remove_full_match=false) {", 
    "\t//////ko.extensions.ConsoleClear();", 
    "\tvar matches_all\t= [];", 
    "\tvar matches_sorted\t= {};", 
    "\tvar Logger\t= ko.extensions.Logger_v3 ? new ko.extensions.Logger_v3('matchAll_v2.js').clear(false ).off(true ) : require('ko/console');", 
    "\t", 
    "\t/**", 
    "\t *", 
    "\t */", 
    "\tthis.replace(regexp, function() {", 
    "\t\tvar matches\t= ([]).slice.call(arguments, 0);", 
    "\t\t", 
    "\t\tvar extras\t= matches.splice(-2);", 
    "\t\t////alert( 'extras=\\n'+JSON.stringify( extras, null, 2) )", 
    "\t\t//Logger.info(matches, 'matches');", 
    "\t\t//", 
    "\t\t//matches.index\t= extras[0];", 
    "\t\t//matches.input\t= extras[1];", 
    "\t\tmatches_all.push(matches);", 
    "\t});", 
    "\t", 
    "\tLogger.info(matches_all, 'matches_all');", 
    "\t/**", 
    "\t *", 
    "\t */", 
    "\tif(matches_all.length)", 
    "\t\tfor(group=0; group<matches_all.length; group++){", 
    "\t\t\t//var matches  \t= matches_all[m];", 
    "\t\t\tfor(var m=0; m<matches_all[group].length; m++){", 
    "\t\t\t\tvar match = matches_all[group][m];", 
    "\t\t\t\t", 
    "\t\t\t\tif(!matches_sorted[m])", 
    "\t\t\t\t\tmatches_sorted[m] = {};", 
    "\t\t\t\t\t", 
    "\t\t\t\tmatches_sorted[m][group+1] = match ? match : null;", 
    "\t\t\t\t", 
    "\t\t\t}", 
    "\t\t}", 
    "\t", 
    "\t//require('ko/console').info('matches_sorted='+JSON.stringify( matches_sorted, null, 4));", 
    "\t", 
    "\tif(remove_full_match && matches_all.length)", 
    "\t\tdelete matches_sorted[0]", 
    "\t\t//matches_sorted.pop();", 
    "\t\t", 
    "\treturn matches_all.length ? matches_sorted : null;", 
    "};", 
    "", 
    "", 
    "", 
    "//", 
    "//var Logger\t= ko.extensions.Logger_v3 ? new ko.extensions.Logger_v3('matchAll_v2.js').clear(true).off(false) : require('ko/console');", 
    "//var test_sring_A\t= 'folder\\\\subfolder\\\\file\\\\123\\\\456\\\\789';", 
    "//", 
    "//", 
    "////var test_alpha\t= test_sring_A.matchAll_v2(/([^\\W\\d]+)/gi);", 
    "//if(typeof test_alpha!== 'undefined')Logger.info(test_alpha, 'test_alpha');", 
    "//", 
    "//require('ko/console').info('-----------------------------');", 
    "//var test_grouped\t= test_sring_A.matchAll(/(?:([^\\W\\d]+)\\\\+)/gi);", 
    "//if(typeof test_grouped!== 'undefined')Logger.info(test_grouped, 'test_grouped');", 
    "//", 
    "//Logger.info(test_sring_A.match(/([^\\W\\d]+)/gi));", 
    "//", 
    "//", 
    "//require('ko/console').info('-----------------------------');", 
    "////var test_all\t= test_sring_A.matchAll_v2(/([\\w\\d]+)/gi);", 
    "//if(typeof test_all!== 'undefined')Logger.info(test_all, 'test_all');", 
    "//", 
    "//", 
    ""
  ], 
  "version": "1.0.12", 
  "async": 1, 
  "type": "macro", 
  "icon": "chrome://fugue/skin/icons/tick.png"
}
{
  "keyboard_shortcut": "", 
  "name": "link", 
  "value": [
    "<%", 
    "\tvar koFile\t= require(\"ko/file\");", 
    "\tvar file_current\t= ko.views.manager.currentView.koDoc.file.path;", 
    "\tvar link\t= '[[%tabstop:url]]';", 
    "\tvar label\t= 'label';", 
    "\t", 
    "\tvar snippet_string = '[[[%tabstop:label]]]([[%tabstop:url]])'", 
    "\t///** Loop path end search for  file", 
    "\t//*/", 
    "\t//var git_folder_path = (function()", 
    "\t//{", 
    "\t//\tvar path_dir_split\t= koFile.dirname( file_current ).split('\\\\');", 
    "\t//\t/**", 
    "\t//\t */", 
    "\t//\tvar gitFolderExists = function()", 
    "\t//\t{", 
    "\t//\t\treturn koFile.exists(path_dir_split.join('\\\\')+'\\\\.git' );", 
    "\t//\t} ", 
    "\t//", 
    "\t//\twhile ( path_dir_split.length > 1 && ! gitFolderExists() )", 
    "\t//\t\tpath_dir_split.pop();", 
    "\t//", 
    "\t//\treturn path_dir_split.length > 1 ? path_dir_split.join('\\\\') : false;", 
    "\t//})();", 
    "\t", 
    "\tvar file_import = (function()", 
    "\t{", 
    "\t\treturn ko.filepicker.browseForFile();", 
    "\t})();", 
    "\t\t", 
    "\tif( file_import )", 
    "\t{", 
    "\t\t/**", 
    "\t\t */", 
    "\t\tvar sanitizeString = function(string)", 
    "\t\t{", 
    "\t\t\treturn string.charAt(0).toUpperCase() + string.slice(1).replace(/[_-]/g, ' ');", 
    "\t\t}", 
    "\t\t", 
    "\t\tvar link = (function()", 
    "\t\t{", 
    "\t\t\tvar nsFileFrom = Components.classes[\"@mozilla.org/file/local;1\"]", 
    "\t\t\t\t\t\t\t\t  .createInstance(Components.interfaces.nsILocalFile);", 
    "\t\t\tnsFileFrom.initWithPath(file_current);", 
    "\t\t\tvar nsFileTo = Components.classes[\"@mozilla.org/file/local;1\"]", 
    "\t\t\t\t\t\t\t\t  .createInstance(Components.interfaces.nsILocalFile);", 
    "\t\t\tnsFileTo.initWithPath(file_import);", 
    "\t\t\t", 
    "\t\t\tvar link = nsFileTo.getRelativeDescriptor(nsFileFrom);", 
    "\t\t\t", 
    "\t\t\treturn link.substring(3, link.length);", 
    "\t\t", 
    "\t\t})();", 
    "\t\t/**", 
    "\t\t */", 
    "\t\tvar extension = (function()", 
    "\t\t{", 
    "\t\t\treturn koFile.basename(link).split(/\\./).pop();", 
    "\t\t})();", 
    "\t\t/**", 
    "\t\t */ ", 
    "\t\tvar dir_name = (function()", 
    "\t\t{", 
    "\t\t\treturn koFile.basename( file_import.replace(/\\\\[^\\\\]+$/g, '') );", 
    "\t\t})();", 
    "\t\t/**", 
    "\t\t */", 
    "\t\tvar label = (function()", 
    "\t\t{\t\t", 
    "\t\t\treturn koFile.basename(file_import).split(/\\./gi).shift().replace(/[_-]/g, ' ');", 
    "\t\t})();", 
    "\t\t", 
    "\t\t/**", 
    "\t\t */", 
    "\t\tsnippet_string = (function()", 
    "\t\t{", 
    "\t\t\t/* Link to md */", 
    "\t\t\tif( extension.match(/md/) )", 
    "\t\t\t\tlabel = sanitizeString(dir_name);", 
    "", 
    "\t\t\t/* Link to dir */", 
    "\t\t\telse if( ! extension.match(/jpeg|png|gif/) )", 
    "\t\t\t\tlink = link.replace(/\\/[^\\/]+$/g, '');", 
    "", 
    "\t\t\tvar snippet_string = '[[[%tabstop:'+label+']]]('+link+')';", 
    "\t\t\t", 
    "\t\t\t", 
    "\t\t\treturn extension.match(/jpeg|png|gif/) ? '!'+snippet_string : '[[%tabstop1:__]]'+snippet_string+'[[%tabstop1:__]]';", 
    "\t\t\t", 
    "\t\t})();", 
    "\t\t", 
    "", 
    "\t}", 
    "", 
    "", 
    "%>", 
    "<%=snippet_string%>[[%tabstop:]]!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "indent_relative": "true", 
  "type": "snippet", 
  "treat_as_ejs": "true", 
  "auto_abbreviation": "true"
}
{
  "keyboard_shortcut": "", 
  "name": "getFiles", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "", 
    "/** getFiles", 
    " * @param\tstring\tdir\tpath to loop", 
    " * @param\tmixin", 
    " * \tboth\t= null", 
    " * \tfolders\t= false", 
    " * \tfiles\t= '*.txt *.bak*' ", 
    " */", 
    "ko.extensions.getFiles = function(dir, files=null, recursive=true) {", 
    "\t", 
    "\t", 
    "\tvar koFile\t= require(\"ko/file\");", 
    "\tvar runSvc\t= Components.classes[\"@activestate.com/koRunService;1\"].createInstance(Components.interfaces.koIRunService);", 
    "\tko.run.output.endSession();", 
    "\t/* Stringify parameters */", 
    "\tvar params_string = typeof parameters!=='undefined' ? (Array.isArray(parameters) ? parameters.map(function(value){return '\"' +value+'\"';}).join(' ') : JSON.stringify(parameters)) : '';", 
    "\t", 
    "\tvar cmd = '';", 
    "\t", 
    "\t", 
    "\t\trequire('ko/console').info(typeof files);", 
    "\t", 
    "\tif(recursive){", 
    "\t\tif(files===false)", 
    "\t\t\tcmd = '@echo off &for /f \"tokens=*\" %G in (\\'dir /b /s /a:d \"'+dir+'\\\\\"\\') do echo %G';\t// recursive DIRS", 
    "\t\telse\tif( typeof files==='string')", 
    "\t\t\tcmd = '@echo off &For /R \"\"'+dir+'\\\\\"\" %f IN ('+files+') do echo %f';\t// recursive FILES\t// https://ss64.com/nt/for_r.html", 
    "\t\telse", 
    "\t\t\tcmd = '@echo off &for /f \"tokens=*\" %G in (\\'dir /b /s \"'+dir+'\\\\\"\\') do echo %G';\t// recursive FILES AND FOLDERS\t// https://ss64.com/nt/for_r.html", 
    "\t\t\t", 
    "\t}else{", 
    "\t\tif(files===false)", 
    "\t\t\tcmd = '@echo off &For /d %f IN (\"'+dir+'\\\\*\") do echo %f';\t// NON recursive DIRS", 
    "\t\telse\tif( typeof files==='string')", 
    "\t\t\tcmd = '@echo off &For %f IN (\"'+dir+'\\\\'+files+'\") do echo %f';\t// NON recursive FILES", 
    "\t\telse", 
    "\t\t\tcmd = '@echo off &for /f \"delims=\" %f in (\\'dir /b \"'+dir+'\"\\') do echo %~dpnxf';\t// NON recursive FILES AND FOLDERS\t// https://ss64.com/nt/for_r.html", 
    "\t\t\t", 
    "\t}", 
    "\t", 
    "", 
    "\t//var cmd = '@echo off &for %A in (\"c:\\\\Users\\\\vilbur\\\\AppData\\\\Local\\\\ActiveState\\\\KomodoIDE\\\\10.1\\\\project-templates\\\\Template\\\\content\\\\*\") do echo %~fA'.trim().replace(/\\//gi, '\\\\');", 
    "\t", 
    "\t/* Run file if exist, else send command */", 
    "\t//var command = (koFile.exists(cmd) ? 'start \"\" \"\"' + cmd + '\"\" ' : cmd) + params_string;", 
    "\tvar process = runSvc.RunAndNotify(cmd, \"\", \"\" , \"\" );", 
    "\tvar result\t= process.wait(-1)===0 ? process.getStdout():null;", 
    "\tvar files = result.split(/\\n/gi).filter(function(val) {if(val) return val;});", 
    "\treturn files;", 
    "", 
    "};", 
    "", 
    "ko.extensions.ConsoleClear();", 
    "//", 
    "//var folders\t= ko.extensions.getFiles('c:\\\\Users\\\\vilbur\\\\AppData\\\\Local\\\\ActiveState\\\\KomodoIDE\\\\10.1\\\\project-templates\\\\Template\\\\content', false, recursive=true);", 
    "//require('ko/console').info( folders);", 
    "", 
    "var files_folders\t= ko.extensions.getFiles('c:\\\\Users\\\\vilbur\\\\AppData\\\\Local\\\\ActiveState\\\\KomodoIDE\\\\10.1\\\\project-templates\\\\Template\\\\content', null, recursive=false);", 
    "require('ko/console').info( files_folders);", 
    "", 
    "//var files\t= ko.extensions.getFiles('c:\\\\Users\\\\vilbur\\\\AppData\\\\Local\\\\ActiveState\\\\KomodoIDE\\\\10.1\\\\project-templates\\\\Template\\\\content', '*.txt', recursive=true);", 
    "//require('ko/console').info( files);", 
    ""
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}
{
  "keyboard_shortcut": "", 
  "name": "Untabiffy", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/*Replace tabsstops with spaces", 
    " *", 
    " * EXAMPLE: Tabstops are converted to spaces, IT CAN BE SEEN, TRY TO MOVE IN WHITESPACE", 
    " * FROM:", 
    " *\tvar variable\t= \"value\";\t// comment", 
    " *\tvar variable_foo\t= \"value_foo\";\t// comment", 
    " *\tvar variable_foo_bar\t= \"value_foo_bar\";\t// comment", 
    " *", 
    " * TO:", 
    " *\tvar variable         = \"value\";         // comment", 
    " *\tvar variable_foo     = \"value_foo\";     // comment", 
    " *\tvar variable_foo_bar = \"value_foo_bar\"; // comment", 
    " *", 
    " *", 
    " *", 
    " */", 
    "", 
    "var Logger\t= ko.extensions.Logger_v3 ? new ko.extensions.Logger_v3(this).clear(true).off(false) : require('ko/console');", 
    " ", 
    "var scimoz\t= ko.views.manager.currentView.scimoz;", 
    "var sel_text\t= scimoz.selText;", 
    "", 
    "", 
    "if( ! sel_text )", 
    "\treturn;", 
    "", 
    "var lines\t= sel_text.split(/[\\n]/);", 
    "var longest_parts\t= {};", 
    "", 
    "Logger.info(lines, 'Untabiffy: '+'lines');  ", 
    "", 
    "var lines_parsed = lines.map(function(line)", 
    "{", 
    "\tvar parsed_line = line.replace(/\\t+(\\:*[=;\\/])/gi, '~~~$1').split('~~~');", 
    "\t", 
    "\t/** getLongestParts", 
    "\t */", 
    "\tvar getLongestParts = (function()", 
    "\t{", 
    "\t\t//Logger.info(parsed_line.length, 'Untabiffy: '+'parsed_line.length');", 
    "\t\t", 
    "\t\tif( parsed_line.length>1 )", 
    "\t\t\tparsed_line.map(function(line_part, index){", 
    "\t\t\t\t", 
    "\t\t\t\tvar length = parsed_line[index].length;\t", 
    "\t\t\t\t", 
    "\t\t\t\tif( ! longest_parts[index] || length > longest_parts[index] )", 
    "\t\t\t\t\tlongest_parts[index] = length;", 
    "\t\t\t});", 
    "\t\t", 
    "\t})(); ", 
    "", 
    "\treturn parsed_line;", 
    "});", 
    "", 
    "//Logger.info(longest_parts, 'Untabiffy: '+'longest_parts');", 
    "Logger.info(lines_parsed, 'Untabiffy: '+'lines_parsed'); ", 
    "/*", 
    " *", 
    " *", 
    " */", 
    "var lines_indented = lines_parsed.map(function(line_parsed)", 
    "{", 
    "\tLogger.info(line_parsed, 'Untabiffy: '+'line_parsed'); ", 
    "", 
    "\tif( line_parsed.length>1 )", 
    "\t\tline_parsed = line_parsed.map(function(line_part, index){", 
    "\t\t\t\t", 
    "\t\t\tLogger.info(line_part, 'Untabiffy: '+'line_part'); ", 
    "\t\t\tvar length\t=  line_part.length;\t\t", 
    "\t\t\t//Logger.info( length , 'length:'+line_part);", 
    "\t\t\t", 
    "\t\t\tvar diff\t= longest_parts[index] - length +2;", 
    "\t\t\t//Logger.info(diff, \t'diff');", 
    "\t\t\t\t\t", 
    "\t\t\tline_part += Array(diff).join(' ');", 
    "\t\t\t", 
    "\t\t\treturn line_part;", 
    "\t\t});", 
    "\t\t", 
    "\treturn line_parsed.join('').replace(/\\s+$/g, '');", 
    "\t\t", 
    "});", 
    "", 
    "var untabifed_content\t= lines_indented.join('\\n'); ", 
    "", 
    "/** restoreSelection", 
    " */", 
    "var restoreSelection = function(untabifed_content)", 
    "{", 
    "\tvar currentPos = scimoz.currentPos;", 
    "\t", 
    "\tscimoz.setSel(currentPos -untabifed_content.length , currentPos); ", 
    "}; ", 
    "", 
    "", 
    "ko.views.manager.currentView.scimoz.beginUndoAction();", 
    "", 
    "try", 
    "{", 
    "\t", 
    "\tscimoz.replaceSel( untabifed_content );", 
    "\t", 
    "\trestoreSelection(untabifed_content);", 
    "\t", 
    " if (komodo.view) { komodo.view.setFocus(); }", 
    "\t   ko.commands.doCommand('cmd_untabify');", 
    "\t", 
    "\t", 
    "} finally {", 
    "\tko.views.manager.currentView.scimoz.endUndoAction();", 
    "}"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "icon": "chrome://openoffice/skin/icons/text_indent.png", 
  "type": "macro", 
  "trigger": "trigger_postopen"
}
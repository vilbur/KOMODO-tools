{
  "keyboard_shortcut": "Ctrl+Down", 
  "name": "MOVE_line_down", 
  "language": "JavaScript", 
  "trigger_enabled": 0, 
  "rank": 100, 
  "trigger": "trigger_postopen", 
  "value": [
    "// Move Line or Move Selection Down", 
    "komodo.assertMacroVersion(3);", 
    "if (komodo.view) { komodo.view.setFocus() };", 
    "var ke = komodo.editor;", 
    "", 
    "if( ke.lineFromPosition( ke.currentPos ) == ( ke.lineCount - 1 ) )", 
    "        return;", 
    "", 
    "// Prevent Undo remember macro steps", 
    "ke.beginUndoAction();", 
    "   ", 
    "var sel_start_a = ke.selectionStart;", 
    "var sel_end_a = ke.selectionEnd;", 
    "", 
    "// Extend selection to beg of line at front and end of line at back", 
    "var selStartLine = ke.lineFromPosition(ke.selectionStart);", 
    "var selEndLine = ke.lineFromPosition(ke.selectionEnd);", 
    "var numLinesSelected = selEndLine - selStartLine;", 
    "", 
    "var selStart = ke.positionFromLine( selStartLine );", 
    "var selEnd   = ke.getLineEndPosition( selEndLine );", 
    "", 
    "ke.setSel( selStart, selEnd );", 
    "", 
    "// Determine original selection position offset related to extended", 
    "var sel_start_b = ke.selectionStart;", 
    "var sel_end_b = ke.selectionEnd;", 
    "var offset_start = sel_start_a - sel_start_b;", 
    "var offset_end = sel_end_b - sel_end_a;  ", 
    "", 
    "// Copy the selected text and remove it", 
    "var text =  komodo.interpolate('%s');", 
    "komodo.doCommand('cmd_delete'); // This leaves a blank line in place of selection", 
    "", 
    "// Move our selection to a new place", 
    "// First move our blank line up", 
    "komodo.doCommand('cmd_lineNext')", 
    "ke.lineTranspose();", 
    "", 
    "// Insert our text", 
    "ke.insertText(ke.currentPos, text);", 
    "", 
    "// Restore selection            ", 
    "var newSelStartLine = ke.lineFromPosition( ke.currentPos );", 
    "var newSelEndLine   = newSelStartLine + numLinesSelected;", 
    "", 
    "var newSelStart = ke.currentPos + offset_start;", 
    "var newSelEnd   = ke.getLineEndPosition(newSelEndLine) - offset_end;", 
    "", 
    "ke.setSel(newSelStart, newSelEnd);", 
    "", 
    "// End of prevent Undo", 
    "ke.endUndoAction();", 
    "", 
    "", 
    "", 
    "/*\tVILBUR`S SCRIPT\t*/", 
    "", 
    "//komodo.assertMacroVersion(3);", 
    "//ko.views.manager.currentView.scimoz.beginUndoAction()", 
    "//try {", 
    "//\tif ( komodo.view ) { komodo.view.setFocus(); }", 
    "//\tscimoz = ko.views.manager.currentView.scimoz;", 
    "//\tvar select_direction = 'cmd_lineNext';", 
    "//\tvar empty_line_founded = false;", 
    "//\t\t/*    GET SELECTED TEXT    */", 
    "//\t\tvar selectedText = scimoz.selText;", 
    "//\t\t/*     IF TEXT IS SELECTED    */", 
    "//\t\tif ( selectedText  == '' ) {", 
    "//\t\t\tselectLine();", 
    "//\t\t}", 
    "//\t/* =========== select current line     =========== */", 
    "//\tko.commands.doCommand('cmd_cut')", 
    "//\tko.commands.doCommand('cmd_end')", 
    "//\tko.commands.doCommand( select_direction )", 
    "//\t/* =========== GET SELECTED TEXT     =========== */", 
    "//\tvar i = 1;", 
    "//\twhile ( empty_line_founded  == false && i < 50 ) {", 
    "//\t\tselectLine()", 
    "//\t\tvar selectedText = scimoz.selText;", 
    "//\t\tif ( komodo.view ) { komodo.view.setFocus(); }", 
    "//\t\t/*     IF TEXT IS SELECTED    */", 
    "//\t\tif ( selectedText  == '' ) {", 
    "//\t\t\tempty_line_founded = true;", 
    "//\t\t\tko.commands.doCommand('cmd_home')", 
    "//\t\t\tko.commands.doCommand('cmd_pasteAndSelect')", 
    "//", 
    "//\t\t}else {", 
    "//\t\t\tko.commands.doCommand('cmd_home')", 
    "//\t\t\tko.commands.doCommand( select_direction )", 
    "//\t\t}", 
    "//\t\ti++;", 
    "//\t}", 
    "//\t/*    UNDO COMMAND IF TOP OR BOTTOM OF DOCUMENT IS REACHED    */", 
    "//\tif ( i  == 50 ) {", 
    "//\t\tko.commands.doCommand('cmd_undo')", 
    "//\t}", 
    "//} finally {", 
    "//\tko.views.manager.currentView.scimoz.endUndoAction()", 
    "//}", 
    "//", 
    "//function selectLine() {", 
    "//\tko.commands.doCommand('cmd_end')", 
    "//\tko.commands.doCommand('cmd_selectHome')", 
    "//\tko.commands.doCommand('cmd_selectHome')", 
    "//}"
  ], 
  "version": "1.0.12", 
  "async": 0, 
  "type": "macro", 
  "icon": "koicon://ko-svg/chrome/icomoon/skin/list.svg"
}
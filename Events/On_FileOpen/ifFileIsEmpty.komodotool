{
  "keyboard_shortcut": "", 
  "name": "ifFileIsEmpty", 
  "language": "JavaScript", 
  "trigger_enabled": 1, 
  "rank": 100, 
  "trigger": "trigger_postopen", 
  "value": [
    "/** insertSnippet", 
    " */", 
    "function insertSnippet(snippet_name)", 
    "{", 
    "\t_part = komodo.findPart('snippet', snippet_name);", 
    "\tif (!_part) {", 
    "\t\talert(\"Couldn't find a snippet called \"+snippet_name+\" when executing macro.\"); return;", 
    "\t}", 
    "\tko.projects.invokePart(_part);", 
    "}", 
    "", 
    "", 
    "/** write ToE mpty *.php file", 
    "*/", 
    "function writeToPhp(){", 
    "", 
    "\tif(koEditor.getLength()>0 )", 
    "\t\treturn;", 
    "", 
    "\tkoEditor.setValue('<?php\\r\\n');", 
    "\tkoEditor.goDocEnd();", 
    "", 
    "\tvar path_current_file\t= ko.views.manager.currentView.koDoc.file.path;", 
    "\tif(path_current_file.match(/\\\\(model|controller|command|provider|interface|test)/gi)) // var file_types from snippet PHP\\class", 
    "\t\tinsertSnippet('class');", 
    "}", 
    "", 
    "", 
    "", 
    "/** write To Empty *.vue file", 
    "*/", 
    "function writeToVue(){", 
    "", 
    "\tif(koEditor.getLength()>0 )", 
    "\t\treturn;", 
    "", 
    "\tinsertSnippet('vueTemplate');", 
    "}", 
    "", 
    "", 
    "", 
    "", 
    "/* Write '<?php' to start of file", 
    " * if empty php is opened", 
    " *", 
    " */", 
    "koEditor\t= require(\"ko/editor\");", 
    "var scimoz\t= ko.views.manager.currentView.scimoz;", 
    "var extension_match\t= ko.views.manager.currentView.koDoc.file.path.split(/\\./g).pop().match(/(php|vue)/gi);", 
    "", 
    "", 
    "", 
    "if(extension_match)", 
    "\tswitch (extension_match.pop().toLowerCase()) {", 
    "\t\tcase 'php':\twriteToPhp();break;", 
    "\t\tcase 'vue':\twriteToVue();break;", 
    "\t}"
  ], 
  "version": "1.0.12", 
  "async": 1, 
  "type": "macro"
}
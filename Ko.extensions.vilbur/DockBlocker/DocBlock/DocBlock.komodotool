{
  "keyboard_shortcut": "", 
  "name": "DocBlock", 
  "language": "JavaScript", 
  "trigger_enabled": 1, 
  "rank": 100, 
  "trigger": "trigger_startup", 
  "value": [
    "if( typeof ko.extensions.vilbur === 'undefined'  )", 
    "\tko.extensions.vilbur = {};", 
    "", 
    "/** DocBlock is data object for PhpDoc documentation", 
    " *", 
    " * \tDocBlock class merge values and keys to DocBlock object.", 
    " *\tDocBlock can be easily processed to snippets", 
    " *", 
    " * \tinput parsed_tags is result of classes DockBlockParser or PraseCodeTag", 
    " *", 
    " *", 
    " * EXAMPLE OF INPUT:", 
    " *\tparsed_tags = [", 
    " *\t\t[", 
    " *\t\t   \"Summary Lorem ipsum luctus habitasse ac aenean donec ultrices maecenas arcu,\",", 
    " *\t\t   \"Second line of summary.\"", 
    " *\t\t],", 
    " *\t\t[", 
    " *\t\t   \"A Description Lorem ipsum luctus habitasse ac aenean\",", 
    " *\t\t   \"B donec ultrices maecenas arcu, risus primis sodales\",", 
    " *\t\t   \"C urna feugiat platea ultrices maecenas arcu.\"", 
    " *\t\t],", 
    " *\t\t[ \"@param\",\t\"string\",\t\"$param1\",\t\"parameter to function\"],", 
    " *\t\t[ \"@param\",\t\"boolean\",\t\"$param2\",\t\"true\\false parameter to function\" ],", 
    " *\t\t[ \"@return\",\t\"string\",\t\"returned value description\" ]", 
    " *\t]", 
    " *", 
    " *", 
    " */", 
    "ko.extensions.vilbur.DocBlock = (function()", 
    "{", 
    "\t/** keys for this.parsed_tags = {}", 
    "\t *", 
    "\t * Values are parsed via ParseDocBlock.parse() or ParseDocBlock.parse()", 
    "\t * online reference: https://www.phpdoc.org/docs/latest/references/phpdoc/parsed_tags/method.html", 
    "\t *", 
    "\t*/", 
    "\tvar\tall_tag_keys_sahred = {", 
    "\t\t/* @function is not custom tag */\t/* 1 group */", 
    "\t\t'@function':\t['tag', 'name'],", 
    "\t\t/* phpdoc stardard tags \t*/", 
    "\t\t'@summary|@description':\t['tag', 'lines'],", 
    "\t\t'@see':\t['tag', 'uri'],", 
    "\t\t'@subpackage':\t['tag', 'name'],", 
    "\t\t'@api|@filesource|@package':\t['tag', 'string'],", 
    "\t\t'@category|@copyright|@ignore|@internal|@todo|@uses':\t['tag', '[description]'],", 
    "\t\t\t/* 2 groups */", 
    "\t\t'@author':\t['tag', 'name',\t'email'],", 
    "\t\t'@license':\t['tag', 'url',\t'name'],", 
    "\t\t'@link':\t['tag', 'url',\t'[description]'],", 
    "\t\t'@return|@throws':\t['tag', 'type',\t'[description]'],", 
    "\t\t'@deprecated|@since|@version':\t['tag', 'version',\t'[description]'],", 
    "\t\t\t/* 3 groups */", 
    "\t\t'@param|@property|@property_read|@property_write|@global|@var':\t['tag', 'type',\t'name',\t'[description]'],", 
    "\t\t'@method':\t['tag', 'return_type',\t'name',\t'param'],", 
    "\t\t'@source':\t['tag', '[start_line]',\t'[number_of_lines]',\t'[description]'],", 
    "\t\t'@example':\t['tag', '[location]',\t'[start_line]',\t'number_of_lines',\t'[description]'],", 
    "\t};", 
    "\t/**", 
    "\t */", 
    "\tfunction DocBlock(parsed_tags)", 
    "\t{", 
    "\t\t/*----   PRIVATE PROPERTIES   -------------------------------------------------------------------------------------------------*/", 
    "\t\tvar Logger\t= new ko.extensions.Logger_v3('DocBlock.js').clear(true).off(false).header(false);", 
    "\t\tvar tags\t= [];", 
    "", 
    "\t\t/** expand all_tag_keys_sahred with multiple key to each own array", 
    "\t\t*/", 
    "\t\tvar all_tag_keys = (function()", 
    "\t\t{", 
    "\t\t\tvar keys_obj\t= {};", 
    "\t\t\tvar setKeys\t= function(key_shared)", 
    "\t\t\t{", 
    "\t\t\t\tkey_shared.split('|').map(function(key){", 
    "\t\t\t\t\tkeys_obj[key] = all_tag_keys_sahred[key_shared];", 
    "\t\t\t\t});", 
    "\t\t\t};", 
    "", 
    "\t\t\tfor(var key in all_tag_keys_sahred)", 
    "\t\t\t\tif (all_tag_keys_sahred.hasOwnProperty(key))", 
    "\t\t\t\t\tsetKeys( key, all_tag_keys_sahred[key] );", 
    "", 
    "\t\t\treturn keys_obj;", 
    "\t\t})();", 
    "", 
    "\t\t/** get all tags or find tag", 
    "\t\t * \t@return [tags]|tag", 
    "\t\t */", 
    "\t\tthis.get = function(tag='')", 
    "\t\t{", 
    "\t\t\treturn ! tag ? tags : findTag(tag.toLowerCase());", 
    "\t\t};", 
    "", 
    "\t\t/**", 
    "\t\t */", 
    "\t\tvar setTags = function()", 
    "\t\t{", 
    "\t\t\tvar setTag = function(tag_array)", 
    "\t\t\t{", 
    "", 
    "\t\t\t\tvar tag_obj\t= {};", 
    "\t\t\t\tvar tag_name\t= tag_array[0].match(/^@/gi) ? tag_array[0] : ( tag_index === 0 ? '@summary' : '@description' );", 
    "\t\t\t\tvar tag_keys\t= all_tag_keys[tag_name];", 
    "", 
    "\t\t\t\tif( tag_name!=='@summary' && tag_name!=='@description' )", 
    "\t\t\t\t\tfor(var t=0; t<tag_array.length;t++)", 
    "\t\t\t\t\t\ttag_obj[tag_keys[t]] = tag_array[t];", 
    "\t\t\t\telse", 
    "\t\t\t\t\ttag_obj = { 'tag': tag_name, 'lines': tag_array  };", 
    "", 
    "\t\t\t\ttags.push(tag_obj);", 
    "\t\t\t};", 
    "", 
    "\t\t\tfor(var tag_index=0; tag_index<parsed_tags.length;tag_index++)", 
    "\t\t\t\tsetTag(parsed_tags[tag_index]);", 
    "\t\t};", 
    "\t\t/** findTag", 
    "\t\t */", 
    "\t\tvar findTag = function(tag)", 
    "\t\t{", 
    "\t\t\ttag\t= tag.replace(/^@*/gi, '@');", 
    "\t\t\ttags_found\t= [];", 
    "", 
    "\t\t\tfor(var t=0; t<tags.length;t++)", 
    "\t\t\t\tif( tags[t].tag == tag )", 
    "\t\t\t\t\ttags_found.push(tags[t]);", 
    "", 
    "\t\t\treturn tags_found.length===1 ? tags_found[0] : tags_found;", 
    "", 
    "\t\t};", 
    "", 
    "", 
    "\t\tsetTags();", 
    "", 
    "\t}", 
    "\treturn DocBlock;", 
    "", 
    "})();"
  ], 
  "version": "1.0.12", 
  "async": 1, 
  "type": "macro", 
  "icon": "chrome://fugue/skin/icons/tick.png"
}
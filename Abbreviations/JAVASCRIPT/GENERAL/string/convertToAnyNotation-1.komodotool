{
  "keyboard_shortcut": "", 
  "name": "convertToAnyNotation", 
  "value": [
    "/** Convert string to all notations", 
    " * @param string of any notation", 
    " *", 
    " *\tlower:\ttest string", 
    " *\tupper:\tTEST STRING", 
    " *\ttitle:\tTest String", 
    " *\tcamel:\ttestString", 
    " *\tpascal:\tTestString", 
    " *\tkebab:\ttest-string", 
    " *\tsnake:\ttest_string", 
    " *", 
    " *", 
    " * @return object", 
    "*/", 
    "stringNotationConverter = (function(string) {", 
    "", 
    "\tvar notations\t= {};", 
    "\tvar sanitized\t= string.replace(/([A-Z])/g, ' $1' ).replace(/(\\s+|-|_)/g, ' ' ).toLowerCase().trim();", 
    "", 
    "\tnotations.lower\t= sanitized;", 
    "\tnotations.upper\t= sanitized.toUpperCase();", 
    "\tnotations.title\t= sanitized.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});", 
    "\tnotations.kebab\t= sanitized.replace(/\\s+/g, '-' );", 
    "\tnotations.snake\t= sanitized.replace(/\\s+/g, '_' );", 
    "\tnotations.pascal\t= notations.title.replace(/\\s+/g, '' );", 
    "\tnotations.camel\t= notations.pascal.charAt(0).toLowerCase() + notations.pascal.slice(1);", 
    "", 
    "\treturn notations;", 
    "});!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "indent_relative": "true", 
  "type": "snippet", 
  "treat_as_ejs": "true", 
  "auto_abbreviation": "false"
}
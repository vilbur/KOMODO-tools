{
  "keyboard_shortcut": "", 
  "name": "rxTemplateSnippet", 
  "value": [
    "<%", 
    "\t/* ", 
    "\t * Write RegEx snippet matching to current language, especially for 'Autohotkey'", 
    "\t *", 
    "\t * Selection is converted to inserted snippet, if selection exists", 
    "\t *", 
    "\t * Snippet is tested on insertion", 
    "\t * \t\t1) against current selection if slection exists when snippet inserted E.G: C:\\folder\\path\\foo' rxPath", 
    "\t * \t\t2) against array match_these in nothing selected on insertions", 
    "\t * \t", 
    "\t*/", 
    "", 
    "\tvar RegEx \t\t= /^([A-Z]:)*[\\\\]*((?:[^\\\\]+[\\\\]+)+)(\\w+)(\\.\\S+)*/gi;", 
    "\tvar match_these = [", 
    "\t\t'C:\\\\folder\\\\sub_folder\\\\sub_sub_folder\\\\foo_file.exe',", 
    "\t\t'\\\\folder\\\\sub_folder\\\\sub_sub_folder\\\\foo_file.exe',", 
    "\t\t'folder\\\\sub_folder\\\\sub_sub_folder\\\\foo_file.exe',", 
    "\t\t'C:\\\\root',", 
    "\t\t'C:\\\\folder\\\\sub_folder\\\\sub_sub_folder\\\\target',", 
    "\t\t'\\\\folder\\\\sub_folder\\\\sub_sub_folder\\\\target',", 
    "\t\t'folder\\\\sub_folder\\\\sub_sub_folder\\\\target',", 
    "\t];\t", 
    "\t", 
    "\t/* REQUIRED CLASSES */", 
    "\tvar RegExTool\t= new ko.extensions.SnippetRegEx(RegEx); ", 
    "\tvar _Snippet\t= new ko.extensions.Snippet();", 
    "\t", 
    "\t/* get buffer text */", 
    "\tvar selected_text = _Snippet.getSelectionText();\t// set indentation prefix to every line, variable insertion should be on start of line for prevent indentation issue\t", 
    "\t_Snippet.selectSelectionOrLineAndKeyword();\t", 
    "", 
    "\t/* TEST SNIPPET ON INSERTION */", 
    "\tif(selected_text !== '')", 
    "\t\tRegExTool.test(selected_text);", 
    "\telse ", 
    "\t\tRegExTool.quiet().test(match_these);", 
    "\t", 
    "%>", 
    "<%=RegExTool.get()%>!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "true", 
  "type": "snippet", 
  "indent_relative": "true", 
  "auto_abbreviation": "false"
}
{
  "keyboard_shortcut": "", 
  "name": "CodeToReadMe", 
  "language": "JavaScript", 
  "trigger_enabled": 1, 
  "value": [
    "if( typeof ko.extensions.vilbur === 'undefined'  )", 
    "\tko.extensions.vilbur = {};", 
    "if( typeof ko.extensions.vilbur.CodeToReadMe === 'undefined'  )", 
    "\tko.extensions.vilbur.CodeToReadMe = {};", 
    "", 
    "", 
    "/** MarkdownDocumentator", 
    " *", 
    " *\tget selected code from current file or selected text", 
    " *\tthen", 
    " * \tInsert snippet of table to markdown file in second pane", 
    " *", 
    " *", 
    " */", 
    "ko.extensions.vilbur.CodeToReadMe.CodeToReadMe = (function() {", 
    "", 
    "\t/* CONSTRUCT */", 
    "\tfunction CodeToReadMe(){", 
    "", 
    "\t\tvar Logger\t= new ko.extensions.Logger_v3('CodeToReadMe.js').clear(false).off(false).header(true);", 
    "\t\tvar scimoz\t= ko.views.manager.currentView.scimoz;", 
    "", 
    "\t\tvar file_active\t= ko.views.manager.currentView.languageObj.name;", 
    "\t\tvar file_inactive\t= (function()", 
    "\t\t{", 
    "\t\t\tko.commands.doCommand('cmd_switchpane');", 
    "\t\t\tvar lang\t= ko.views.manager.currentView.languageObj.name;", 
    "\t\t\tko.commands.doCommand('cmd_switchpane');", 
    "\t\t\treturn lang;", 
    "\t\t})();", 
    "", 
    "\t\tvar markdown_file\t= file_inactive == 'Markdown' ? file_inactive : ( file_active == 'Markdown' ? file_active : null ) ;", 
    "", 
    "\t\tvar activateFileForDocumentation = function()", 
    "\t\t{", 
    "\t\t\tif( file_active !== 'Markdown' )", 
    "\t\t\t\tko.commands.doCommand('cmd_switchpane');", 
    "\t\t};", 
    "", 
    "\t\tvar getContentForDocumentation = function()", 
    "\t\t{", 
    "\t\t\tvar sel_text\t= scimoz.selText;", 
    "\t\t\tvar answer\t= '';", 
    "\t\t\t", 
    "\t\t\tif( ! sel_text )", 
    "\t\t\t\tanswer = confirm ('\\t\\t\\t\\tNOTHING IS SELECTED.\\n\\n\\t\\t\\tDo you want comment whole file ?\\n\\n');", 
    "\t\t\t", 
    "\t\t\tif ( sel_text || answer )", 
    "\t\t\t\treturn sel_text ? sel_text : require(\"ko/editor\").getValue();", 
    "\t\t\telse", 
    "\t\t\t\treturn false;", 
    "\t\t};", 
    "", 
    "\t\tvar getLangForDocumentation = function()", 
    "\t\t{", 
    "\t\t\treturn file_active !== 'Markdown' ? file_active : file_inactive;", 
    "\t\t};", 
    "", 
    "\t\tvar insertSnippet = function()", 
    "\t\t{", 
    "\t\t\t//alert( 'insertSnippet' ); ", 
    "\t\t\tnew ko.extensions.vilbur.CodeToReadMe.Snippet()", 
    "\t\t\t\t\t.DocBlock(DocBlocks)", 
    "\t\t\t\t\t.insert();", 
    "\t\t};", 
    "", 
    "\t\tif( ! markdown_file ){", 
    "\t\t\talert( 'CodeToReadMe\\n\\nThere is not Markdown file in second pane.' );", 
    "\t\t\treturn;", 
    "\t\t}", 
    "", 
    "\t\tvar contetnt = getContentForDocumentation();", 
    "\t\t", 
    "\t\tif( ! contetnt )", 
    "\t\t\treturn; ", 
    "\t\t", 
    "\t\tvar DocBlocks\t= new ko.extensions.vilbur.CodeDocumentator( contetnt )", 
    "\t\t\t\t\t\t\t\t\t\t\t\t  .lang( getLangForDocumentation() )", 
    "\t\t\t\t\t\t\t\t\t\t\t\t  .getDocBlocks();", 
    "", 
    "\t\tko.commands.doCommand('cmd_switchpane');", 
    "", 
    "\t\tsetTimeout( function(){", 
    "\t\t\tinsertSnippet();", 
    "\t\t}, 500);", 
    "", 
    "\t}", 
    "", 
    "\treturn CodeToReadMe;", 
    "", 
    "})();", 
    "", 
    "", 
    "/* Run */", 
    "//new ko.extensions.vilbur.CodeToReadMe.CodeToReadMe();"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": 1, 
  "type": "macro", 
  "trigger": "trigger_startup"
}
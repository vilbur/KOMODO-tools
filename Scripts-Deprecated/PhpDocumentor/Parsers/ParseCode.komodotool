{
  "keyboard_shortcut": "", 
  "name": "ParseCode", 
  "language": "JavaScript", 
  "trigger_enabled": 0, 
  "rank": 100, 
  "trigger": "trigger_startup", 
  "value": [
    "/** Parse given string of code to DockBlock object", 
    " *", 
    " *", 
    " *", 
    " */", 
    "ko.extensions.ParseCode = (function() {", 
    "\t", 
    "\tvar dock_block_types = { ", 
    "\t\t", 
    "\t\t\t\"JavaScript\":{", 
    "\t\t\t\t'function':\t/(?:function\\s+(\\w+)|\\S+\\.prototype\\.(\\w+)|this\\.(\\w+)\\s*=\\s*\\(*function).*[\\r\\n\\s]*?{/gi,", 
    "\t\t\t\t'variable':\t/var\\s*\\S+\\s*=/gi,", 
    "\t\t\t},", 
    "\t\t\t\"PHP\":{", 
    "\t\t\t\t\t///(function\\s+\\S+.*[\\r\\n]?{)/gi,\t// function fooClassic(", 
    "\t\t\t},", 
    "\t\t\t\"Autohotkey\":{", 
    "\t\t\t}", 
    "\t\t};", 
    "\t", 
    "\t//var dock_block_tags = {", 
    "\t//\t'function':['param', 'return'],", 
    "\t//\t'variable':['var']\t\t", 
    "\t//};   ", 
    "\t", 
    "\t/**   Constructor ", 
    "\t */  ", 
    "\tfunction ParseCode(){", 
    "\t\t/*----   PRIVATE PROPERTIES   -------------------------------------------------------------------------------------------------*/", 
    "\t\tvar _this\t= this;", 
    "\t\tvar Logger\t= new ko.extensions.Logger_v3('ParseCode.js').clear(false).off(true); ", 
    "\t\t//var scimoz\t= ko.views.manager.currentView.scimoz;", 
    "\t\tvar PraseCodeTag\t= new ko.extensions.PraseCodeTag();", 
    "\t\t", 
    "\t\t/*----   PUBLIC PROPERTIES   -------------------------------------------------------------------------------------------------*/", 
    "\t\tthis.DocBlock\t= new ko.extensions.DocBlock();", 
    "\t\tthis.parsed_code\t= [];", 
    "\t\t//this.input_string;", 
    "\t\tthis.dock_block_type\t= ''; ", 
    "\t\t", 
    "\t\t/*------   PUBLIC METHODS   -------------------------------------------------------------------------------------------------*/\t", 
    "\t\t/** Parse code to DockBlock object.", 
    "\t\t *", 
    "\t\t * @param\tstring\t_input_string\tpart of code for parsing", 
    "\t\t * ", 
    "\t\t * @return object DocBlock", 
    "\t\t */ ", 
    "\t\tthis.parse = function(_input_string=''){ ", 
    "\t\t\t//Logger.clear(); ", 
    "\t\t\tthis.input_string\t= _input_string;", 
    "\t\t\tthis.dock_block_type\t= _getInputStringType();", 
    "\t\t\tthis.parsed_code\t= {};\t", 
    "", 
    "", 
    "\t\t\tLogger.info(this.input_string, 'ParseCode.input_string');", 
    "\t\t\tLogger.info(this.dock_block_type, 'ParseCode.dock_block_type');", 
    "\t\t\t", 
    "\t\t\tif(this.dock_block_type) ", 
    "\t\t\t\t_setParsedCode();", 
    "\t\t\t  ", 
    "\t\t\tLogger.info(this.parsed_code, 'ParseCode.parsed_code');", 
    "\t\t\tthis.DocBlock.setDockBlockTags(this.parsed_code);", 
    "\t\t\tLogger.info(this.DocBlock.tags, 'ParseCode.DocBlock.tags').force();\t\t\t", 
    "\t\t\treturn this.DocBlock; ", 
    "\t\t};   ", 
    "\t\t/** _get Used Tags In DocBlock", 
    "\t\t*/", 
    "\t\tfunction _getUsedTagsInDocBlock(){", 
    "\t\t\treturn _this.dock_block_type!=='function' ? [_this.dock_block_type] : ['summary', 'param', 'return' ];", 
    "\t\t}", 
    " ", 
    "\t\t/*------   PRIVATE METHODS   -------------------------------------------------------------------------------------------------*/\t", 
    "\t\t/** find tags in code and parse it ", 
    "\t\t *", 
    "\t\t * @return\tobject\tparsed data of found tags", 
    "\t\t*/", 
    "\t\tfunction _setParsedCode(){", 
    "\t\t\tPraseCodeTag.input_string\t= _this.input_string.replace(/\\s+/gi, ' ');", 
    "\t\t\tvar tags_in_block\t= _getUsedTagsInDocBlock();", 
    "\t\t\tLogger.info(tags_in_block, 'tags_in_block');", 
    "\t\t\t", 
    "\t\t\t//_this.parsed_code.summary\t= PraseCodeTag.parse('summary', _this.input_string);", 
    "\t\t\t//_this.parsed_code.description\t= PraseCodeTag.parse('description', _this.input_string); \t\t\t\t\t\t", 
    "\t\t\t", 
    "\t\t\tfor(var t=0; t<tags_in_block.length;t++) {", 
    "\t\t\t\t", 
    "\t\t\t\tvar tag\t= tags_in_block[t];", 
    "\t\t\t\tvar tag_data \t= PraseCodeTag.parse(tag);", 
    "\t\t\t\t//Logger.info(tag_data, 'tag_data'+'-'+tag); ", 
    "\t\t\t\tif(tag_data) ", 
    "\t\t\t\t\t_this.parsed_code[tag] = tag_data;", 
    "\t\t\t\t\t//_this.parsed_code['@'+tag] = tag_data;\t\t\t\t\t\t\t", 
    "\t\t\t\t", 
    "\t\t\t}", 
    "\t\t\tLogger.info(_this.parsed_code, 'parsed_code');", 
    "\t\t} ", 
    "\t\t", 
    "\t\t/** find type of code, E.G: 'function' OR 'param' OR 'var'", 
    "\t\t *", 
    "\t\t * @return\tstring\tkey from dock_block_types", 
    "\t\t */ ", 
    "\t\tfunction _getInputStringType(){", 
    "\t\t", 
    "\t\t\tvar lang\t= ko.views.manager.currentView.languageObj.name;", 
    "\t\t\tvar dock_types_keys\t= Object.keys(dock_block_types[lang]);", 
    "\t\t\tfor(var k=0; k<dock_types_keys.length;k++) {", 
    "\t\t\t\tvar regex_key = dock_types_keys[k];\t\t\t\t", 
    "\t\t\t\tvar regex = dock_block_types[regex_key];", 
    "\t\t\t\tif (_this.input_string.match(regex))", 
    "\t\t\t\t\treturn regex_key;\t", 
    "\t\t\t}", 
    "\t\t}", 
    " ", 
    "\t}\t ", 
    "\t", 
    "\treturn ParseCode;", 
    "})();", 
    "", 
    "", 
    "/*\t-------------------------------------------------------------------------------------------------------------\t*/", 
    "/*\tParseCode TEST\t*/", 
    "/*\tProperties test for object\t*/", 
    "/*\t-------------------------------------------------------------------------------------------------------------\t*/", 
    "", 
    "ko.extensions.ParseCodeTest = (function() {", 
    "\tvar\tTestObject\t= new ko.extensions.ParseCode();", 
    "\tvar\ttest_properties\t= ['DocBlock.tags'];", 
    "\tvar\ttest_methods\t= {", 
    "\t\t'parse': [ ", 
    "\t\t\t'\tfunction TestPhpDoc(param1=\"fooString\", param2=true,array=[1,2,3]){'+", 
    "\t\t\t'\\n\t\tvar string\t= require(\"ko/console\").warn(Array(5).join(param1+\"-\"));'+", 
    "\t\t\t'\\n\t\t'+", 
    "\t\t\t'\\n\t\treturn \"string\"'+", 
    "\t\t\t'\\n\t}'", 
    "\t\t],", 
    "\t};\t", 
    "\tif(ko.extensions.TestObejctProperties)", 
    "\t\t(new ko.extensions.TestObejctProperties(method_toggle=false, properties_toggle=true))", 
    "\t\t\t.test(TestObject, test_methods, test_properties);", 
    "});", 
    "/* RUN TEST */", 
    "//ko.extensions.ParseCodeTest();", 
    "", 
    "", 
    " ", 
    "", 
    "", 
    "", 
    "", 
    "", 
    "", 
    "\t"
  ], 
  "version": "1.0.12", 
  "async": 1, 
  "type": "macro", 
  "icon": "chrome://fugue/skin/icons/tick.png"
}
{
  "keyboard_shortcut": "", 
  "name": "CodeDocumentator", 
  "language": "JavaScript", 
  "trigger_enabled": 1, 
  "rank": 100, 
  "trigger": "trigger_startup", 
  "value": [
    "if( typeof ko.extensions.vilbur === 'undefined'  )", 
    "\tko.extensions.vilbur = {};", 
    "", 
    "/** Parse given string of code to DockBlock object", 
    " *", 
    " */", 
    "ko.extensions.vilbur.CodeDocumentator = (function()", 
    "{", 
    "\t/**   Constructor", 
    "\t */", 
    "\tfunction CodeDocumentator()", 
    "\t{", 
    "\t\tvar Logger\t= new ko.extensions.Logger_v3('DockBlockParser.js').clear(true).off(false).header(false);", 
    "\t\tvar CodeMatcher\t= new ko.extensions.vilbur.CodeMatcher();", 
    "", 
    "\t\tvar matches = CodeMatcher.searchFor(['comment.dockblock','function']).getSorted();", 
    "", 
    "\t\t/** functionName", 
    "\t\t */", 
    "\t\tvar fn_doc_pairs = (function()", 
    "\t\t{", 
    "\t\t\tvar fn_doc_pairs\t= [];", 
    "\t\t\t/** setFnDocPair", 
    "\t\t\t */", 
    "\t\t\tvar getDocBlockIfExist = function(m)", 
    "\t\t\t{", 
    "\t\t\t\treturn typeof matches[m-1] !== 'undefined' || matches[m-1].type == 'comment.dockblock' ? matches[m-1] : '';", 
    "\t\t\t};", 
    "", 
    "\t\t\tfor(var m=0; m<matches.length;m++)", 
    "\t\t\t\tif( matches[m].type.match(/^function/gi) )", 
    "\t\t\t\t\tfn_doc_pairs.push({", 
    "\t\t\t\t\t\t'function':\tmatches[m],", 
    "\t\t\t\t\t\t'docblock':\tgetDocBlockIfExist(m)", 
    "\t\t\t\t\t});", 
    "", 
    "\t\t\treturn fn_doc_pairs;", 
    "\t\t})();", 
    "", 
    "\t\tLogger.info(fn_doc_pairs, 'fn_doc_pairs');", 
    "\t}", 
    "", 
    "\treturn CodeDocumentator;", 
    "})();", 
    "", 
    "", 
    "///*\t-------------------------------------------------------------------------------------------------------------\t*/", 
    "///*\tCodeDocumentator TEST\t*/", 
    "///*\tProperties test for object\t*/", 
    "///*\t-------------------------------------------------------------------------------------------------------------\t*/", 
    "//", 
    "//var Logger\t= new ko.extensions.Logger_v3('CodeParserTest.js').clear(false).off(false).header(false);", 
    "//", 
    "//var code_snippet = \t'\tthis.TestPhpDoc = function( param1,$pString=\"fooString\", pBoolean=true,paramArray=[1,\\'string\\',3], pObj={\"key\":\"value\"}  ){'+", 
    "//\t'\\n\t\t// Code...'+", 
    "//\t'\\n\t\t// Code...'+", 
    "//\t'\\n\t\t'+", 
    "//\t'\\n\t\treturn \"string\"'+", 
    "//\t'\\n\t}';", 
    "//", 
    "var fn_code_parsed = new ko.extensions.vilbur.CodeDocumentator();", 
    "//", 
    "//Logger.info(fn_code_parsed, 'fn_code_parsed');"
  ], 
  "version": "1.0.12", 
  "async": 1, 
  "type": "macro", 
  "icon": "chrome://fugue/skin/icons/tick.png"
}
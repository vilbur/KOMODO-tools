{
  "keyboard_shortcut": "", 
  "name": "Repair comment", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/* REPAIR COMMENT", 
    "\t", 
    "\t", 
    "\tREPAIR FROM:", 
    "\t//========================================", 
    "\t", 
    "\t/** Repair this comment", 
    "\t", 
    "\t *\tLorem ipsum", 
    "\t **", 
    "\t ", 
    "\t ", 
    "\t *", 
    "\t   Lorem ipsum", 
    "\t   ", 
    "\t   */", 
    "\t", 
    "\t//========================================", 
    "\t", 
    "\t//REPAIR TO:", 
    "\t//========================================", 
    "\t", 
    "\t/** Repair this comment", 
    "\t * \t", 
    "\t * Lorem ipsum", 
    "\t * ", 
    "\t * Lorem ipsum", 
    "\t * \t   ", 
    "\t */", 
    "\t", 
    "\t//========================================", 
    "\t", 
    "\t", 
    "/**/", 
    "", 
    "var scimoz\t= ko.views.manager.currentView.scimoz;", 
    "var sel_text\t= scimoz.selText;", 
    "", 
    "if( ! sel_text ){", 
    "\talert( 'Nothing selected' );", 
    "\treturn; ", 
    "}", 
    "", 
    "/** Get whitesapce before first line", 
    " */", 
    "var preceding_whitespace = (function()", 
    "{", 
    "\tvar preceding_whitespace\t= sel_text.match(/^[\\s]+/gi);", 
    "\t", 
    "\treturn (preceding_whitespace?preceding_whitespace:'') + '[[%tabstop1: ]]';", 
    "})();", 
    "/** remove whitespace and '*' on line starts", 
    " *\t", 
    " */", 
    "var lines_clean = sel_text.split(/\\n/g).map(function(line)", 
    "{", 
    "\tvar comment_start_or_end\t= /^\\s*(\\/\\*|\\*\\/)/gi.exec(line);", 
    "\t", 
    "\tif( comment_start_or_end )", 
    "\t\treturn line.replace(/^\\s*/gi, '');", 
    "", 
    "\treturn line.replace(/^\\s*\\*+/gi, '');", 
    "});", 
    "", 
    "/** remove multiple empty lines ", 
    " *\t", 
    " */", 
    "lines_clean\t= lines_clean.join('\\n').replace(/\\s*\\n\\s*\\n\\s*\\n\\s*/gi, '\\n\\n').split(/\\n/g);", 
    "", 
    "", 
    "var lines = lines_clean.map(function(line)", 
    "{", 
    "\tvar tabstop_2\t= '[[%tabstop2:]]';FROM:", 
    "\tvar comment_start\t= /^\\s*(\\/\\*)/gi.exec(line);", 
    "\tvar comment_end\t= /^\\s*(\\*\\/)/gi.exec(line);\t", 
    "\t", 
    "\tline = line.replace(/^\\s*/gi, ''); ", 
    "\t", 
    "\tif( comment_start || comment_end )", 
    "\t\treturn preceding_whitespace +( comment_end ? tabstop_2 : '')+ line;", 
    "", 
    "\treturn preceding_whitespace + tabstop_2+'*[[%tabstop3: ]]' + line;  ", 
    "});", 
    "", 
    "var comment_snippet = {", 
    "\thasAttribute: function(name) {", 
    "\t\treturn name in this;", 
    "\t},", 
    "\tgetStringAttribute: function(name) {", 
    "\t\treturn this[name];", 
    "\t},", 
    "\tname:\t\"comment snippet\",", 
    "\tindent_relative: \"true\",", 
    "\tvalue:\tlines.join('\\n')", 
    "};", 
    "ko.projects.snippetInsert(comment_snippet);", 
    "", 
    "", 
    "//scimoz.replaceSel( lines.join('\\n') );", 
    " "
  ], 
  "trigger": "trigger_postopen", 
  "rank": 100, 
  "version": "1.0.12", 
  "async": false, 
  "type": "macro", 
  "icon": "chrome://fugue/skin/icons/asterisk-yellow.png"
}
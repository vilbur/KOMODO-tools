{
  "keyboard_shortcut": "", 
  "name": "file_search_in_path", 
  "value": [
    "/** Search file or dir in path recursive", 
    " * ", 
    " * @example fileSearchInPath( 'C:\\dir\\subdir', 'file.txt' )\tSearch 'file.txt' in 'C:\\dir\\subdir', C:\\dir' and 'C:\\'", 
    " * @example fileSearchInPath( 'C:\\dir\\subdir', /.txt/g )\tSearch '.txt' files ", 
    " * ", 
    " * @param\tstring\tpath\tPath where to search ", 
    " * @param\tstring|RegEx\tsearch\tFile or dir to search", 
    " *", 
    " * @return\tstring|null\tPath where of found OR null if not found", 
    " */", 
    "var fileSearchInPath = function( path, search )", 
    "{", 
    "\tvar koFile\t= require(\"ko/file\"); ", 
    "\tvar path_split\t= path.split('\\\\');", 
    "\tvar found_path\t= null;", 
    "\t", 
    "\tif( search.constructor.name !== 'RegExp' )", 
    "\t\tsearch = new RegExp(search, 'gi');", 
    "\t", 
    "\t/** fileExists", 
    "\t*/", 
    "\tfunction fileExists()", 
    "\t{", 
    "\t\tvar dir_path\t= path_split.join('\\\\') + '\\\\';", 
    "\t\tvar list\t= koFile.list(dir_path);", 
    "\t\t", 
    "\t\tfor(var i=0; i<list.length;i++)", 
    "\t\t\tif( list[i].match(  search ) && ! found_path  )", 
    "\t\t\t\tfound_path = dir_path + list[i];", 
    "", 
    "\t\treturn  found_path !== null;", 
    "\t}", 
    "\t", 
    "\twhile ( ! fileExists() && path_split.length > 1 )", 
    "\t\tpath_split.pop();", 
    "", 
    "\treturn found_path ? found_path : null;", 
    "\t", 
    "};[[%tabstop:]]!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "auto_abbreviation": "true", 
  "indent_relative": "true", 
  "type": "snippet", 
  "treat_as_ejs": "false", 
  "icon": "file://C://GoogleDrive//Programs//code//Komodo//Icons//filetypes//Komodo//auto.png"
}
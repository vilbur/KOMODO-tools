{
  "keyboard_shortcut": "", 
  "name": "Set Komodo Preferences", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/* Apperance */", 
    "//setString(\"interface-scheme\", \"vilbur_interface\")", 
    "//setString(\"editor-scheme\", \"vilbur_editor\")", 
    "", 
    "var Preferences = {", 
    "    \"Komodo\":{", 
    "        \"analytics_enabled\": 0,", 
    "        ", 
    "    },", 
    "    ", 
    "    \"Apperance\":{", 
    "        \"interface-scheme\": \"vilbur\",\t\t", 
    "        \"editor-scheme\":    \"vilbur\",", 
    "        \"widget-scheme\":    \"vilbur\",", 
    "        \"link-schemes\": 1,", 
    "\t\t", 
    "        \"ui.hide.chrome\":   \t0, // Use native windows borders", 
    "        \"ui.classic.mode\":\t0,                        ", 
    "        \"ui.classic.statusbar\":\t1,", 
    "        \"ui.classic.toolbar\":    1,", 
    "\t\t", 
    "\t\t\"ui.tabs.sidepanes.left.layout\" : \"vertical\", \t// set left pane tabs vertical", 
    "\t\t\"ui.tabs.sidepanes.right.layout\": \"vertical\", \t// set left pane tabs vertical\t\t", 
    "         ", 
    "    },", 
    "\t", 
    "", 
    "    \"Code intelligence\":{", 
    "        \"codeintel_selected_catalogs\": \"[u'jQuery']\", ", 
    "    },", 
    "\t", 
    "    \"Editor\":{", 
    "\t\t\"editShowMinimap\":\t0,", 
    "\t\t\"editEnableMouseZoom\":\t0,\t\t// Enable\\Disable Font Zooming via Mouse Wheel", 
    "    },", 
    "\t", 
    "    \"Indentation\":{", 
    "\t\t\"useSmartTabs\": \t0,\t\t// Allow file contents to override Tab and indentation setting", 
    "\t\t\"useTabs\": \t1,\t\t// prefer tabs over spaces", 
    "\t\t\"tabWidth\":\t4,  \t\t// Number of spaces per indent", 
    "\t\t\"indentWidth\":\t4,  \t\t// Width of each tab", 
    "\t\t\"enableElasticTabstops\":\t1,", 
    "    },", 
    "\t", 
    "    \"Snart Editing\":{", 
    "\t\t\"editSmartWrapSelection\":\t1,\t\t// Wrap selection with typed delimetr instead of oweriding // WRAP SELECTION TO \"'[{(", 
    "\t\t\"editSmartWrapSelectionKeep\": \t1,\t\t// Retain selected text, selected text stays selected after wraping", 
    "\t\t\"wrapSelectionOnlyPlainText\":\t0, \t\t// Wrap selection with interpuctiuon in it eg: \"delimetred.selection.like:this\"", 
    "\t\t\"editSmartCutCopyWithoutSelection\": \t0,\t\t// Cut/Copy with no selection will cut/copy whole line", 
    "", 
    "\t\t\"wrapSelectionDelimiters\",\t\"([{&lt;\\\"'`*/%25\"", 
    "    },", 
    "\t", 
    "\t", 
    "    \"Snart Editing - Folding \":{", 
    "\t\t\"editFoldStyle\":\"squaretree\",\t\t\t\t// Fold mark style: Square trees", 
    "\t\t\"editFoldLines\":\t1,\t\t\t// Use horizontal line on folds", 
    "\t\t\"editRestoreFoldPoints\":\t1,\t\t\t// Restore fold state on document load", 
    "    },", 
    "    \"Find\":{", 
    "        \"isearchType\": 2,\t\t\t\t\t\t\t// Incremental Serach Uses: RegEx ", 
    "    },", 
    "    ", 
    "    \"Key bindings\":{", 
    "        \"keybinding-scheme\": \"vilbur\",", 
    "    },", 
    "    ", 
    "    \"Primary languages\":{", 
    "        \"languages/AngularJS/primary\":  0,", 
    "        \"languages/Autohotkey/primary\": 1,", 
    "        \"languages/C++/primary\":        0,", 
    "        \"languages/CoffeeScript/primary\":0,", 
    "        \"languages/Django/primary\":     0,", 
    "        \"languages/EJS/primary\":        1,", 
    "        \"languages/Go/primary\":         0,", 
    "        \"languages/Less/useTabs\":       0,", 
    "        \"languages/Markdown/primary\":   0,", 
    "        \"languages/Node.js/primary\":    0,", 
    "        \"languages/Perl/primary\":       0,", 
    "        \"languages/Python/primary\":     0,", 
    "        \"languages/Python3/primary\":\t\t0,", 
    "        \"languages/Ruby/primary\":\t\t0,", 
    "        \"languages/Sass/primary\":        1,", 
    "        \"languages/Tcl/primary\":\t0,", 
    "        \"languages/Twig/primary\":       \t0,", 
    "        \"languages/XML/primary\":        \t0,", 
    "    },", 
    "\t", 
    "\t\"Language help\" : {", 
    "\t\t\"DefaultHelpCommand\"\t:\"%(browser) http://www.google.com/search?q=%W\",", 
    "\t\t\"OtherHelpCommand\"\t\t:\"%(browser) http://www.google.com/search?q=%W\",\t\t", 
    "\t\t\"AutohotkeyHelpCommand\" :\"%(browser) https://autohotkey.com/docs/commands/%W.htm\",\t\t", 
    "\t\t//\"\":\"\",\t\t\t\t\t\t\t\t\t\t", 
    "\t},", 
    "\t", 
    "\t\"Browser\":{", 
    "\t\t\"browser\":\"C:\\\\Program Files (x86)\\\\Google\\\\Chrome\\\\Application\\\\chrome.exe\"\t\t", 
    "\t},", 
    "\t", 
    "", 
    "    \"floating panes\":{", 
    "        \"ui.tabs.sidepanes.state\": '{\"widgets\":{},\"panes\":{\"workspace_bottom_area\":{\"collapsed\":true,\"children\":[[{\"id\":\"scc-widget\"}],[{\"id\":\"breakpoints-tabpanel\"}],[{\"id\":\"runoutput-desc-tabpanel\"}],[{\"id\":\"projectUnitTestsResults_tabpanel\"}],[{\"id\":\"notifications-widget\"}],[{\"id\":\"klint_tabpanel\"}],[{\"id\":\"console-widget\"}]],\"selectedTab\":\"scc-widget\"},\"workspace_right_area\":{\"collapsed\":false,\"children\":[[{\"id\":\"toolbox2viewbox\"}],[{\"id\":\"codebrowserviewbox\"}],[{\"id\":\"placesViewbox\"}]],\"selectedTab\":\"toolbox2viewbox\"},\"workspace_left_area\":{\"collapsed\":false,\"children\":[[{\"id\":\"openfilesViewbox\"}],[{\"id\":\"dbexplorer_viewbox\"}],[{\"id\":\"collab-panel\"}],[{\"id\":\"DOMviewbox\"}]],\"selectedTab\":\"openfilesViewbox\"}}}', ", 
    "    },", 
    "    \"Workspace\":{", 
    "        \"donotask_open_recent_files_on_project_open\":\t1, // When opening a project - Open recent files", 
    "        \"donotask_close_all_files_on_project_close\":\t1, // When closing a project - Close all open files in project", 
    "    },", 
    "}", 
    "", 
    "", 
    "", 
    "", 
    "for (var section in Preferences) {", 
    "    for (var key in Preferences[section]) {", 
    "        var value = Preferences[section][key];", 
    "        var type  = findVauleType(value);", 
    "        if      ( type==\"string\" ) setString(key, value)", 
    "        else if ( type==\"number\" ) setNumber(key, value)", 
    "        else if ( type==\"boolean\") setBoolean(key, value)", 
    "    }", 
    "}", 
    "", 
    "/**", 
    "**/", 
    "function findVauleType(value) {", 
    "    if (  value==0 || value==1 )", 
    "        return \"boolean\"", 
    "    if ( isNaN(value)== false)", 
    "        return \"number\"", 
    "    return \"string\"", 
    "}", 
    "", 
    "/**", 
    "**/", 
    "function setBoolean (key, value) {", 
    "    //var key = ko.interpolate.interpolateStrings([\"%(ask: Pref name)\"]);", 
    "    if (key) {", 
    "        //var value = ko.interpolate.interpolateStrings([\"%(ask: Value: 1)\"]);", 
    "        if (value !== null) {", 
    "            var prefs = Components.classes['@activestate.com/koPrefService;1'].getService(Components.interfaces.koIPrefService).prefs;", 
    "            //dump(\"Setting pref '\" + key + \"' to '\" + value + \"'\\n\");", 
    "            if (value == 1 ) {", 
    "                prefs.setBooleanPref(key, true);", 
    "            } else {", 
    "                prefs.setBooleanPref(key, false);", 
    "            }", 
    "        }", 
    "    }", 
    "}", 
    "", 
    "/**", 
    "**/", 
    "function setString(key, value) {", 
    "   //var key = ko.interpolate.interpolateStrings([\"%(ask: Pref name)\"]);", 
    "    if (key) {", 
    "        //var value = ko.interpolate.interpolateStrings([\"%(ask: Value)\"]);", 
    "        //if (value !== null) {", 
    "            var prefs = Components.classes['@activestate.com/koPrefService;1'].getService(Components.interfaces.koIPrefService).prefs;", 
    "            //dump(\"Setting pref '\" + key + \"' to '\" + value + \"'\\n\");", 
    "            prefs.setStringPref(key, value);", 
    "        //}", 
    "    } ", 
    "}", 
    "", 
    "/**", 
    "**/", 
    "function setNumber(key, value) {", 
    "    //var key = ko.interpolate.interpolateStrings([\"%(ask: Pref name)\"]);", 
    "    //if (key) {", 
    "        //var key = ko.interpolate.interpolateStrings([\"%(ask: Value)\"]);", 
    "        if (key !== null) {", 
    "            var prefs = Components.classes['@activestate.com/koPrefService;1'].getService(Components.interfaces.koIPrefService).prefs;", 
    "            //dump(\"Setting pref '\" + key + \"' to '\" + key + \"'\\n\");", 
    "            prefs.setLongPref(key, parseInt(key));", 
    "        }", 
    "    //}", 
    "}"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}
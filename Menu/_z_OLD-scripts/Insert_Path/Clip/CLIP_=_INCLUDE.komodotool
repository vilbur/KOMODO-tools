{
  "keyboard_shortcut": "", 
  "name": "CLIP => INCLUDE", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "komodo.assertMacroVersion(3);", 
    "if ( komodo.view ) { komodo.view.setFocus(); }", 
    "ko.views.manager.currentView.scimoz.beginUndoAction()", 
    "try {", 
    "\tscimoz = ko.views.manager.currentView.scimoz;", 
    "", 
    "", 
    "\tlang = ko.views.manager.currentView.languageObj.name;", 
    "\tko.commands.doCommand('cmd_pasteAndSelect');", 
    "\tclip_path = scimoz.selText;", 
    "\tko.commands.doCommand('cmd_delete')", 
    "", 
    "\tif ( clip_path.match(/\\w:[\\S\\s]+\\.\\w+/g)!=null ) {", 
    "\t\tvar currentView = ko.views.manager.currentView;", 
    "\t\tvar doc = currentView.koDoc || currentView.document;  // Support both K6- and K7+", 
    "\t\tvar cwd = doc.file.dirName;", 
    "\t\tvar relative_path = relativePath( cwd, clip_path );", 
    "\t\t//alert( lang );", 
    "", 
    "\t\tswitch (lang) {", 
    "\t\t\tcase \"PHP\": writePath_PHP();break;", 
    "\t\t\tcase \"Autohotkey\": writePath_AHK();break;", 
    "\t\t\tcase \"SCSS\":case \"CSS\": writePath_SCSS();break;", 
    "\t\t\tcase \"LaravelBlade\": writePath_LaravelBlade();break;", 
    "\t\t\tcase \"JavaScript\": writePath_JavaScript();break;", 
    "\t\t\tdefault: writePath_default()", 
    "\t\t}", 
    "", 
    "\t}", 
    "", 
    "} finally {", 
    "", 
    "\tko.views.manager.currentView.scimoz.endUndoAction()", 
    "}", 
    "", 
    "function writePath_default() {", 
    "\t\tkomodo.view.selection = relative_path", 
    "", 
    "}", 
    "", 
    "", 
    "", 
    "/**", 
    "* if gulpfile.js : split path 'laravel\\resources\\assets\\.*\\' and use relative path to file", 
    "*", 
    "*", 
    "**/", 
    "function writePath_JavaScript() {", 
    "\tvar curent_filename = ko.views.manager.currentView.koDoc.file.path.split(/(\\\\|\\/)/g).pop();", 
    "", 
    "\tif (curent_filename=='gulpfile.js') {", 
    "", 
    "", 
    "\t\tif (clip_path.match(/\\\\node_modules\\\\/g) != null ) {", 
    "\t\t\tvar path = 'node_modules/' + clip_path.split(/node_modules[\\\\/]/).pop().replace(/\\\\/gi, '/');", 
    "", 
    "\t\t}else {", 
    "\t\t\tvar path = clip_path.split(/resources\\\\assets\\\\\\w+\\\\/).pop().replace(/\\\\/gi, '/');", 
    "\t\t}", 
    "", 
    "\t\t\tkomodo.view.selection = '\"'+path+'\",'", 
    "", 
    "", 
    "\t}", 
    "", 
    "", 
    "}", 
    "", 
    "", 
    "function writePath_PHP() {", 
    "\tkomodo.view.selection = 'include(\"'+relative_path+'\");';", 
    "}", 
    "function writePath_LaravelBlade() {", 
    "\t//komodo.view.selection = '@include(\"'+relative_path.split('.blade.php').shift() +'\")';", 
    "\tClipInclude();", 
    "}", 
    "", 
    "", 
    "", 
    "function writePath_AHK() {", 
    "\t//komodo.view.selection = '#Include %A_ScriptDir%\\\\'+relative_path.replace(/\\//gi, '\\\\');", 
    "\tkomodo.view.selection = '#Include %A_ScriptDir%\\\\'+relative_path.replace(/\\//gi, '\\\\');", 
    "", 
    "}", 
    "", 
    "function writePath_SCSS() {", 
    "", 
    "", 
    "", 
    "\tkomodo.view.selection = '@import \"'+relative_path+'\";';", 
    "", 
    "", 
    "", 
    "", 
    "}", 
    "", 
    "", 
    "", 
    "", 
    "function relativePath( fromPath, toPath )", 
    "{", 
    "\tvar nsFileFrom = Components.classes[\"@mozilla.org/file/local;1\"]", 
    "\t\t\t\t\t\t\t.createInstance( Components.interfaces.nsILocalFile );", 
    "\tnsFileFrom.initWithPath(fromPath);", 
    "\tvar nsFileTo = Components.classes[\"@mozilla.org/file/local;1\"]", 
    "\t\t\t\t\t\t\t.createInstance( Components.interfaces.nsILocalFile );", 
    "\tnsFileTo.initWithPath(toPath);", 
    "\treturn nsFileTo.getRelativeDescriptor(nsFileFrom);", 
    "}", 
    "", 
    "function ClipInclude() {", 
    "", 
    "komodo.assertMacroVersion(3);", 
    "if ( komodo.view ) { komodo.view.setFocus(); }", 
    "ko.views.manager.currentView.scimoz.beginUndoAction()", 
    "try {", 
    "\tscimoz = ko.views.manager.currentView.scimoz;", 
    "\tvar lang = ko.views.manager.currentView.languageObj.name;", 
    "\tko.commands.doCommand('cmd_pasteAndSelect');", 
    "\tvar path = scimoz.selText;", 
    "\tko.commands.doCommand('cmd_delete')", 
    "\tif ( path.match(/\\w:[\\S\\s]+\\.\\w+/g)!=null ) {", 
    "\t\tvar currentView = ko.views.manager.currentView;", 
    "\t\tvar doc = currentView.koDoc || currentView.document;  // Support both K6- and K7+", 
    "\t\tvar cwd = doc.file.dirName;", 
    "\t\tvar relative_path = relativePath( cwd, path );", 
    "\t\t//alert( lang );", 
    "\t\tswitch (lang) {", 
    "\t\t\tcase \"PHP\": writePath_PHP();break;", 
    "\t\t\tcase \"Autohotkey\": writePath_AHK();break;", 
    "\t\t\tcase \"SCSS\": writePath_SCSS();break;", 
    "\t\t\tcase \"LaravelBlade\": writePath_LaravelBlade();break;", 
    "\t\t}", 
    "\t}", 
    "", 
    "} finally {", 
    "", 
    "\tko.views.manager.currentView.scimoz.endUndoAction()", 
    "}", 
    "", 
    "", 
    "", 
    "function writePath_PHP() {", 
    "", 
    "\tkomodo.view.selection = 'include(\"'+relative_path+'\");';", 
    "", 
    "", 
    "", 
    "}", 
    "function writePath_LaravelBlade() {", 
    "\t//komodo.view.selection = '@include(\"'+relative_path.split('.blade.php').shift() +'\")';", 
    "\tClipInclude() ;", 
    "}", 
    "", 
    "", 
    "", 
    "function writePath_AHK() {", 
    "\t//komodo.view.selection = '#Include %A_ScriptDir%\\\\'+relative_path.replace(/\\//gi, '\\\\');", 
    "\tkomodo.view.selection = '%A_ScriptDir%\\\\'+relative_path.replace(/\\//gi, '\\\\');", 
    "", 
    "}", 
    "", 
    "function writePath_SCSS() {", 
    "\tkomodo.view.selection = '@import \"'+relative_path+'\";';", 
    "}", 
    "", 
    "", 
    "", 
    "", 
    "function relativePath( fromPath, toPath )", 
    "{", 
    "\tvar nsFileFrom = Components.classes[\"@mozilla.org/file/local;1\"]", 
    "\t\t\t\t\t\t\t.createInstance( Components.interfaces.nsILocalFile );", 
    "\tnsFileFrom.initWithPath(fromPath);", 
    "\tvar nsFileTo = Components.classes[\"@mozilla.org/file/local;1\"]", 
    "\t\t\t\t\t\t\t.createInstance( Components.interfaces.nsILocalFile );", 
    "\tnsFileTo.initWithPath(toPath);", 
    "\treturn nsFileTo.getRelativeDescriptor(nsFileFrom);", 
    "}", 
    "", 
    "function ClipInclude() {", 
    "\t\t//komodo.assertMacroVersion(3);", 
    "\t//if (komodo.view) { komodo.view.setFocus(); }", 
    "\t_part = komodo.findPart('macro', 'CLIP => @include( VIEW )')", 
    "\tif (!_part) {alert(\"Couldn't find a macro called 'CLIP => @include( VIEW )' when executing macro.\"); return", 
    "\t}", 
    "\tko.projects.invokePart(_part);", 
    "}", 
    "", 
    "}"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}
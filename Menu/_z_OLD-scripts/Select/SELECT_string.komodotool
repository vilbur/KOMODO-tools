{
  "keyboard_shortcut": "Ctrl+W", 
  "name": "SELECT string", 
  "language": "JavaScript", 
  "trigger": "trigger_postopen", 
  "value": [
    "", 
    "/**", 
    "*    select string text between {} or [] or () or '' or \"\"", 
    "*    or select 'namespacestring' e.g:  \\App\\Services\\Database\\CollectionLinkzzzzzzzz", 
    "*", 
    "*", 
    "**/", 
    "komodo.assertMacroVersion(3);", 
    "ko.views.manager.currentView.scimoz.beginUndoAction()", 
    "try {", 
    "\tscimoz = ko.views.manager.currentView.scimoz;", 
    "\tvar selectedText = scimoz.selText;", 
    "\tvar regex_string = /^['\"](.*)['\"]$/gi;", 
    "\tvar match =  regex_string.exec(selectedText);", 
    "", 
    "\tif (match) {", 
    "", 
    "\t\tko.commands.doCommand('cmd_left')", 
    "\t\tko.commands.doCommand('cmd_right')", 
    "", 
    "\t\tfor(var i=0; i<=selectedText.length-3;i++) {", 
    "\t\t\tko.commands.doCommand('cmd_selectCharNext')", 
    "\t\t}", 
    "", 
    "\t}else {", 
    "\t\t/* GO AND FIND CHARACTER */", 
    "\t\tvar findCharacters = [", 
    "\t\t\t'\\'',", 
    "\t\t\t'\"',", 
    "\t\t\t'\\\\\\)',", 
    "\t\t\t'\\\\\\]',", 
    "\t\t\t'}',", 
    "\t\t];", 
    "", 
    "\t\t//alert( findCharacters.join('') );", 
    "\t\t//alert( '['+findCharacters.join()+']' );", 
    "\t\t//ko.find.findNextInMacro( window, 0, '['+findCharacters.join()+']', 2, 0, true, false, find, false, true );", 
    "\t\tko.find.findNextInMacro(window, 0, '['+findCharacters.join()+']', 2, 0, false, false, find, false, true);", 
    "\t\t/*    go left until whitespace or quote or bracket    */", 
    "\t\tvar selectedText = scimoz.selText;", 
    "", 
    "\t\t/* GO AND FIND NEXT OPPOSITE CHARACTER */", 
    "\t\tswitch (selectedText) {", 
    "\t\t\tcase '\\'':prevChar = '\\'';break;", 
    "\t\t\tcase '\"' :prevChar = '\"';break;", 
    "\t\t\tcase ')' :prevChar = '(';break;", 
    "\t\t\tcase ']' :prevChar = '[';break;", 
    "\t\t\tcase '}' :prevChar = '{';break;", 
    "\t\t\tdefault:", 
    "\t\t\tprevChar =  null;", 
    "\t\t}", 
    "\t\t//alert( prevChar );", 
    "\t\tif (prevChar) {", 
    "\t\t\tvar matchFound = false;", 
    "\t\t\tr = 0;", 
    "\t\t\twhile ( !matchFound && r<200 ) {", 
    "\t\t\t\tko.commands.doCommand('cmd_selectCharPrevious')", 
    "\t\t\t\tvar selectedText = scimoz.selText;", 
    "\t\t\t\t//var prevCharFound = selectedText[0];", 
    "\t\t\t\tvar matchFound = selectedText[0]==prevChar;", 
    "\t\t\t\tr++", 
    "\t\t\t}", 
    "", 
    "\t\t\t /*\tSELECT SELECTION FORWARD,SO CURSOR WILL STAY LEFT\t*/", 
    "\t\t\tvar foundedSelection = scimoz.selText;", 
    "\t\t\tko.commands.doCommand('cmd_left')", 
    "\t\t\tfor(var i=0; i<=foundedSelection.length;i++) {", 
    "\t\t\t\tko.commands.doCommand('cmd_selectCharNext')", 
    "", 
    "\t\t\t}", 
    "\t\t}", 
    "\t}", 
    "", 
    "", 
    "", 
    "}", 
    "finally { ko.views.manager.currentView.scimoz.endUndoAction()}"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "trigger_enabled": false, 
  "async": false, 
  "type": "macro"
}
{
  "keyboard_shortcut": "", 
  "name": "AutoIndentWordlist", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/* Autoindent wordlist for Typing iad instancer", 
    " *", 
    " * @EXAMPLE", 
    " * INPUT:", 
    " *\t\ttest-background-color|R|$test-background-color", 
    " *\t\ttest-height|R|$test-height", 
    " *\t\ttest-item-color|R|$test-item-color", 
    " *\t\ttest-item-hover-color|R|$test-item-hover-color", 
    " *\t\t", 
    " * OUTPU:", 
    " *\t\ttest-background-color\t|R|$test-background-color", 
    " *\t\ttest-height            \t|R|$test-height", 
    " *\t\ttest-item-color        \t|R|$test-item-color", 
    " *\t\ttest-item-hover-color\t|R|$test-item-hover-color", 
    " *", 
    " */", 
    "var Logger\t= ko.extensions.Logger_v3 ? new ko.extensions.Logger_v3(this).clear(false).off(false) : require('ko/console');", 
    "var scimoz\t= ko.views.manager.currentView.scimoz;", 
    "", 
    "var longest_word\t= 0;", 
    "var lines\t= scimoz.selText.trim().split(/\\n/);", 
    "", 
    "", 
    "var lines_parsed = lines.map(function(line)", 
    "{", 
    "\tvar parsed_line = line.replace(/\\s*(\\|[RD]\\|)/gi, '~~~$1').split('~~~');", 
    "\t//var length_ceil = Math.ceil(parsed_line[0].length/4)*4;", 
    "\tvar length = parsed_line[0].length;\t", 
    "\t", 
    "\t//if(  length_ceil > longest_word )", 
    "\t//\tlongest_word = length_ceil;", 
    "\t", 
    "\tif(  length > longest_word )", 
    "\t\tlongest_word = length;", 
    "\t\t", 
    "\treturn parsed_line;", 
    "}); ", 
    "", 
    "//longest_word +=4", 
    "//longest_word ++", 
    "", 
    "Logger.info(longest_word, 'AutoIndentWordlist: '+'longest_word');", 
    "", 
    "var lines_indented = lines_parsed.map(function(line)", 
    "{", 
    "", 
    "\tvar length\t=  line[0].length;\t\t", 
    "\tLogger.info( length , line[0]\t); ", 
    "", 
    "\tvar diff\t= longest_word - length;", 
    "\tLogger.info(diff, \t'diff');", 
    "\t\t\t", 
    "\t//var tabs_count\t= Math.ceil( diff/4 );\t\t\t\t", 
    "\t//Logger.info(tabs_count, 'tabs_count'); ", 
    "\t//line[0] += Array(tabs_count).join('    ')+'\\t';", 
    "\tline[0] += Array(diff).join(' ')+'\\t\\t';", 
    "\t//line[0] += '\\t' + Array(diff).join(' ') + '\\t';\t", 
    "", 
    "\treturn line.join('')\t;\t", 
    "}); ", 
    "", 
    "scimoz.replaceSel( lines_indented.join('\\n') );"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}
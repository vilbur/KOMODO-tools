{
  "keyboard_shortcut": "Alt+Q", 
  "name": "COMMENT_block", 
  "language": "JavaScript", 
  "trigger": "trigger_postopen", 
  "value": [
    "komodo.assertMacroVersion(3);", 
    "ko.views.manager.currentView.scimoz.beginUndoAction()", 
    "", 
    "try {", 
    "\t//alert('test');", 
    "    scimoz = ko.views.manager.currentView.scimoz;", 
    "    var selectedText = scimoz.selText;", 
    "    if (komodo.view) { komodo.view.setFocus(); }", 
    "", 
    "    ///// IF NOTHING SELECTED", 
    "    if (selectedText == '' ) {", 
    "            /*\talert('NOTHING SELECTED');\t*/", 
    "\t\t\t/*\t ____SELECT WHOLE LINE ____\t*/", 
    "            ko.commands.doCommand('cmd_homeAbsolute')", 
    "            ko.commands.doCommand('cmd_selectEnd')", 
    "\t\t\tvar selectedText =scimoz.selText;", 
    "    }", 
    "    var string_comment_slashes = '((?!(^\\\\s+))//+)(.*)$';", 
    "\tvar re_comment_slashes = new RegExp(string_comment_slashes,'gi');                   //comment: // converts TO /* foo */", 
    "", 
    "    //var string_comment_header= '(?!\\\\s*$)(\\\\s*)/\\\\*\\\\s+(?!=)([\\\\w\\\\s-]+)\\\\*/';", 
    "    var string_comment_header= '(?!\\\\s*$)(\\\\s*)/\\\\*\\\\s+(?!=)([\\\\w\\\\s]+)\\\\s+\\\\*/';", 
    "\tvar re_comment_header = new RegExp(string_comment_header,'gi');                     //comment: /* foo */ converts TO /* =========== foo =========== */", 
    "", 
    "    var string_comment_blade = '(?!\\\\s*$)(\\\\s*){{[-\\\\s]+(.*)?(?:\\\\s-).*$';", 
    "    var re_comment_blade = new RegExp(string_comment_blade,'gi');                       //comment: {{-- foo --}} converts TO \t{{-------------------------", 
    "                                                                                        //                                                foo", 
    "                                                                                        //                                        -------------------------}}", 
    "    var string_comment_block = '^(?!\\\\s*$)(\\\\s*)/\\\\*\\\\s+(?:=+)([\\\\w\\\\s-]+)=+\\\\s+\\\\*/.*$';", 
    "    var re_comment_block = new RegExp(string_comment_block,'gi');                        //comment: /*  foo   */ converts TO \t/* =========================", 
    "                                                                                        //                                                foo", 
    "    var string_comment_maxscript = '^(?!\\\\s*$)(\\\\s*)--(.*)$';", 
    "                                                                                      //                                        ========================= */", 
    "", 
    "    /*\talert('re_comment_slashes: '+re_comment_slashes);\t*/", 
    "    //var Thecomment=selectedText.match(re_comment_slashes);", 
    "    /*\talert('Thecomment: '+Thecomment);\t*/", 
    "    if (selectedText.match(re_comment_slashes)!=null ) {", 
    "        /*\talert('COMMENT FOUNDED');\t*/", 
    "        //alert('re_comment_slashes');", 
    "        //ko.find.replaceInMacro(window, 1, '((?!(^\\\\s+))//+)(.*)$', '/*\\\\3*/', 2, 0, false, false);", 
    "        ko.find.replaceAllInMacro(window, 1, string_comment_slashes, '/*\\\\t\\\\3\\\\t*/', false, 2, 0, false, false);", 
    "", 
    "    } else if (selectedText.match(re_comment_blade)!=null ){", 
    "        //alert('re_comment_blade');", 
    "        ko.find.replaceAllInMacro(window, 1, string_comment_blade, '\\\\1{{--============================================\\\\n\\\\1\\\\t\\\\t\\\\t\\\\t\\\\2\\\\n\\\\1============================================--}}', false, 2, 0, false, false);", 
    "", 
    "    }else if (selectedText.match(string_comment_header)!=null ){", 
    "       //alert('string_comment_header');", 
    "        ko.find.replaceAllInMacro(window, 1, string_comment_header, '\\\\1/* =========== \\\\2 =========== */', false, 2, 0, false, false);", 
    "", 
    "    }else if (selectedText.match(re_comment_block)!=null ){", 
    "       //alert('string_comment_block');", 
    "        ko.find.replaceAllInMacro(window, 1, string_comment_block, '\\\\1/* =============================================== */\\\\n\\\\1/*\\\\t\\\\t\\\\t\\\\t\\\\t\\\\2\\\\t\\\\t\\\\t\\\\t\\\\t*/\\\\n\\\\1/* =============================================== */', false, 2, 0, false, false);", 
    "", 
    "    }else if (selectedText.match(string_comment_maxscript)!=null ){", 
    "       //alert('string_comment_block');", 
    "        ko.find.replaceAllInMacro(window, 1, string_comment_maxscript, '\\\\1/* \\\\2 */', false, 2, 0, false, false);", 
    "", 
    "    }else {", 
    "            if (komodo.view) { komodo.view.setFocus(); }", 
    "            _part = komodo.findPart('macro', 'COMMENT_ON')", 
    "            if (!_part) {alert(\"Couldn't find a macro called 'COMMENT_ON' when executing macro.\"); return", 
    "            }", 
    "            ko.projects.invokePart(_part);", 
    "    }", 
    "", 
    "       //ko.find.replaceAllInMacro(window, 1, '(?!\\\\s*$)(\\\\s*)/\\\\*\\\\s+([\\\\S ]+)\\\\s+\\\\*/', '\\\\1/* =============================================== */\\\\n\\\\1\\\\t\\\\t\\\\2\\\\n\\\\1/* =============================================== */', false, 2, 0, false, false);", 
    "", 
    "            ko.commands.doCommand('cmd_cancel')", 
    "            ko.commands.doCommand('cmd_right')", 
    "            ko.commands.doCommand('cmd_left')", 
    "            ko.commands.doCommand('cmd_left')", 
    "            ko.commands.doCommand('cmd_left')", 
    "", 
    "} finally {", 
    "    ko.views.manager.currentView.scimoz.endUndoAction()", 
    "}"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "trigger_enabled": false, 
  "async": false, 
  "type": "macro"
}
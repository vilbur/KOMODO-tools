{
  "keyboard_shortcut": "", 
  "name": "open .kmd files", 
  "language": "JavaScript", 
  "trigger": "trigger_postopen", 
  "value": [
    "// Macro recorded on: Mon Apr 18 2016 14:56:39 GMT+0200 (Central Europe Standard Time)", 
    "komodo.assertMacroVersion(3);", 
    "", 
    "var curent_filename  = ko.views.manager.currentView.koDoc.file.path.split(/(\\\\|\\/)/g).pop();", 
    "var curent_ext = curent_filename.split(/(\\.)/g).pop();", 
    "", 
    "", 
    "//var lang = ko.views.manager.currentView.languageObj.name;", 
    "if (curent_ext.match(/kmd*/gi) != null ) {", 
    "", 
    "", 
    "\tvar ahk_lib_dir = ko.extensions.getAhkPath('\\\\scripts\\\\komodo\\\\Lib');", 
    "", 
    "\tko.run.output.endSession();", 
    "\tko.run.runEncodedCommand( window, ko.extensions.getAhkPath('\\\\scripts\\\\komodo\\\\Lib\\\\press-ok-confirm-box.ahk') )", 
    "\tvar answer = confirm (\"LOAD FILES ?\");", 
    "\tvar file_path = ko.views.manager.currentView.koDoc.file.path;", 
    "\t//var cmd = \"c:\\\\GoogleDrive\\\\Programs\\\\common\\\\AutoHotkey\\\\scripts\\\\komodo\\\\Komodo-run-file-in-TC.ahk \" + '\"' +file_path+ '\"' ;", 
    "\tvar cmd = ahk_lib_dir + \"\\\\create-komodo-filelist.ahk \" + '\"' +file_path+ '\"' ;", 
    "", 
    "\tif (answer){", 
    "\t\tko.commands.doCommand('cmd_bufferClose')", 
    "\t\tko.commands.doCommand('cmd_focusEditor')", 
    "", 
    "\t\tko.run.output.endSession();", 
    "\t\tko.run.runEncodedCommand( window, cmd )", 
    "\t\tvar filePath = ko.extensions.getAhkPath('\\\\scripts\\\\komodo\\\\Lib\\\\create-komodo-filelist.txt');", 
    "\t\tvar reader = Components.classes[\"@activestate.com/koFileEx;1\"]", 
    "\t\t\t\t\t\t  .createInstance(Components.interfaces.koIFileEx);", 
    "\t\treader.path = filePath; // backslashes if you insist", 
    "\t\treader.open(\"r\");", 
    "\t\tvar file_list = reader.readfile().split('\\n');", 
    "\t\treader.close();", 
    "", 
    "\t\t//alert( 'file_list=\\n'+JSON.stringify( file_list, null, 2) )", 
    "\t\tvar opened_files = getOpenFiles();", 
    "\t\tcloseOpenedFilesInFilelist(file_list,opened_files)", 
    "", 
    "\t\tsetTimeout( function(){", 
    "\t\t\tOpenFiles(file_list);", 
    "\t\t}, 1000);", 
    "", 
    "", 
    "", 
    "\t}", 
    "", 
    "", 
    "", 
    "}", 
    "", 
    "/**", 
    "**/", 
    "function OpenFiles(file_list) {", 
    "\tfor (i = 0; i < file_list.length; i++) {", 
    "\t\tko.open.URI( file_list[i] )", 
    "\t}", 
    "", 
    "", 
    "}", 
    "", 
    "", 
    "", 
    "", 
    "/**", 
    "**/", 
    "function closeOpenedFilesInFilelist(file_list,opened_files ) {", 
    "", 
    "\tfor (i = 0; i < file_list.length; i++) {", 
    "\t\tvar file = file_list[i];", 
    "", 
    "\t\tif( opened_files.indexOf(file)!= -1 ){", 
    "\t\t\tcloseFile( file, ( i+1 * 100) )", 
    "\t\t}", 
    "\t}", 
    "", 
    "}", 
    "", 
    "/*\tCLOSE FILE FUNCTION\t*/", 
    "function closeFile( file, time ) {", 
    "\tsetTimeout( function(){", 
    "\t\tko.open.URI( file );", 
    "\t\tsetTimeout( function(){", 
    "\t\t\tko.commands.doCommand('cmd_bufferClose');", 
    "", 
    "\t\t}, 50);", 
    "\t}, time );", 
    "}", 
    "", 
    "", 
    "/**", 
    "*", 
    "**/", 
    "function getOpenFiles() {", 
    "", 
    "\tvar view = ko.views.manager.currentView;", 
    "", 
    "\tvar tabbox = view.parentNode;", 
    "\twhile ( tabbox && tabbox.nodeName != \"tabbox\" && tabbox.nodeName != \"xul:tabbox\"){ tabbox= tabbox.parentNode;}", 
    "\tvar childNodes = tabbox._tabs.childNodes;", 
    "\tvar opened_files = [];", 
    "", 
    "\t/*\tLOOP OPEN FILES\t*/", 
    "\tfor ( var i = 0;  i < childNodes.length; i++ )", 
    "\t{", 
    "\t\t //tabbox._tabs.select[i]", 
    "\t\topened_files.push(childNodes[ i ].tooltipText )", 
    "\t}", 
    "", 
    "\treturn opened_files;", 
    "}"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "trigger_enabled": 0, 
  "async": 1, 
  "type": "macro"
}
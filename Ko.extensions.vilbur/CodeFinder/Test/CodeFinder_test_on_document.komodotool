{
  "keyboard_shortcut": "", 
  "name": "CodeFinder_test_on_document", 
  "language": "JavaScript", 
  "trigger_enabled": 0, 
  "rank": 100, 
  "trigger": "trigger_postopen", 
  "value": [
    "/**", 
    " * FIRST Summary  ipsum luctus habitasse ac aenean.", 
    " *", 
    " * Description  Lorem ipsum luctus habitasse ac aenean.", 
    " *", 
    " *", 
    " */", 
    "ko.extensions.TestPhpDoClass = (function() {", 
    "", 
    "\t/** SECOND Summary  ipsum luctus habitasse ac aenean donec ultrices maecenas arcu.", 
    "\t*", 
    "\t* @param\tstring\tparam1\tparameter to function", 
    "\t* @param\tboolean\tparam2\ttrue\\false parameter to function", 
    "\t* @return string multiplied param1", 
    "\t*", 
    "\t* test1", 
    "\t* test2", 
    "\t*", 
    "\t* @example ko.extensions.TestPhpDoc('fooString', true)", 
    "\t*", 
    "\t*/", 
    "", 
    "\tfunction TestPhpDocConstrustor(){", 
    "", 
    "", 
    "", 
    "\t   function firstFunction(param1='fooString', param2=true){", 
    "\t\t\t //jhghj", 
    "\t\t   var T_2_string\t= require('ko/console').warn(Array(5).join(param1+'-'));", 
    "", 
    "\t\t   return 'firstFunction'", 
    "\t   }", 
    "", 
    "", 
    "\t\t   function PreviousFunction(param1X='fooString', param2=true){", 
    "\t\t\t   var T_2_string\t= require('ko/console').warn(Array(5).join(param1+'-'));", 
    "", 
    "\t\t\t   return 'PreviousFunction'", 
    "\t\t   }", 
    "", 
    "\t\t   /** privateFunction comment", 
    "\t\t\t*/", 
    "\t\t   var private1WithPrams = function(param1, param2)", 
    "\t\t   {", 
    "", 
    "\t\t   };", 
    "", 
    "\t\t   var private2WithX = function( param1 )", 
    "\t\t   {", 
    "", 
    "\t\t   };", 
    "", 
    "", 
    "\t\t   var private3NoPrams = function()", 
    "\t\t   {", 
    "", 
    "\t\t   };", 
    "", 
    "\t\t   /** publicFunctionOne", 
    "\t\t\t*/", 
    "\t\t   this.publicOneParam = function(param1)", 
    "\t\t   {", 
    "", 
    "\t\t   };", 
    "", 
    "", 
    "\t\t   /** publicFunctionTwo", 
    "\t\t\t*/", 
    "\t\t   this.publicNoPrams = function( param )", 
    "\t\t   {", 
    "", 
    "\t\t   };", 
    "", 
    "\t\t   /** Summary ORIGINAL", 
    "\t\t   *", 
    "\t\t   * Description Original", 
    "\t\t   * Second Line of description", 
    "\t\t   *", 
    "\t\t   *", 
    "\t\t   * @param\tstring\tparam1\t\"fooString\"", 
    "\t\t   *", 
    "\t\t   * @return\tstring", 
    "\t\t   */", 
    "", 
    "\t\t   TestPhpDoc.prototype.fnPrototyped = function(param1=\"fooString\", param2=true,array=[1,2,3]){", 
    "\t\t\t   require('ko/console').warn(Array(5).join('string-'));", 
    "", 
    "\t\t\t   //Xreturn T_5_true;", 
    "\t\t\t   return 'NEXT';", 
    "\t\t   };", 
    "", 
    "\t};", 
    "", 
    "\treturn TestPhpDoc;", 
    "})();", 
    "", 
    "", 
    "//var _TestPhpDoc\t= new ko.extensions.TestPhpDoc();", 
    "//_TestPhpDoc.testFn();"
  ], 
  "version": "1.0.12", 
  "async": 0, 
  "type": "macro", 
  "icon": "chrome://famfamfamsilk/skin/icons/disk_error.png"
}
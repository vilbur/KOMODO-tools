{
  "keyboard_shortcut": "", 
  "name": "CodeFinder_unused_methods", 
  "language": "JavaScript", 
  "trigger_enabled": 0, 
  "rank": 100, 
  "trigger": "trigger_startup", 
  "value": [
    "", 
    "", 
    "\t\t/** set single match object to var match_all.", 
    "\t\t *", 
    "\t\t * @param\tarray\tmatch result object of RegEx match: https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/String/match#Return_value", 
    "\t\t * @param\tstring\trx_key\tis dot notation key of regex from var regexe E.G: 'function.private'", 
    "\t\t*/", 
    "\t\tfunction _setMatch(match, rx_key)", 
    "\t\t{", 
    "", 
    "\t\t\tvar match_full\t= match[0];", 
    "\t\t\tvar match_group\t= match.pop();", 
    "\t\t\t//var index_start\t= currentPos + match.index + ( match_full.length - match_group.length ); // correct group start position", 
    "\t\t\tvar index_start\t= match.index + ( match_full.length - match_group.length ); // correct group start position", 
    "\t\t\tvar index_end\t= _getMatchEndPosition(match);", 
    "\t\t\t_this.matches_all[index_start] = {'start':index_start, 'end':index_end, 'rx_key':rx_key, 'match':match_group};", 
    "\t\t}", 
    "", 
    "\t\t/** FIND CLOSING BRACKET if opening bracket is find on the end of string", 
    "\t\t *", 
    "\t\t * @param\tstring\tfile_content\tpart of file file_content", 
    "\t\t * @param\tint\tstart_pos\tstart position of param file_content", 
    "\t\t *", 
    "\t\t * @return\tinteger\tend position of closing bracket OR end postion of given file_content", 
    "\t\t */", 
    "\t\tfunction _getMatchEndPosition(match_obj)", 
    "\t\t{", 
    "", 
    "\t\t\tvar match_content\t= match_obj[0];", 
    "", 
    "\t\t\tif ( match_content.match(/[{\\(\\[]\\s*$/gi) !== null ) {", 
    "", 
    "\t\t\t\t/* GO TO OPEN BRACKET ON THE END OF MATCH */", 
    "\t\t\t\tscimoz.currentPos = match_obj.index + match_content.length;", 
    "\t\t\t\t//scimoz.currentPos = match_obj.index + match_content.length + 1;", 
    "\t\t\t\tko.commands.doCommand('cmd_jumpToMatchingBrace');", 
    "", 
    "\t\t\t\treturn _getEndingCharacter(match_content, scimoz.currentPos + 1);\t// Add 1 to position, because of position AFTER bracket\tis needed", 
    "\t\t\t\t//return scimoz.currentPos + 1;", 
    "\t\t\t}", 
    "\t\t\treturn match_obj.index + match_content.length;", 
    "\t\t}", 
    "", 
    "\t\t/** FIND EOL character after bracket // try to find ';' OR ');'", 
    "\t\t *", 
    "\t\t * @return\tinteger\tposition of closing bracket and EOL character if presented", 
    "\t\t*/", 
    "\t\tfunction _getEndingCharacter(match_content, end_pos)", 
    "\t\t{", 
    "", 
    "\t\t\tif (lang.match(/JavaScript|PHP/gi)) {", 
    "\t\t\t\t/* exception if javascript function declaration wrapped in '()' E.G: 'var fnName = (function() {' */", 
    "\t\t\t\tvar rx_ending_character\t= match_content.match(/\\(\\s*function/gi) ? /^[\\r\\n\\s]*\\)[\\r\\n\\s]*;*/ : /^[\\r\\n\\s]*;/;", 
    "\t\t\t\tvar match_ending_char\t= scimoz.getTextRange( end_pos, scimoz.textLength).match(rx_ending_character);", 
    "", 
    "\t\t\t\tif (match_ending_char)", 
    "\t\t\t\t\treturn end_pos + match_ending_char.index + match_ending_char[0].replace(/\\s+$/gi, '').length; // remove WhiteSpace on end of selection", 
    "\t\t\t}", 
    "\t\t\treturn end_pos;", 
    "\t\t}", 
    "", 
    "\t\t/** _restoreInitPosition", 
    "\t\t */", 
    "\t\tfunction _restoreInitPosition()", 
    "\t\t{", 
    "\t\t\tscimoz.currentPos\t= current_pos;", 
    "\t\t\tscimoz.anchor\t= current_pos;", 
    "\t\t\tscimoz.scrollCaret();", 
    "\t\t}", 
    "", 
    "\t}"
  ], 
  "version": "1.0.12", 
  "async": 1, 
  "type": "macro", 
  "icon": "chrome://fugue/skin/icons/tick.png"
}
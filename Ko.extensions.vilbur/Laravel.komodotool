{
  "keyboard_shortcut": "", 
  "name": "Laravel", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "", 
    "if( typeof ko.extensions.vilbur === 'undefined' )", 
    "\tko.extensions.vilbur = {};", 
    "", 
    "ko.extensions.vilbur.Laravel = {};", 
    "", 
    "", 
    "", 
    "/* CHILD OBJECT", 
    " */", 
    "(function() {", 
    "", 
    "\tfunction Laravel(){", 
    "\t\tvar Logger\t= ko.extensions.Logger_v3 ? new ko.extensions.Logger_v3(this).clear(true).off(false) : require('ko/console');", 
    "\t\tvar _self\t= this;", 
    "\t\tvar koFile\t= require(\"ko/file\");", 
    "\t\tvar path;", 
    "\t\tvar laravel_path;", 
    "", 
    "", 
    "\t\tthis.path = function(_path){", 
    "\t\t\t//if( _path!=='' ){", 
    "\t\t\t\tpath\t= _path;", 
    "\t\t\t\tsetLaravelPath();", 
    "\t\t\t\treturn _self;", 
    "\t\t\t//}", 
    "\t\t\t//return path;", 
    "\t\t};", 
    "\t\tthis.laravelPath = function()", 
    "\t\t{", 
    "\t\t\treturn laravel_path;", 
    "\t\t};", 
    "\t\tvar setLaravelPath = function()", 
    "\t\t{", 
    "\t\t\tvar path_dir_split\t= koFile.dirname( path ).split('\\\\');", 
    "\t\t\t/** Loop path end search for .env file", 
    "\t\t\t*/", 
    "\t\t\tfunction findEnvFile()", 
    "\t\t\t{", 
    "\t\t\t\twhile ( path_dir_split.length > 1 && !envFileExists() )", 
    "\t\t\t\t\tpath_dir_split.pop();", 
    "\t\t\t\treturn path_dir_split.length > 1 ? path_dir_split.join('\\\\') : false;", 
    "\t\t\t}", 
    "\t\t\t/** envFileExists", 
    "\t\t\t*/", 
    "\t\t\tfunction envFileExists()", 
    "\t\t\t{", 
    "\t\t\t\treturn koFile.exists(path_dir_split.join('\\\\')+'\\\\.env' );", 
    "\t\t\t}", 
    "\t\t\t//setPathDirSplit();", 
    "\t\t\tlaravel_path = findEnvFile();", 
    "\t\t};", 
    "\t\tthis.namespace = function(){", 
    "\t\t\tvar namespace\t= path;", 
    "", 
    "\t\t\t/** removeLaravelPath", 
    "\t\t\t*/", 
    "\t\t\tfunction removeLaravelPath()", 
    "\t\t\t{", 
    "\t\t\t\tnamespace =  namespace.replace( laravel_path+'\\\\', '');", 
    "\t\t\t}", 
    "\t\t\t/** getNamespaceFromPackagesPath", 
    "\t\t\t*/", 
    "\t\t\tfunction removePackageSrc()", 
    "\t\t\t{", 
    "\t\t\t\tnamespace = namespace.replace(/.*(packages|vendor)\\\\([^\\\\]+\\\\[^\\\\]+)\\\\src\\\\(.*)/gi, '$2\\\\$3');", 
    "\t\t\t}", 
    "\t\t\t/** removeExtension", 
    "\t\t\t*/", 
    "\t\t\tfunction removeExtension()", 
    "\t\t\t{", 
    "\t\t\t\tnamespace = namespace.split(/\\.[^\\.\\\\]+$/gi).shift();", 
    "\t\t\t}", 
    "\t\t\t/** capitalizeNamespace", 
    "\t\t\t*/", 
    "\t\t\tfunction capitalizeNamespace()", 
    "\t\t\t{", 
    "\t\t\t\tnamespace = namespace.replace(/[_-]+/, ' ')", 
    "\t\t\t\t\t\t\t\t\t .replace(/(?:^|\\\\|\\s)[a-z]/g, function(letter){return letter.toUpperCase();})", 
    "\t\t\t\t\t\t\t\t\t .replace(/\\s+/, '');", 
    "\t\t\t}", 
    "\t\t\tremoveLaravelPath();", 
    "\t\t\tremoveExtension();", 
    "\t\t\tremovePackageSrc();", 
    "\t\t\tcapitalizeNamespace();", 
    "\t\t\t//Logger.info(namespace, 'namespace2');", 
    "\t\t\treturn namespace ? namespace : false;", 
    "\t\t};", 
    "", 
    "\t}", 
    "\treturn Laravel;", 
    "", 
    "})().apply( ko.extensions.vilbur.Laravel );", 
    "", 
    "", 
    "/** LaravelTest", 
    "*/", 
    "function LaravelTest(){", 
    "\tvar laravel_path\t= 'c:\\\\wamp64\\\\www\\\\laravel-fresh';", 
    "\tvar Logger\t= ko.extensions.Logger_v3 ? new ko.extensions.Logger_v3(this).clear(true).off(false) : require('ko/console');", 
    "", 
    "\tLogger.info( ko.extensions.vilbur.Laravel.path(laravel_path + '\\\\app').laravelPath()===laravel_path, laravel_path );", 
    "\tLogger.info( ko.extensions.vilbur.Laravel.path(laravel_path + '\\\\app\\\\Providers\\\\AppServiceProvider.php').namespace()\t=== 'App\\\\Providers\\\\AppServiceProvider', 'App\\\\Providers\\\\AppServiceProvider' );", 
    "\tLogger.info( ko.extensions.vilbur.Laravel.path(laravel_path + '\\\\vendor\\\\vilbur\\\\foo-package\\\\src\\\\models\\\\FooModel.php').namespace()\t=== 'Vilbur\\\\FooPackage\\\\Models\\\\FooModel', 'Vilbur\\\\FooPackage\\\\Models\\\\FooModel' );", 
    "\tLogger.info( ko.extensions.vilbur.Laravel.path(laravel_path + '\\\\packages\\\\vilbur\\\\bar-package\\\\src\\\\database\\\\factories').namespace()\t=== 'Vilbur\\\\BarPackage\\\\Database\\\\Factories', 'Vilbur\\\\BarPackage\\\\Database\\\\Factories' );", 
    "\tLogger.info( ko.extensions.vilbur.Laravel.path(laravel_path + 'Tests\\\\Unit').namespace()\t=== 'Tests\\\\Unit', 'Tests\\\\Unit' );", 
    "", 
    "}", 
    "", 
    "//LaravelTest();"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}
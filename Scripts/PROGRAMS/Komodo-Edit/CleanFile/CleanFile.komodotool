{
  "keyboard_shortcut": "", 
  "name": "CleanFile", 
  "language": "JavaScript", 
  "trigger_enabled": 1, 
  "value": [
    "/** CleanFile or selected content", 
    " */", 
    "ko.extensions.CleanFile = (function()", 
    "{", 
    "\tfunction CleanFile()", 
    "\t{", 
    "\t\tvar koEditor\t= require(\"ko/editor\");", 
    "\t\tvar lang\t= koEditor.getLanguage();", 
    "\t\tvar file_content\t= koEditor.getValue();", 
    "\t\tvar sel_text\t= koEditor.getSelection();", 
    "\t\tvar content\t= sel_text ? sel_text : file_content;", 
    "\t\t//.replace(/\\r/gm, '') // remove even empty line for file write;", 
    "\t\t", 
    "\t\t/** Remove empty lines", 
    "\t\t *", 
    "\t\t * @return self", 
    "\t\t */", 
    "\t\tthis.removeEmptyLines = function()", 
    "\t\t{", 
    "\t\t\tcontent = content.replace(/\\s*[\\r\\n]\\s*[\\r\\n]\\s*[\\r\\n]/gi, '\\n\\n'); ", 
    "\t\t\treturn this;", 
    "\t\t};", 
    "\t\t/** Remove empty line after keyword", 
    "\t\t *\tAfter some words should not be empty line E.G.: 'else'", 
    "\t\t * @return self", 
    "\t\t */", 
    "\t\tthis.removeEmptyLineAfterKeyword = function()", 
    "\t\t{", 
    "\t\t\tvar keywords\t= ['else'];", 
    "\t\t\t", 
    "\t\t\tfor(let i=0; i<keywords.length;i++)", 
    "\t\t\t\tcontent = content.replace( (new RegExp('('+keywords[i]+')\\\\s*[\\\\r\\\\n]', 'gi')), '$1\\n'); ", 
    "\t\t\t", 
    "\t\t\treturn this;", 
    "\t\t};", 
    "\t\t/** Remove empty line after bracket", 
    "\t\t *\tAfter some words should not be empty line E.G.: ')'", 
    "\t\t * @return self", 
    "\t\t */", 
    "\t\tthis.removeEmptyLineAfterBracket = function()", 
    "\t\t{", 
    "\t\t\tcontent = content", 
    "\t\t\t\t\t\t//.replace( /[\\r\\n]\\s*[\\r\\n](\\s*[\\(\\)])/gi, '\\n$1')\t// line before brackets", 
    "\t\t\t\t\t\t//.replace( /([\\(\\)])[\\r\\n]\\s*[\\r\\n]/gi, '$1\\n')\t// line after brackets", 
    "\t\t\t\t\t\t.replace( /[\\r\\n]\\s*[\\r\\n](\\s*[\\(\\)\\[\\]{}])/gi, '\\n$1')\t// line before brackets", 
    "\t\t\t\t\t\t.replace( /([\\(\\)\\[\\]{}])[\\r\\n]\\s*[\\r\\n]/gi, '$1\\n')\t// line after brackets", 
    "\t\t\t", 
    "\t\t\treturn this;", 
    "\t\t};", 
    "\t\t/** Replace content", 
    "\t\t *", 
    "\t\t * @return self", 
    "\t\t */", 
    "\t\tthis.replace = function()", 
    "\t\t{", 
    "\t\t\tko.views.manager.currentView.scimoz.beginUndoAction();", 
    "\t\t\ttry", 
    "\t\t\t{", 
    "\t\t\t\tkoEditor[sel_text ? 'replaceSelection' : 'setValue'](content);", 
    "\t\t\t} finally {", 
    "\t\t\t\tko.views.manager.currentView.scimoz.endUndoAction();", 
    "\t\t\t}", 
    "\t\t\t", 
    "\t\t\treturn this;", 
    "\t\t};", 
    "\t\t", 
    "\t}", 
    "\t", 
    "\treturn CleanFile;", 
    "})();"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": 1, 
  "type": "macro", 
  "trigger": "trigger_startup"
}
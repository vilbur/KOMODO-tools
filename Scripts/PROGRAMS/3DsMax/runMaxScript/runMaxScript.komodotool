{
  "keyboard_shortcut": "Ctrl+Shift+A", 
  "name": "runMaxScript", 
  "language": "JavaScript", 
  "trigger": "trigger_postsave", 
  "value": [
    "komodo.assertMacroVersion(3);", 
    "ko.views.manager.currentView.scimoz.beginUndoAction();", 
    "", 
    "/** Path to script which can execute script", 
    " */", 
    "var max_ide_path\t= 'c:\\\\Users\\\\vilbur\\\\AppData\\\\Local\\\\Autodesk\\\\3dsMax\\\\2016 - 64bit\\\\ENU\\\\scripts\\\\ExternalMaxScriptIDE\\\\ExternalMaxScriptIDE.exe';", 
    "var go_to_line_if_exception_ahk\t= komodo.macro.path + '\\\\..\\\\go-to-line-if-exception.ahk';", 
    "var drag_and_drop_path\t= komodo.macro.path +'\\\\..\\\\drag-and-drop-to-max.ahk';", 
    "", 
    "var koFile\t= require(\"ko/file\");", 
    "var koShell\t= require(\"ko/shell\");", 
    "", 
    "try {", 
    "\tvar lang = ko.views.manager.currentView.languageObj.name;", 
    "", 
    "\tif ( lang=='Maxscript')", 
    "\t{", 
    "\t\tscimoz = ko.views.manager.currentView.scimoz;", 
    "\t\tvar selectedText = scimoz.selText;", 
    "\t\t", 
    "\t\t/*\tRUN SCRIPT FILE IF NOTHING IS SELECTED\t*/", 
    "\t\tif (selectedText === '' )", 
    "\t\t{", 
    "\t\t\tvar file_path = ko.views.manager.currentView.koDoc.file.path;", 
    "\t\t\tvar filename = file_path.split(/(\\\\|\\/)/g).pop();", 
    "\t\t\t", 
    "\t\t\tif ( ko.projects.manager.currentProject !== null )", 
    "\t\t\t{", 
    "\t\t\t\t/*\tFIND PROJECT NAME IN PATH TO FILE \t*/", 
    "\t\t\t\tvar project_path = ko.projects.manager.currentProject.liveDirectory;", 
    "\t\t\t\tvar project_file = ko.projects.manager.currentProject.getFile().path.split('\\\\').pop().split('.').shift();", 
    "\t\t\t\tvar regex_project = new RegExp( project_file, \"gi\");", 
    "\t\t\t\tvar match =  regex_project.exec( file_path );", 
    "\t\t\t\t", 
    "\t\t\t\tif ( match!==null ) {", 
    "\t\t\t\t\trunScriptProjectMacro( project_path, project_file );", 
    "\t", 
    "\t\t\t\t}else {", 
    "\t\t\t\t\t/*    RUN CURRENT SCRIPT FILE    */", 
    "\t\t\t\t\texecute_script_file( file_path );", 
    "\t\t\t\t} ", 
    "\t\t\t\t", 
    "\t\t\t}else {", 
    "\t\t\t\t/*    RUN CURRENT SCRIPT FILE    */", 
    "\t\t\t\texecute_script_file( file_path );", 
    "\t\t\t}\t", 
    "\t", 
    "\t\t}else {", 
    "\t\t\t/*\tEXECUTE SELECTED TEXT\t*/", 
    "\t\t\t//alert('EXECUTE SELECTED TEXT');", 
    "\t\t\trun_selected_text_as_script (selectedText);", 
    "\t\t}", 
    "\t}", 
    "} finally {", 
    "\tko.views.manager.currentView.scimoz.endUndoAction();", 
    "}", 
    "", 
    "/**", 
    "* ", 
    "**/", 
    "function runScriptProjectMacro( project, project_file )", 
    "{", 
    "\tvar macroPath = project +  '\\\\' + project_file + '.mcr';", 
    "\tcallMaxscriptIDE(macroPath);", 
    "}", 
    "", 
    "/**", 
    "* ", 
    "**/", 
    "function execute_script_file( file_path )", 
    "{", 
    "\tfile_path\t= file_path.replace(/\\\\/gi, '\\\\\\\\');", 
    "\t", 
    "\t/** Try get file in subdir '\\Test'", 
    "\t * E.G.: if file='Dir\\foo.ms' then try find file='Dir\\Test\\fooTest.ms' ", 
    "\t * @return\tstring Path to file\t", 
    "\t */", 
    "\tvar tryGetTestFilePath = function()", 
    "\t{", 
    "\t\tvar dir\t= koFile.dirname(file_path);", 
    "\t\tvar test_filename\t= koFile.basename(file_path).replace(/.(ms|mcr)$/gi, 'Test.$1'); ", 
    "\t\tvar test_file\t= dir + '\\\\Test\\\\'+test_filename;", 
    "\t\t//alert( koFile.exists(test_file) ); ", 
    "\t\t", 
    "\t\treturn koFile.exists(test_file) ? test_file : file_path;", 
    "\t}; ", 
    "\t", 
    "\tcallDragAndDropToMax( tryGetTestFilePath() );", 
    "\t", 
    "\tsetTimeout( function(){", 
    "\t\tcallGoToLineIfException();", 
    "\t}, 500);", 
    "}", 
    "", 
    "/**  ", 
    " *\t", 
    " */", 
    "function run_selected_text_as_script(script)", 
    "{", 
    "\tscript = script.replace(/--.*/gi,'').replace(/\\s+\\n/gi,';').replace(/\"/gi,'\\\\\"').replace(/;+/gi,'');", 
    "", 
    "\tcallMaxscriptIDE( script ); ", 
    "}", 
    "", 
    "/** Run Script in ", 
    "* ", 
    "**/", 
    "function callMaxscriptIDE (script_or_file_path)", 
    "{", 
    "\tif( ! koFile.exists(max_ide_path) )", 
    "\t\talert( 'FILE PATH DOES NOT EXISTS\\n\\n'+max_ide_path ); ", 
    "\t", 
    "\tvar command = '\"'+ max_ide_path + '\" \"' + script_or_file_path+'\"';", 
    "\t", 
    "\tkoShell.exec(command, {});", 
    "", 
    "\t//\t/*    BRING MAX FRONT    */", 
    "\t//ko.run.output.endSession();", 
    "\t//ko.run.runEncodedCommand( window, '\"c:\\\\GoogleDrive\\\\Programs_cg\\\\3DsMax\\\\2016-64bit\\\\batch_files\\\\bring_max_front.bat\"')", 
    "\t", 
    "\t//ko.run.output.endSession();", 
    "\t//ko.run.runEncodedCommand( window, 'nircmd changesysvolume 5')", 
    "\t//ko.run.output.endSession();", 
    "\t//ko.run.runEncodedCommand( window, 'nircmd speak text \"saved\"')", 
    "}", 
    "", 
    "/** Call file", 
    " */", 
    "function fileExistsException(filepath)", 
    "{", 
    "\tif( koFile.exists(filepath) )", 
    "\t\treturn false;", 
    "\t\t", 
    "\talert( 'FILE PATH DOES NOT EXISTS\\n\\n'+filepath ); ", 
    "\treturn true;\t", 
    "}", 
    "", 
    "/** Simulate drag and drop of file to 3Ds Max ", 
    " *\tDrag and drop throws more specific errors then \"ExternalMaxScriptIDE\"", 
    " */", 
    "function callDragAndDropToMax(ms_script_path)", 
    "{", 
    "\tif( fileExistsException(drag_and_drop_path) )", 
    "\t\treturn; ", 
    "\t", 
    "\tvar command = '\"'+ drag_and_drop_path + '\" \"' + ms_script_path+'\"';", 
    "\t", 
    "\tkoShell.exec(command, {});", 
    "}", 
    "/** Call ahk file which create 'file-info.json' then calls goToLineInKomodoIfException.komodotool", 
    " */", 
    "function callGoToLineIfException()", 
    "{\t", 
    "\tif( fileExistsException(go_to_line_if_exception_ahk) )", 
    "\t\treturn; ", 
    "\t", 
    "\tvar command = '\"'+ go_to_line_if_exception_ahk + '\"';", 
    "\t", 
    "\tkoShell.exec(command, {});", 
    "}"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "trigger_enabled": 0, 
  "async": 1, 
  "type": "macro"
}
{
  "keyboard_shortcut": "", 
  "name": "vueRoute", 
  "value": [
    "<%", 
    "", 
    "\t/** Convert string to all notations", 
    "\t* @param string of any notation", 
    "\t*", 
    "\t*\tlower:\ttest string", 
    "\t*\tupper:\tTEST STRING", 
    "\t*\ttitle:\tTest String", 
    "\t*\tcamel:\ttestString", 
    "\t*\tpascal:\tTestString", 
    "\t*\tkebab:\ttest-string", 
    "\t*\tsnake:\ttest_string", 
    "\t*", 
    "\t*", 
    "\t* @return object", 
    "\t*/", 
    "\tstringNotationConverter = (function(string) {", 
    "", 
    "\t\tvar notations\t= {};", 
    "\t\tvar sanitized\t= string.replace(/([A-Z])/g, ' $1' ).replace(/(\\s+|-|_)/g, ' ' ).toLowerCase().trim();", 
    "", 
    "\t\tnotations.lower\t= sanitized;", 
    "\t\tnotations.upper\t= sanitized.toUpperCase();", 
    "\t\tnotations.title\t= sanitized.replace(/\\w\\S*/g, function(txt){return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();});", 
    "\t\tnotations.kebab\t= sanitized.replace(/\\s+/g, '-' );", 
    "\t\tnotations.snake\t= sanitized.replace(/\\s+/g, '_' );", 
    "\t\tnotations.pascal\t= notations.title.replace(/\\s+/g, '' );", 
    "\t\tnotations.camel\t= notations.pascal.charAt(0).toLowerCase() + notations.pascal.slice(1);", 
    "", 
    "\t\treturn notations;", 
    "\t});", 
    "", 
    "\tvar answer\t= ko.interpolate.interpolateString('%(ask1:Component name:default)');", 
    "\tvar notations\t= stringNotationConverter(answer);", 
    "", 
    "\tview_pascal \t= '[[%tabstop1:'+notations.pascal+']]';", 
    "\tview_kebab\t= '[[%tabstop2:'+notations.kebab+']]';", 
    "", 
    "%>", 
    "[[%tabstop:const <%=view_pascal%>\t= () => import('./[[%tabstop:views]]/<%=view_kebab%>/<%=view_kebab%>');]]", 
    "{", 
    "\tpath:\t'[[%tabstop:]]/<%=view_kebab%>',", 
    "\tcomponent:\t<%=view_pascal%>", 
    "},[[%tabstop:]]!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "treat_as_ejs": "true", 
  "type": "snippet", 
  "indent_relative": "true", 
  "auto_abbreviation": "false"
}
{
  "keyboard_shortcut": "Ctrl+,", 
  "name": "wrap to <tag>", 
  "language": "JavaScript", 
  "trigger_enabled": false, 
  "value": [
    "/** Wrap selection or word under cursor to HTML tag", 
    " *", 
    " * if word under cursor is html tag without, then this tag is used, otherwise script will ask for tag", 
    " *", 
    " */", 
    "function getSnippetValue(){", 
    "\t/*--------   PRIVATE PROPERTIES   -------------------------------------------------------------------------------------*/", 
    "\tvar scimoz\t= ko.views.manager.currentView.scimoz;", 
    "\tvar text_in_editor\t= '';", 
    "\tvar tags_html\t= '';", 
    "\tvar tag\t= '';", 
    "\tvar is_selection_multiline;", 
    "", 
    "\t/** get Tidy config file from preferences", 
    "\t */", 
    "\tfunction getTidyFile(){", 
    "\t\treturn require(\"ko/prefs\").getString('tidy_configpath');", 
    "\t}", 
    "\t/** setHtmlTags", 
    "\t *  HTML tags get from https://www.w3schools.com/TAgs/ref_httpmethods.asp", 
    "\t *", 
    "\t */", 
    "\tfunction setHtmlTags(){", 
    "\t\ttags_html\t= 'a|abbr|acronym|address|applet|area|article|aside|audio|b|base|basefont|bdi|bdo|big|blockquote|body|br|button|canvas|caption|center|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|dir|div|dl|dt|em|embed|fieldset|figcaption|figure|font|footer|form|frame|frameset|h1 - h6|head|header|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|template|textarea|tfoot|th|thead|time|title|tr|track|tt|u|ul|var|video|wbr';", 
    "\t\ttags_xul\t= 'action|arrowscrollbox|assign|bbox|binding|bindings|box|broadcaster|broadcasterset|button|browser|checkbox|caption|clicktoscroll|colorpicker|column|columns|commandset|command|conditions|content|datepicker|deck|description|dialog|dialogheader|dropmarker|editor|grid|grippy|groupbox|hbox|iframe|image|key|keyset|label|listbox|listcell|listcol|listcols|listhead|listheader|listitem|member|menu|menubar|menuitem|menulist|menupopup|menuseparator|notification|notificationbox|observes|overlay|page|panel|param|popupset|preference|preferences|prefpane|prefwindow|progressmeter|query|queryset|radio|radiogroup|resizer|richlistbox|richlistitem|row|rows|rule|scale|script|scrollbar|scrollbox|scrollcorner|separator|spacer|spinbuttons|splitter|stack|statusbar|statusbarpanel|stringbundle|stringbundleset|tab|tabbrowser (Firefox-only starting with Firefox 3/Gecko 1.9)|tabbox|tabpanel|tabpanels|tabs|template|textnode|textbox|textbox (Firefox autocomplete)|textbox (Mozilla autocomplete)|timepicker|titlebar|toolbar|toolbarbutton|toolbargrippy|toolbaritem|toolbarpalette|toolbarseparator|toolbarset|toolbarspacer|toolbarspring|toolbox|tooltip|tree|treecell|treechildren|treecol|treecols|treeitem|treerow|treeseparator|triple|vbox|where|window|wizard|wizardpage'", 
    "\t\ttags_from_tidy\t= require(\"ko/file\").read(getTidyFile()).match(/new-blocklevel-tags:\\s+([^\\r\\n]+)/gi).pop().split(/:\\s+/gi).pop().split(',').join('|');", 
    "\t\ttags_all\t= tags_html +'|'+ tags_xul +'|'+ tags_from_tidy;", 
    "\t}", 
    "\t/** setTag", 
    "\t */", 
    "\tfunction setTag(){", 
    "\t\t//tag\t= text_in_editor.trim().match('^('+tags_html+')$', 'gi') ? text_in_editor : ko.interpolate.interpolateString('%(ask1:Tag:div)');", 
    "\t\ttag\t= text_in_editor.trim().match('^('+tags_all+')$', 'gi') ? text_in_editor : 'div';", 
    "\t\ttag\t= tag ? tag.trim() : 'div';", 
    "\t}", 
    "\t/** isSelectionMultiline", 
    "\t*/", 
    "\tfunction setIsSelectionMultiline(){", 
    "\t\tif(is_selection_multiline)", 
    "\t\t\treturn;", 
    "", 
    "\t\tis_selection_multiline\t= scimoz.lineFromPosition(scimoz.anchor) !== scimoz.lineFromPosition(scimoz.currentPos);", 
    "\t}", 
    "\t/** setTextInEditor", 
    "\t*/", 
    "\tfunction setTextInEditor(){", 
    "\t\tvar sel_text\t= scimoz.selText;", 
    "\t\ttext_in_editor\t= sel_text ? sel_text : getWordUnderCursor();", 
    "\t}", 
    "\t/** getWordUnderCursor", 
    "\t*/", 
    "\tfunction getWordUnderCursor(){", 
    "\t\tvar word_cursor\t= ko.interpolate.getWordUnderCursor(scimoz);", 
    "", 
    "\t\tif(word_cursor)", 
    "\t\t\tscimoz.setSel(scimoz.wordStartPosition(scimoz.currentPos, true), scimoz.wordEndPosition(scimoz.currentPos, true));", 
    "\t\treturn word_cursor;", 
    "\t}", 
    "\t/** getWrapText", 
    "\t*/", 
    "\tfunction getWrapText(){", 
    "", 
    "\t\tvar new_line\t= text_in_editor && is_selection_multiline ? '\\n' : '';", 
    "\t\tvar indentation\t= text_in_editor && is_selection_multiline ? '\\t' : '';", 
    "", 
    "\t\tvar wrap_text\t=  text_in_editor === tag ? '' : text_in_editor.replace(/\\n\\t+/gi, '\\n'+indentation);", 
    "\t\tvar tabstop_text\t= '[[%tabstop2:'+wrap_text+']]';", 
    "", 
    "\t\treturn new_line+indentation+tabstop_text+new_line;", 
    "\t}", 
    "", 
    "\tsetTextInEditor();", 
    "\tsetHtmlTags();", 
    "\tsetTag();", 
    "\tsetIsSelectionMultiline();", 
    "\treturn '<'+tag+'>'+getWrapText()+'</'+tag+'>';", 
    "", 
    "", 
    "}", 
    "", 
    "/* insert snippet", 
    " *", 
    " */", 
    "var wrap_snippet = {", 
    "\thasAttribute: function(name) {", 
    "\t\treturn name in this;", 
    "\t},", 
    "\tgetStringAttribute: function(name) {", 
    "\t\treturn this[name];", 
    "\t},", 
    "\tname:\t\"wrap snippet\",", 
    "\tindent_relative: \"true\",", 
    "\tvalue:\tgetSnippetValue()", 
    "};", 
    "ko.projects.snippetInsert(wrap_snippet);"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": false, 
  "type": "macro", 
  "trigger": "trigger_postopen"
}
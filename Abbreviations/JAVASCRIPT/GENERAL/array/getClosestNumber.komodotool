{
  "keyboard_shortcut": "", 
  "name": "getClosestNumber", 
  "value": [
    "<%", 
    "\t/**", 
    "\t * FIND CLOSEST NUMBER IN ARRAY", 
    "\t *", 
    "\t * @param\tarray\tnumbers\tSORTED array for searching", 
    "\t * @param\tnumber\tnum\tvalue for search", 
    "\t * @param\tmode\tstring\t'void|down|up'\tfind ABSOLUTE closest, 'down' find closest but lower number, 'up' find closest but higher number", 
    "\t *", 
    "\t * EXAMPLE:", 
    "\t\t\tvar numbers\t= [2, 5, 8, 13];", 
    "\t\t\tvar closest_absolute\t= getClosestNumber(numbers, 6);\t// return 5", 
    "\t\t\tvar closest_lower\t= getClosestNumber(numbers, 6, 'down');\t// return 5", 
    "\t\t\tvar closest_upper\t= getClosestNumber(numbers, 6, 'up');\t// return 8", 
    "\t */", 
    "%>", 
    "function getClosestNumber(numbers, num, mode=''){", 
    "", 
    "\tvar i=0, min_diff=1000, result;", 
    "", 
    "\tfor(var i=0; i<numbers.length;i++) {", 
    "", 
    "\t\tvar m;", 
    "\t\t/* GET ABSOLUTE CLOSEST NUMBER*/", 
    "\t\tif(mode ===''){", 
    "\t\t\tm = Math.abs(num-numbers[i]);", 
    "\t\t\tif(m<min_diff){", 
    "\t\t\t\tmin_diff=m;", 
    "\t\t\t\tresult=numbers[i];", 
    "\t\t\t}", 
    "", 
    "\t\t} else {", 
    "\t\t\tm = num-numbers[i];", 
    "\t\t\t/* GET CLOSEST NUMBER LOWER */", 
    "\t\t\tif( mode ==='down' && m>0 )", 
    "\t\t\t\tresult=numbers[i];", 
    "", 
    "\t\t\t/* GET CLOSEST NUMBER HIGHER */", 
    "\t\t\telse if( mode ==='up' && m<0 )", 
    "\t\t\t\treturn numbers[i];", 
    "\t\t}", 
    "\t}", 
    "\treturn result;", 
    "}!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "indent_relative": "true", 
  "type": "snippet", 
  "treat_as_ejs": "true", 
  "auto_abbreviation": "false"
}
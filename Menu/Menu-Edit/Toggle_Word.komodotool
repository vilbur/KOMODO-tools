{
  "keyboard_shortcut": "", 
  "name": "Toggle Word", 
  "language": "JavaScript", 
  "trigger": "trigger_startup", 
  "value": [
    "komodo.assertMacroVersion(3);", 
    "ko.views.manager.currentView.scimoz.beginUndoAction();", 
    "", 
    "\t/* example", 
    "\t    metches = {", 
    "\t\tglobal: {", 
    "\t\t    'searchFoo': 'replaceBar',                // match \"searchFoo\", search \"searchFoo\" relace with \"replaceBar\"", 
    "\t\t    'matchFaz': ['searchFoo', 'replaceBar'],  // match \"matchFaz\", search \"searchFoo\" replace with \"replaceBar\"", 
    "\t\t}", 
    "\t    }", 
    "\t*/", 
    "", 
    "/* DEBUG VARIABLES */", 
    "//var TEST = true;", 
    "//var TEST = false;", 
    "//var REPLACE = true;", 
    "//var REPLACE = false;", 
    "", 
    "", 
    "var testRegExString = '^([^\\\\\\\\s]*\\\\[^\\\\\\\\s]*)+$';", 
    "//var testRegExString = '^([^\\\\\\\\\\\\s]*\\\\\\\\[^\\\\\\\\\\\\s]*)+$'; // match string with backslash", 
    "", 
    "", 
    "//var testRegExString = '^((\\\\w+(?!=\\\\\\\\))*(\\\\\\\\(?!\\\\\\\\))(\\\\w+(?!=\\\\\\\\))*)+$';", 
    "//var testRegExString = '^((\\\\w+(?!=\\\\\\\\))*(\\\\\\\\(?!\\\\\\\\))(\\\\w+(?!=\\\\\\\\))*)+$';", 
    "//^(\\\\|(\\\\[^\\\\]+\\\\*)|(([^\\\\]+\\\\)+))$", 
    "//^(\\\\|(\\\\[^\\\\]+\\\\*)|(([^\\\\]+\\\\)+))$", 
    "//([^\\\\]*?\\\\[^\\\\])\\w*", 
    "var metches = {", 
    "", 
    "\t/* =========== GLOBALS =========== */", 
    "    global:{", 
    "", 
    "\t\t/* KEYWORDS */", 
    "\t\t'multiple':\t 'single',", 
    "\t\t'single':\t 'multiple',", 
    "", 
    "\t\t'get':\t 'set',", 
    "\t\t'set':\t 'get',", 
    "", 
    "\t\t'source':\t 'target',", 
    "\t\t'target':\t 'source',", 
    "", 
    "\t\t'\"':\t '\\'',\t//switch quotes \" => '", 
    "\t\t'get(\\\\S+)':\t'set\\\\1',                             // replace \"getFoo\" with \"setFoo\"", 
    "\t\t'set(\\\\S+)':\t'get\\\\1',                             // replace \"setFoo\" with \"getFoo\"", 
    "", 
    "\t\t'\\'':\t '\"',\t//switch quotes ' => \"", 
    "\t\t'true':\t 'false',", 
    "\t\t'false':\t 'true',", 
    "", 
    "\t\t//'\\\\s*(([\\\\w]+))(?=.*\\\\\\\\).*':\t ['\\\\\\\\', '/'],   // replace \"foo\\string\" with \"foo/string\"", 
    "\t\t//'\\\\s*(([\\\\w]+))(?=.*/).*':\t ['/', '\\\\\\\\'], \t // replace \"foo/string\" with \"foo\\string\"", 
    "\t\t'class':\t 'id',", 
    "\t\t'id':\t 'class',", 
    "", 
    "\t\t'frontend':\t 'backend',", 
    "\t\t'backend':\t 'frontend',", 
    "", 
    "\t\t'Minimize':\t 'Maximize',", 
    "\t\t'Maximize':\t 'Minimize',", 
    "", 
    "\t\t'(\\\\S*\\\\.\\\\S*)+' :\t ['\\\\.','\\\\\\\\'], \t\t\t\t\t\t// replace \"foo.string\" with \"foo/string\"", 
    "\t\t'(\\\\S*/\\\\S*)+' :\t ['/','\\.'], \t\t\t\t\t\t    // replace \"foo/string\" with \"foo\\.string\"", 
    "\t\t'([^\\\\\\\\\\\\\\\\\\\\s]*\\\\\\\\\\\\\\\\[^\\\\\\\\\\\\\\\\\\\\s]*)+':\t ['\\\\\\\\\\\\\\\\', '/'], // replace \"foo\\\\string\" with \"foo/string\"\t!!!! ONE BACKLASH IN STRING '\\' MUST BE ESCAPED '\\\\\\\\'", 
    "\t\t'([^\\\\\\\\\\\\s]*\\\\\\\\[^\\\\\\\\\\\\s]*)+':\t ['\\\\\\\\', '\\\\\\\\\\\\\\\\'],  \t    // replace \"foo\\string\" with \"foo\\\\string\"\t!!!! ONE BACKLASH IN STRING '\\' MUST BE ESCAPED '\\\\\\\\'", 
    "", 
    "\t\t'asc':\t 'desc',", 
    "\t\t'desc':\t 'asc',", 
    "", 
    "\t\t'on':\t 'off',", 
    "\t\t'off':\t 'on',", 
    "", 
    "\t\t'first_name':\t 'last_name',", 
    "\t\t'last_name':\t 'name',", 
    "\t\t'name':\t 'first_name',", 
    "", 
    "\t\t'string':\t 'integer',", 
    "\t\t'integer':\t 'array',", 
    "\t\t'array':\t 'object',", 
    "\t\t'object':\t 'string',", 
    "", 
    "\t\t'before':\t 'after',", 
    "\t\t'after':\t 'hover',", 
    "\t\t'hover':\t 'active',", 
    "\t\t'active':\t 'before',", 
    "", 
    "\t\t'h1':\t 'h2',", 
    "\t\t'h2':\t 'h3',", 
    "\t\t'h3':\t 'h4',", 
    "\t\t'h4':\t 'h5',", 
    "\t\t'h5':\t 'h1',", 
    "", 
    "\t\t'xs':\t 'sm',", 
    "\t\t'sm':\t 'md',", 
    "\t\t'md':\t 'lg',", 
    "\t\t'lg':\t 'xl',", 
    "\t\t'xl':\t 'xs',", 
    "", 
    "\t\t'created_at':\t 'updated_at',", 
    "\t\t'updated_at':\t 'created_at',", 
    "", 
    "\t\t'width':\t 'height',", 
    "\t\t'height':\t 'width',", 
    "", 
    "\t\t'red':\t 'green',", 
    "\t\t'green':\t 'blue',", 
    "\t\t'blue':\t 'violet',", 
    "\t\t'violet':\t 'yellow',", 
    "\t\t'yellow':\t 'red',", 
    "", 
    "\t\t'left':\t 'middle',", 
    "\t\t'middle':\t 'right',", 
    "\t\t'right':\t 'top',", 
    "\t\t'top':\t 'bottom',", 
    "\t\t'bottom':\t 'left',", 
    "", 
    "\t\t'up':\t 'down',", 
    "\t\t'down':\t 'up',", 
    "", 
    "\t\t'value':\t 'key',", 
    "\t\t'key':\t 'value',", 
    "", 
    "\t\t'show':\t 'hide',", 
    "\t\t'hide':\t 'show',", 
    "", 
    "\t\t'min':\t 'max',", 
    "\t\t'max':\t 'min',", 
    "    },", 
    "    /* =========== PHP =========== */", 
    "    PHP:{", 
    "\t\t'array_values':\t 'array_keys',", 
    "\t\t'array_keys':\t 'array_values',", 
    "", 
    "\t\t'findBySlug':\t 'findBySlugOrId',", 
    "\t\t'findBySlugOrId':\t 'findBySlug',", 
    "", 
    "\t\t'get':\t 'set',", 
    "\t\t'set':\t 'has',", 
    "\t\t'has':\t 'get',", 
    "", 
    "\t\t'public':\t'private',", 
    "\t\t'private':\t'public',", 
    "", 
    "\t\t'array_combine':\t'array_merge',", 
    "\t\t'array_merge':\t'array_combine',", 
    "", 
    "    },", 
    "    /* =========== LaravelBlade =========== */", 
    "    LaravelBlade:{", 
    "\t\t'(\\\\s*){{\\\\s*(.*)\\\\s*}}\\\\s*'          :\t '\\\\1{!!\\\\2!!}',", 
    "\t\t'(\\\\s*){\\\\!\\\\!\\\\s*(.*)\\\\s*\\\\!\\\\!}\\\\s*':\t '\\\\1{{\\\\2}}',", 
    "", 
    "\t\t'col':\t'offset',", 
    "\t\t'offset':\t'col',", 
    "", 
    "", 
    "    },", 
    "    /* =========== js =========== */", 
    "    JavaScript:{", 
    "", 
    "\t\t'_this':\t 'this',", 
    "\t\t'this':\t '_this',", 
    "", 
    "\t\t'alert':\t 'console.log',", 
    "\t\t'console.log':\t 'alert',", 
    "", 
    "\t\t'cmd_endOfWordExtend':\t 'cmd_beginningOfWordExtend',", 
    "\t\t'cmd_beginningOfWordExtend':\t 'cmd_endOfWordExtend',", 
    "", 
    "\t\t'cmd_selectCharNext':\t 'cmd_selectCharPrevious',", 
    "\t\t'cmd_selectCharPrevious':\t 'cmd_selectCharNext',", 
    "", 
    "\t\t'cmd_endOfWord':\t 'cmd_beginningOfWord',", 
    "\t\t'cmd_beginningOfWord':\t 'cmd_endOfWord',", 
    "", 
    "\t\t'cmd_right':\t 'cmd_left',", 
    "\t\t'cmd_left':\t 'cmd_right',", 
    "", 
    "\t\t'first':\t 'last',", 
    "\t\t'last':\t 'first',", 
    "", 
    "", 
    "", 
    "\t\t/* =========== JQUERY =========== */", 
    "\t\t'addClass':\t 'removeClass',", 
    "\t\t'removeClass':\t 'hasClass',", 
    "\t\t'hasClass':\t 'addClass',", 
    "", 
    "\t\t'slideDown':\t 'slideUp',", 
    "\t\t'slideUp':\t 'slideDown',", 
    "", 
    "\t\t'currentPos':\t 'anchor',", 
    "\t\t'anchor':\t 'currentPos',", 
    "", 
    "", 
    "    },", 
    "    /* =========== sass =========== */", 
    "    SCSS:{", 
    "\t\t'margin':\t 'padding',", 
    "\t\t'padding':\t 'margin',", 
    "", 
    "\t\t'lighten':\t 'darken',", 
    "\t\t'darken':\t 'lighten',", 
    "", 
    "\t\t'font-size':\t 'font-style',", 
    "\t\t'font-style':\t 'font-weight',", 
    "\t\t'font-weight':\t 'font-size',", 
    "", 
    "", 
    "", 
    "    },", 
    "    /* =========== Maxscript =========== */", 
    "    Maxscript:{", 
    "\t\t'pressed':\t 'rightclick',", 
    "\t\t'rightclick':\t 'pressed',", 
    "    },", 
    "    /* =========== Autohotkey =========== */", 
    "    Autohotkey:{", 
    "\t\t'up':\t 'down',", 
    "\t\t'down':\t 'up',", 
    "\t\t", 
    "\t\t'File_isFile':\t 'File_isDir',", 
    "\t\t'File_isDir':\t 'File_isFile',", 
    "\t\t", 
    "\t\t'IfWinExist':\t 'IfWinNotExist',", 
    "\t\t'IfWinNotExist':\t 'IfWinActive',", 
    "\t\t'IfWinActive':\t 'IfWinNotActive',", 
    "\t\t'IfWinNotActive':\t 'IfWinExist ',", 
    "\t\t", 
    "\t\t'WinWaitActive':\t 'WinWaitNotActive',", 
    "\t\t'WinWaitNotActive':\t 'WinWaitActive',", 
    "\t\t", 
    "\t\t'FileCreateDir':\t 'FileRemoveDir',", 
    "\t\t'FileRemoveDir':\t 'FileCreateDir',", 
    "\t\t", 
    "\t\t'Run':\t 'RunWait',", 
    "\t\t'RunWait':\t 'Run',", 
    "\t\t//'Left':\t 'Right',", 
    "\t\t//'Right':\t 'Middle',", 
    "\t\t//'Middle':\t 'Left',", 
    "\t\t'WinMinimize':\t 'WinMaximize',", 
    "\t\t'WinMaximize':\t 'WinRestore',", 
    "\t\t'WinRestore':\t 'WinMinimize',", 
    "\t\t", 
    "\t\t'WheelDown':\t 'WheelUp',", 
    "\t\t'WheelUp':\t 'WheelDown',", 
    "\t\t", 
    "\t\t'Trace_ON':\t 'Trace_OFF',", 
    "\t\t'Trace_OFF':\t 'Trace_ON',", 
    "\t\t", 
    "\t\t'A_WorkingDir':\t 'A_ScriptFullPath',", 
    "\t\t'A_ScriptFullPath':\t 'A_ScriptName',", 
    "\t\t'A_ScriptName':\t 'A_ScriptDir',", 
    "\t\t'A_ScriptDir':\t 'A_WorkingDir',", 
    "\t\t", 
    "\t\t'StringLeft':\t 'StringRight',", 
    "\t\t'StringRight':\t 'StringLeft',", 
    "\t\t", 
    "\t\t'StringUpper':\t 'StringLower',", 
    "\t\t'StringLower':\t 'StringUpper',", 
    "\t\t", 
    "\t\t'IfNotInString':\t 'IfInString',", 
    "\t\t'IfInString':\t 'IfNotInString',", 
    "\t\t", 
    "\t\t'Num_isOdd':\t 'Num_isEven',", 
    "\t\t'Num_isEven':\t 'Num_isOdd',", 
    "\t\t", 
    "\t\t'append':\t 'insert',", 
    "\t\t'insert':\t 'append',", 
    "\t\t", 
    "\t\t'A_LoopFileName':\t 'A_LoopFileExt',", 
    "\t\t'A_LoopFileExt':\t 'A_LoopFileLongPath',", 
    "\t\t'A_LoopFileLongPath':\t 'A_LoopFileDir',", 
    "\t\t'A_LoopFileDir':\t 'A_LoopFileTimeModified',", 
    "\t\t'A_LoopFileTimeModified':\t 'A_LoopFileTimeCreated',", 
    "\t\t'A_LoopFileTimeCreated':\t 'A_LoopFileAttrib',", 
    "\t\t'A_LoopFileAttrib':\t 'A_LoopFileSize',", 
    "\t\t'A_LoopFileSize':\t 'A_LoopFileName',", 
    "\t\t", 
    "\t\t/* LOOP VARIABLES */", 
    "\t\t'A_Index':\t 'A_LoopField',", 
    "\t\t'A_LoopField':\t 'A_LoopReadLine',", 
    "\t\t'A_LoopReadLine':\t 'A_Index',", 
    "\t\t", 
    "\t\t/*\tGUI\t*/", 
    "\t\t'GuiEscape':\t 'GuiClose',", 
    "\t\t'GuiClose':\t 'GuiEscape',", 
    "\t\t", 
    "    },", 
    "\t/* =========== Komodo Snippet =========== */", 
    "    \"Komodo Snippet\":{", 
    "\t\t\"file\":\t\"filename\",", 
    "\t\t\"filename\":\t\"fileext\",", 
    "\t\t\"fileext\":\t\"path\",", 
    "\t\t\"path\":\t\"relpath\",", 
    "\t\t\"relpath\":\t\"abspath\",", 
    "\t\t\"abspath\":\t\"folderpath\",", 
    "\t\t\"folderpath\":\t\"relfolderpath\",", 
    "\t\t\"relfolderpath\":\t\"absfolderpath\",", 
    "\t\t\"absfolderpath\":\t\"uri\",", 
    "\t\t\"uri\":\t\"folderuri\",", 
    "\t\t\"folderuri\":\t\"varname\",", 
    "\t\t\"varname\":\t\"file\",", 
    "\t\t", 
    "\t\t\"tabstop\":\t\"soft\",", 
    "\t\t\"soft\":\t\"tabstop\",\t\t\t\t", 
    "\t}", 
    "", 
    "};", 
    "", 
    "var matches_multiple = [", 
    "\t['\\\\$(\\\\w+)', '\\\\1', ['PHP']],", 
    "];", 
    "", 
    "function mergeMatches() {", 
    "\tvar lang = ko.views.manager.currentView.languageObj.name;", 
    "\tvar mergedMatches = {};", 
    "\tvar matches_lang = metches[lang];", 
    "\t/*    MERGE metches array    */", 
    "\tif ( typeof matches_lang != 'undefined') {", 
    "\t\tfor ( var key in matches_lang ) {", 
    "\t\t\tmergedMatches[key] = matches_lang[key];", 
    "\t\t}", 
    "\t}", 
    "\tfor (i = 0; i < matches_multiple.length; i++) {", 
    "\t\tvar include_match = matches_multiple[i];", 
    "\t\tif ( typeof include_match[2] != 'undefined' || include_match[2].indexOf(lang) > -1) {", 
    "\t\t\tmergedMatches[include_match[0]] = include_match[1];", 
    "\t\t}", 
    "\t}", 
    "\tvar mergedMatches = mergeObjects( mergedMatches, metches.global );", 
    "\treturn mergedMatches;", 
    "}", 
    "", 
    "function mergeObjects( obj1, obj2) {", 
    "\tvar obj3 = {};", 
    "\t", 
    "\tfor ( var attrname in obj1) { obj3[attrname] = obj1[attrname]; }", 
    "\tfor ( var attrname in obj2) { obj3[attrname] = obj2[attrname]; }", 
    "\treturn obj3;", 
    "}", 
    "/**", 
    "*", 
    "*", 
    "*", 
    "**/", 
    "try {", 
    "\t//var SUCCESS = false;", 
    "\t//var lang = ko.views.manager.currentView.languageObj.name;", 
    "\t//////alert(lang);", 
    "\t//quotes = false;", 
    "\t//scimoz = ko.views.manager.currentView.scimoz;", 
    "\t//var selectedText = scimoz.selText.trim();", 
    "\t//var wordCursor = ko.interpolate.getWordUnderCursor(scimoz);", 
    "\t//", 
    "\t//if ( komodo.view ){ komodo.view.setFocus();}", 
    "\t//if ( selectedText == '') {", 
    "\t//\tko.commands.doCommand('cmd_selectWordUnderCursor')", 
    "\t//\tvar selectedText = scimoz.selText.trim();", 
    "\t//}", 
    "\t//if ( typeof TEST != 'undefined' && TEST == true ) {", 
    "\t//\tTEST_match( selectedText, testRegExString ) ;", 
    "\t//}", 
    "\t////alert( selectedText+'-----------' );", 
    "\t//", 
    "\t///* =========== TRY FIND MATCH  =========== */", 
    "\t//if ( typeof REPLACE == 'undefined' || REPLACE == true ) {", 
    "\t//\tloopMatches();", 
    "\t//}", 
    "\t//", 
    "\t////ko.commands.doCommand('cmd_cancel')", 
    "\t//", 
    "\t///* =========== IF MATCH DOES NOT FOUND  =========== */", 
    "\t//if (SUCCESS==false) {", 
    "\t//", 
    "\t//", 
    "\t//\t/*\tCamelCase to snake_case TOGGLE\t*/", 
    "\t//\t_part = komodo.findPart('macro', 'snake_camelCase_toggle')", 
    "\t//\tif (!_part) {alert(\"Couldn't find a macro called 'snake_camelCase_toggle' when executing macro.\"); return", 
    "\t//\t}", 
    "\t//\t//ko.projects.invokePart(_part);", 
    "\t//", 
    "\t//", 
    "\t//", 
    "\t//}", 
    "\t//", 
    "\t//", 
    "\t////alert(SUCCESS);", 
    "", 
    "", 
    "} finally {", 
    "\tko.views.manager.currentView.scimoz.endUndoAction()", 
    "}", 
    "", 
    "", 
    "function loopMatches() {", 
    "\t//alert('loopMatches');", 
    "\tvar mergedMatches = mergeMatches()", 
    "\tfor ( var key in mergedMatches ) {", 
    "\t\tvar replace = mergedMatches[key];", 
    "\t\tvar search = key;", 
    "\t\tvar match = key;", 
    "\t\tif ( typeof replace != 'string') {", 
    "\t\t\tvar search = replace[0];", 
    "\t\t\tvar replace = replace[1];", 
    "\t\t};", 
    "\t\tmatchSearchReplace( selectedText, match, search, replace )", 
    "\t}", 
    "}", 
    "", 
    "function matchSearchReplace( selectedText, match, search, replace ) {", 
    "\tif ( SUCCESS === false ) {", 
    "\t\tvar regex_ = new RegExp('^'+match+'$', \"gi\");", 
    "\t\tvar regex_match = regex_.exec(selectedText);", 
    "\t\tif ( regex_match != null ) {", 
    "", 
    "\t\t\t//alert( selectedText+'---' );", 
    "\t\t\t//alert( search+'---' );", 
    "\t\t\t//alert( replace+'---' );", 
    "\t\t\t//ko.commands.doCommand('cmd_left')", 
    "\t\t\tko.find.replaceAllInMacro( window, 1, search, replace.trim(), true, 2, 0, false, false );      // working with laravelblade", 
    "", 
    "\t\t\t//ko.find.findNextInMacro(window, 0, search, 2, 0, false, false, find, false, true);", 
    "", 
    "\t\t\t//komodo.view.selection = replace;", 
    "", 
    "\t\t\tSUCCESS = true;", 
    "\t\t}", 
    "\t}", 
    "}", 
    "", 
    "function escapeSlash(string) {", 
    "\treturn string.replace(/\\\\/gi, '\\\\\\\\\\\\\\\\');", 
    "}", 
    "", 
    "", 
    "function toggleBlade(mode) {", 
    "\tvar selectedLine = scimoz.selText;", 
    "\tvar new_line = selectedLine", 
    "\tif ( mode == 'to_escape') {", 
    "\tnew_line = new_line.replace(/{{/i, \"{!!\");", 
    "\tnew_line = new_line.replace(/}}/i, \"!!}\");", 
    "", 
    "\t} else if ( mode == 'to_double') {", 
    "\tnew_line = new_line.replace(/{\\!\\!/i, \"{{\");", 
    "\tnew_line = new_line.replace(/\\!\\!}/i, \"}}\");", 
    "\t}", 
    "\tko.commands.doCommand('cmd_delete');", 
    "\tkomodo.view.selection = new_line;", 
    "\tko.commands.doCommand('cmd_left')", 
    "}", 
    "function TEST_match( selectedText, regExString ) {", 
    "\tvar regex_ = new RegExp( regExString, \"g\");", 
    "\tvar regex_ = new RegExp('*', \"g\");", 
    "\tvar regex_match = regex_.exec(selectedText);", 
    "\tif ( regex_match ) {", 
    "\t\tko.find.replaceAllInMacro( window, 1, '\\\\\\\\', 'X', true, 2, 0, false, false );      // working with laravelblade", 
    "\t}", 
    "}"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "trigger_enabled": 0, 
  "async": 1, 
  "type": "macro"
}
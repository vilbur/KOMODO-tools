{
  "keyboard_shortcut": "", 
  "name": "imp", 
  "value": [
    "<%", 
    "/* insert snippet like 'import /relative/path' by language", 
    " *", 
    " */", 
    "function getSnippetValue()", 
    "{", 
    "\tvar lang\t= ko.views.manager.currentView.languageObj.name;", 
    "\tvar file_current\t= ko.views.manager.currentView.koDoc.file.path;", 
    "\tvar file_import;", 
    "\tvar file_import_name;", 
    "\tvar path_relative;", 
    "", 
    "\tvar getSnippetByLang = function()", 
    "\t{", 
    "\t\tvar snippets_by_lang = {", 
    "\t\t\tget SCSS(){", 
    "\t\t\t\treturn \"@import '\"+path_relative.substring(3)+\"';[[%tabstop:]]\";", 
    "\t\t\t},", 
    "\t\t\tget JavaScript(){", 
    "\t\t\t\treturn \"import [[%tabstop:[[%tabstop:\"+kebabCase(file_import_name)+\"]]\\tfrom ]]'\"+path_relative.substring(1)+\"';[[%tabstop:]]\";", 
    "\t\t\t},", 
    "\t\t\tdefault: '[[%tabstop:]]' + path_relative + '[[%tabstop:]]'", 
    "\t\t};", 
    "", 
    "\t\treturn typeof snippets_by_lang[lang] !== 'undefined' ? snippets_by_lang[lang] : snippets_by_lang.default", 
    "\t};", 
    "\tvar kebabCase = function(string)", 
    "\t{", 
    "\t\treturn string.replace(/[^A-Z]+/gi, ' ').replace(/\\w\\S*/g, function(str){return str.charAt(0).toUpperCase() + str.substr(1).toLowerCase();}).replace(/\\s+/gi, '');", 
    "\t};", 
    "\tvar browseImportFile = function()", 
    "\t{", 
    "\t\tfile_import\t= ko.filepicker.browseForFile();", 
    "\t\tfile_import_name\t= file_import.split(/[\\\\\\/]/gi).pop().replace(/\\.[^\\.]+$/gi, '');", 
    "\t};", 
    "\tvar getRelativePath = function(fromPath, toPath)", 
    "\t{", 
    "\t\tvar nsFileFrom = Components.classes[\"@mozilla.org/file/local;1\"]", 
    "\t\t\t\t\t\t\t  .createInstance(Components.interfaces.nsILocalFile);", 
    "\t\tnsFileFrom.initWithPath(fromPath);", 
    "\t\tvar nsFileTo = Components.classes[\"@mozilla.org/file/local;1\"]", 
    "\t\t\t\t\t\t\t  .createInstance(Components.interfaces.nsILocalFile);", 
    "\t\tnsFileTo.initWithPath(toPath);", 
    "\t\treturn nsFileTo.getRelativeDescriptor(nsFileFrom);", 
    "\t}", 
    "\tvar setPathRelative = function()", 
    "\t{", 
    "\t\tpath_relative = getRelativePath(file_current, file_import)", 
    "\t};", 
    "", 
    "", 
    "\tbrowseImportFile();", 
    "\tsetPathRelative();", 
    "\treturn getSnippetByLang();", 
    "};", 
    "", 
    "", 
    "/* FAKE SNIPPET", 
    " *", 
    " */", 
    "var fake_snippet = {", 
    "\thasAttribute: function(name) {", 
    "\t\treturn name in this;", 
    "\t},", 
    "\tgetStringAttribute: function(name) {", 
    "\t\treturn this[name];", 
    "\t},", 
    "\tname:\t\"fake snippetX\",", 
    "\tindent_relative: \"true\",", 
    "\tvalue: getSnippetValue()", 
    "};", 
    "/* INSERT SNIPPET */", 
    "setTimeout( function(){", 
    "\tko.projects.snippetInsert(fake_snippet);", 
    "}, 100);", 
    "%>!@#_currentPos!@#_anchor"
  ], 
  "set_selection": "false", 
  "version": "1.0.12", 
  "indent_relative": "true", 
  "type": "snippet", 
  "treat_as_ejs": "true", 
  "auto_abbreviation": "false"
}
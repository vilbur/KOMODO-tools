{
  "keyboard_shortcut": "", 
  "name": "getNamespace", 
  "language": "JavaScript", 
  "trigger_enabled": 1, 
  "value": [
    "/** Get namespace of current file", 
    " * \tcase 1) file is in app directory, then return E.G: '\\App\\'", 
    " *", 
    " * \tcase 2)", 
    " *", 
    " * @return string", 
    " */", 
    "ko.extensions.getNamespace = function(path){", 
    "", 
    "\tvar Logger\t= ko.extensions.Logger_v3 ? new ko.extensions.Logger_v3(this).clear(false).off(false) : require('ko/console');", 
    "\tvar laravel_path\t= '';", 
    "\tvar file_dir\t= '';", 
    "\tvar namespace\t= '';", 
    "", 
    "\t/** getNamespace", 
    "\t */", 
    "\tvar getNamespace = function(){", 
    "\t\tsetFileDir();", 
    "\t\tsetNamespace();", 
    "\t\tcapitalizeNamespace();", 
    "\t\t//Logger.info(namespace, 'namespace');", 
    "\t\treturn namespace ? namespace : false;", 
    "\t};", 
    "", 
    "\t/** set File Dir by given path or get pat of current file if  path is empty", 
    "\t */", 
    "\tvar setFileDir = function()", 
    "\t{", 
    "\t\tfile_dir\t= path.match(/\\.\\w+$/) ? require(\"ko/file\").dirname(path) : path;", 
    "\t};", 
    "\t/** set File Dir by given path or get pat of current file if  path is empty", 
    "\t */", 
    "\tvar setLaravelPath = function()", 
    "\t{", 
    "\t\t//Logger.info(path, 'path');", 
    "\t\tlaravel_path\t= ko.extensions.getLaravelPath(path);", 
    "\t\t//Logger.info(laravel_path, 'laravel_path');", 
    "\t};", 
    "\t/** setNamespace", 
    "\t*/", 
    "\tfunction setNamespace()", 
    "\t{", 
    "\t\tif(isFileInTests() || isFileInPackages())", 
    "\t\t\tnamespace = isFileInTests() ? getNamespaceFromTestsPath() : getNamespaceFromPackagesPath();", 
    "\t\telse", 
    "\t\t\tnamespace = getNamespaceFromAppPath();", 
    "\t}", 
    "\t/** is namespace matching any item from suffixes ?", 
    "\t *\tE.G:\t'\\App\\Controllers'\t>>> 'Controller'", 
    "\t * @return string", 
    "\t*/", 
    "\tfunction isFileInTests()", 
    "\t{", 
    "\t\treturn file_dir.match(/\\\\tests*\\\\/gi) ? true : false;", 
    "\t}", 
    "\t/** is namespace matching any item from suffixes ?", 
    "\t *\tE.G:\t'\\App\\Controllers'\t>>> 'Controller'", 
    "\t * @return string", 
    "\t*/", 
    "\tfunction isFileInPackages()", 
    "\t{", 
    "\t\treturn file_dir.match(/\\\\packages\\\\[^\\\\\\s]+\\\\/gi) ? true : false;", 
    "\t}", 
    "\t/** getNamespaceFromAppPath", 
    "\t*/", 
    "\tfunction getNamespaceFromAppPath()", 
    "\t{", 
    "\t\treturn file_dir.replace(laravel_path+'\\\\', '');", 
    "\t}", 
    "\t/** getNamespaceFromPackagesPath", 
    "\t*/", 
    "\tfunction getNamespaceFromPackagesPath()", 
    "\t{", 
    "\t\treturn file_dir.split(/\\\\packages\\\\/gi).pop().replace(/\\\\src/gi, '');", 
    "\t}", 
    "\t/** getNamespaceFromTestsPath", 
    "\t*/", 
    "\tfunction getNamespaceFromTestsPath()", 
    "\t{", 
    "\t\t//return file_dir.split(/\\\\tests*\\\\/gi).pop();", 
    "\t\treturn file_dir.replace(/.*\\\\(tests*)\\\\/gi, '$1\\\\');", 
    "\t}", 
    "\t/** capitalizeNamespace", 
    "\t*/", 
    "\tfunction capitalizeNamespace()", 
    "\t{", 
    "\t\tnamespace = namespace.replace(/[_-]+/, ' ')", 
    "\t\t\t\t\t\t\t .replace(/(?:^|\\\\|\\s)[a-z]/g, function(letter){return letter.toUpperCase();})", 
    "\t\t\t\t\t\t\t .replace(/\\s+/, '');", 
    "\t}", 
    "", 
    "\tsetLaravelPath();", 
    "\treturn laravel_path ? getNamespace() : false;", 
    "};", 
    "", 
    "", 
    "/** NameSpaceTest", 
    "*/", 
    "function NameSpaceTest(){", 
    "\tvar Logger\t= ko.extensions.Logger_v3 ? new ko.extensions.Logger_v3(this).clear(true).off(false) : require('ko/console');", 
    "", 
    "\tvar laravel_path\t= 'c:\\\\wamp64\\\\www\\\\laravel-fresh';", 
    "\tvar path_app\t= laravel_path + '\\\\app';", 
    "\tvar path_commands\t= laravel_path + '\\\\app\\\\Commands\\\\CommandHandler.php';", 
    "\tvar path_controller\t= laravel_path + '\\\\app\\\\Http\\\\Controllers';", 
    "\tvar path_packages\t= laravel_path + '\\\\packages\\\\vilbur\\\\foo-package';", 
    "\tvar path_tests\t= laravel_path + '\\\\tests\\\\unit';", 
    "\tvar non_laravel_path\t= 'c:\\\\Users\\\\vilbur\\\\AppData\\\\Local\\\\Temp';", 
    "", 
    "\tLogger.info( typeof(\tko.extensions.getNamespace(path_app))\t=== 'string',\t'path_app' );", 
    "\tLogger.info( typeof(\tko.extensions.getNamespace(path_controller))\t=== 'string',\t'path_controller' );", 
    "\tLogger.info( typeof(\tko.extensions.getNamespace(path_commands))\t=== 'string',\t'path_commands' );", 
    "\tLogger.info( typeof(\tko.extensions.getNamespace(path_packages))\t=== 'string',\t'path_packages' );", 
    "\tLogger.info( typeof(\tko.extensions.getNamespace(path_tests))\t=== 'string',\t'path_tests' );", 
    "\tLogger.info(\tko.extensions.getNamespace(non_laravel_path)\t=== false,\t'non_laravel_path'  );", 
    "", 
    "}", 
    "", 
    "//NameSpaceTest();"
  ], 
  "version": "1.0.12", 
  "rank": 100, 
  "async": 1, 
  "type": "macro", 
  "trigger": "trigger_startup"
}